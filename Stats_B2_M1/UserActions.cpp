// automatically generated file, don't change manually!

#include "stdafx.h"
#include "../libdb/ReportMetaInfo.h"
#include "../libdb/Checksum.h"
#include "../System/XmlSaver.h"
#include "useractions.h"
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace NDb
{
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
string EnumToString( NDb::EUserAction eValue )
{
	switch ( eValue )
	{
	case NDb::USER_ACTION_UNKNOWN:
		return "USER_ACTION_UNKNOWN";
	case NDb::USER_ACTION_MOVE:
		return "USER_ACTION_MOVE";
	case NDb::USER_ACTION_ATTACK:
		return "USER_ACTION_ATTACK";
	case NDb::USER_ACTION_SWARM:
		return "USER_ACTION_SWARM";
	case NDb::USER_ACTION_BOARD:
		return "USER_ACTION_BOARD";
	case NDb::USER_ACTION_LEAVE:
		return "USER_ACTION_LEAVE";
	case NDb::USER_ACTION_ROTATE:
		return "USER_ACTION_ROTATE";
	case NDb::USER_ACTION_INSTALL:
		return "USER_ACTION_INSTALL";
	case NDb::USER_ACTION_UNINSTALL:
		return "USER_ACTION_UNINSTALL";
	case NDb::USER_ACTION_GUARD:
		return "USER_ACTION_GUARD";
	case NDb::USER_ACTION_AMBUSH:
		return "USER_ACTION_AMBUSH";
	case NDb::USER_ACTION_FORMATION:
		return "USER_ACTION_FORMATION";
	case NDb::USER_ACTION_RANGING:
		return "USER_ACTION_RANGING";
	case NDb::USER_ACTION_FOLLOW:
		return "USER_ACTION_FOLLOW";
	case NDb::USER_ACTION_ENTRENCH_SELF:
		return "USER_ACTION_ENTRENCH_SELF";
	case NDb::USER_ACTION_STAND_GROUND:
		return "USER_ACTION_STAND_GROUND";
	case NDb::USER_ACTION_MOVE_TO_GRID:
		return "USER_ACTION_MOVE_TO_GRID";
	case NDb::USER_ACTION_CAPTURE_ARTILLERY:
		return "USER_ACTION_CAPTURE_ARTILLERY";
	case NDb::USER_ACTION_ENGINEER_PLACE_MINES:
		return "USER_ACTION_ENGINEER_PLACE_MINES";
	case NDb::USER_ACTION_ENGINEER_CLEAR_MINES:
		return "USER_ACTION_ENGINEER_CLEAR_MINES";
	case NDb::USER_ACTION_ENGINEER_BUILD_DEFENSE:
		return "USER_ACTION_ENGINEER_BUILD_DEFENSE";
	case NDb::USER_ACTION_ENGINEER_BUILD_ENTRENCHMENT:
		return "USER_ACTION_ENGINEER_BUILD_ENTRENCHMENT";
	case NDb::USER_ACTION_ENGINEER_REPAIR:
		return "USER_ACTION_ENGINEER_REPAIR";
	case NDb::USER_ACTION_SUPPORT_RESUPPLY:
		return "USER_ACTION_SUPPORT_RESUPPLY";
	case NDb::USER_ACTION_FILL_RU:
		return "USER_ACTION_FILL_RU";
	case NDb::USER_ACTION_HOOK_ARTILLERY:
		return "USER_ACTION_HOOK_ARTILLERY";
	case NDb::USER_ACTION_DEPLOY_ARTILLERY:
		return "USER_ACTION_DEPLOY_ARTILLERY";
	case NDb::USER_ACTION_FORMATION_0:
		return "USER_ACTION_FORMATION_0";
	case NDb::USER_ACTION_FORMATION_3:
		return "USER_ACTION_FORMATION_3";
	case NDb::USER_ACTION_FORMATION_2:
		return "USER_ACTION_FORMATION_2";
	case NDb::USER_ACTION_FORMATION_1:
		return "USER_ACTION_FORMATION_1";
	case NDb::USER_ACTION_FORMATION_4:
		return "USER_ACTION_FORMATION_4";
	case NDb::USER_ACTION_USE_SHELL_DAMAGE:
		return "USER_ACTION_USE_SHELL_DAMAGE";
	case NDb::USER_ACTION_USE_SHELL_AGIT:
		return "USER_ACTION_USE_SHELL_AGIT";
	case NDb::USER_ACTION_USE_SHELL_SMOKE:
		return "USER_ACTION_USE_SHELL_SMOKE";
	case NDb::USER_ACTION_PLACE_MARKER:
		return "USER_ACTION_PLACE_MARKER";
	case NDb::USER_ACTION_CHANGE_MOVEMENT_ORDER:
		return "USER_ACTION_CHANGE_MOVEMENT_ORDER";
	case NDb::USER_ACTION_DISBAND_SQUAD:
		return "USER_ACTION_DISBAND_SQUAD";
	case NDb::USER_ACTION_FORM_SQUAD:
		return "USER_ACTION_FORM_SQUAD";
	case NDb::USER_ACTION_STOP:
		return "USER_ACTION_STOP";
	case NDb::USER_ACTION_SPYGLASS:
		return "USER_ACTION_SPYGLASS";
	case NDb::USER_ACTION_MECH_BOARD:
		return "USER_ACTION_MECH_BOARD";
	case NDb::USER_ACTION_ENGINEER_BUILD_FENCE:
		return "USER_ACTION_ENGINEER_BUILD_FENCE";
	case NDb::USER_ACTION_ABILITY:
		return "USER_ACTION_ABILITY";
	case NDb::USER_ACTION_CAMOFLAGE:
		return "USER_ACTION_CAMOFLAGE";
	case NDb::USER_ACTION_THROW:
		return "USER_ACTION_THROW";
	case NDb::USER_ACTION_ADVANCED_CAMOFLAGE:
		return "USER_ACTION_ADVANCED_CAMOFLAGE";
	case NDb::USER_ACTION_LAND_MINE:
		return "USER_ACTION_LAND_MINE";
	case NDb::USER_ACTION_BLASTING_CHARGE:
		return "USER_ACTION_BLASTING_CHARGE";
	case NDb::USER_ACTION_CONTROLLED_CHARGE:
		return "USER_ACTION_CONTROLLED_CHARGE";
	case NDb::USER_ACTION_DETONATE:
		return "USER_ACTION_DETONATE";
	case NDb::USER_ACTION_HOLD_SECTOR:
		return "USER_ACTION_HOLD_SECTOR";
	case NDb::USER_ACTION_TRACK_TARGETING:
		return "USER_ACTION_TRACK_TARGETING";
	case NDb::USER_ACTION_SUPPRESS:
		return "USER_ACTION_SUPPRESS";
	case NDb::USER_ACTION_CRITICAL_TARGETTING:
		return "USER_ACTION_CRITICAL_TARGETTING";
	case NDb::USER_ACTION_RAPID_FIRE:
		return "USER_ACTION_RAPID_FIRE";
	case NDb::USER_ACTION_COVER_FIRE:
		return "USER_ACTION_COVER_FIRE";
	case NDb::USER_ACTION_LINKED_GRENADES:
		return "USER_ACTION_LINKED_GRENADES";
	case NDb::USER_ACTION_SUPPORT_FIRE:
		return "USER_ACTION_SUPPORT_FIRE";
	case NDb::USER_ACTION_PATROL:
		return "USER_ACTION_PATROL";
	case NDb::USER_ACTION_KAMIKAZE:
		return "USER_ACTION_KAMIKAZE";
	case NDb::USER_ACTION_FLAMETHROWER:
		return "USER_ACTION_FLAMETHROWER";
	case NDb::USER_ACTION_CAUTION:
		return "USER_ACTION_CAUTION";
	case NDb::USER_ACTION_EXACT_SHOT:
		return "USER_ACTION_EXACT_SHOT";
	case NDb::USER_ACTION_COUNTER_FIRE:
		return "USER_ACTION_COUNTER_FIRE";
	case NDb::USER_ACTION_FIRST_AID:
		return "USER_ACTION_FIRST_AID";
	case NDb::USER_ACTION_SPY_MODE:
		return "USER_ACTION_SPY_MODE";
	case NDb::USER_ACTION_MOBILE_FORTRESS:
		return "USER_ACTION_MOBILE_FORTRESS";
	case NDb::USER_ACTION_MOVING_SHOOT:
		return "USER_ACTION_MOVING_SHOOT";
	case NDb::USER_ACTION_MASTER_OF_STREETS:
		return "USER_ACTION_MASTER_OF_STREETS";
	case NDb::USER_ACTION_ADRENALINE_RUSH:
		return "USER_ACTION_ADRENALINE_RUSH";
	case NDb::USER_ACTION_ZEROING_IN:
		return "USER_ACTION_ZEROING_IN";
	case NDb::USER_ACTION_DROP_BOMB:
		return "USER_ACTION_DROP_BOMB";
	case NDb::USER_ACTION_EXACT_BOMBING:
		return "USER_ACTION_EXACT_BOMBING";
	case NDb::USER_ACTION_SMOKE_SHOTS:
		return "USER_ACTION_SMOKE_SHOTS";
	case NDb::USER_ACTION_GLOBE_BOMB_MISSION:
		return "USER_ACTION_GLOBE_BOMB_MISSION";
	case NDb::USER_ACTION_GLOBE_ATTACK_MISSION:
		return "USER_ACTION_GLOBE_ATTACK_MISSION";
	case NDb::USER_ACTION_GLOBE_BEGIN_WAR:
		return "USER_ACTION_GLOBE_BEGIN_WAR";
	case NDb::USER_ACTION_DROP_PARATROOPERS:
		return "USER_ACTION_DROP_PARATROOPERS";
	case NDb::USER_ACTION_MASTER_PILOT:
		return "USER_ACTION_MASTER_PILOT";
	case NDb::USER_ACTION_SKY_GUARD:
		return "USER_ACTION_SKY_GUARD";
	case NDb::USER_ACTION_SURVIVAL:
		return "USER_ACTION_SURVIVAL";
	case NDb::USER_ACTION_TANK_HUNTER:
		return "USER_ACTION_TANK_HUNTER";
	case NDb::USER_ACTION_REINF_COMMON:
		return "USER_ACTION_REINF_COMMON";
	case NDb::USER_ACTION_REINF_BOMB:
		return "USER_ACTION_REINF_BOMB";
	case NDb::USER_ACTION_REINF_PARATROOPERS:
		return "USER_ACTION_REINF_PARATROOPERS";
	case NDb::USER_ACTION_MOVE_LIKE_TERRAIN:
		return "USER_ACTION_MOVE_LIKE_TERRAIN";
	case NDb::USER_ACTION_REINF_NONE:
		return "USER_ACTION_REINF_NONE";
	case NDb::USER_ACTION_ADD_UNIT:
		return "USER_ACTION_ADD_UNIT";
	case NDb::USER_ACTION_REMOVE_UNIT:
		return "USER_ACTION_REMOVE_UNIT";
	case NDb::USER_ACTION_FORBIDDEN:
		return "USER_ACTION_FORBIDDEN";
	case NDb::USER_ACTION_SUPER_WEAPON_MODE:
		return "USER_ACTION_SUPER_WEAPON_MODE";
	case NDb::USER_ACTION_RADIO_CONTROLLED_MODE:
		return "USER_ACTION_RADIO_CONTROLLED_MODE";
	case NDb::USER_ACTION_MOVE_TRACK:
		return "USER_ACTION_MOVE_TRACK";
	case NDb::USER_ACTION_MOVE_WHELL:
		return "USER_ACTION_MOVE_WHELL";
	case NDb::USER_ACTION_MOVE_HUMAN:
		return "USER_ACTION_MOVE_HUMAN";
	default:
		return "USER_ACTION_UNKNOWN";
	}
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
NDb::EUserAction NDb::StringToEnum_NDb_EUserAction( const string &szValue )
{
	if ( szValue == "USER_ACTION_UNKNOWN" )
		return NDb::USER_ACTION_UNKNOWN;
	if ( szValue == "USER_ACTION_MOVE" )
		return NDb::USER_ACTION_MOVE;
	if ( szValue == "USER_ACTION_ATTACK" )
		return NDb::USER_ACTION_ATTACK;
	if ( szValue == "USER_ACTION_SWARM" )
		return NDb::USER_ACTION_SWARM;
	if ( szValue == "USER_ACTION_BOARD" )
		return NDb::USER_ACTION_BOARD;
	if ( szValue == "USER_ACTION_LEAVE" )
		return NDb::USER_ACTION_LEAVE;
	if ( szValue == "USER_ACTION_ROTATE" )
		return NDb::USER_ACTION_ROTATE;
	if ( szValue == "USER_ACTION_INSTALL" )
		return NDb::USER_ACTION_INSTALL;
	if ( szValue == "USER_ACTION_UNINSTALL" )
		return NDb::USER_ACTION_UNINSTALL;
	if ( szValue == "USER_ACTION_GUARD" )
		return NDb::USER_ACTION_GUARD;
	if ( szValue == "USER_ACTION_AMBUSH" )
		return NDb::USER_ACTION_AMBUSH;
	if ( szValue == "USER_ACTION_FORMATION" )
		return NDb::USER_ACTION_FORMATION;
	if ( szValue == "USER_ACTION_RANGING" )
		return NDb::USER_ACTION_RANGING;
	if ( szValue == "USER_ACTION_FOLLOW" )
		return NDb::USER_ACTION_FOLLOW;
	if ( szValue == "USER_ACTION_ENTRENCH_SELF" )
		return NDb::USER_ACTION_ENTRENCH_SELF;
	if ( szValue == "USER_ACTION_STAND_GROUND" )
		return NDb::USER_ACTION_STAND_GROUND;
	if ( szValue == "USER_ACTION_MOVE_TO_GRID" )
		return NDb::USER_ACTION_MOVE_TO_GRID;
	if ( szValue == "USER_ACTION_CAPTURE_ARTILLERY" )
		return NDb::USER_ACTION_CAPTURE_ARTILLERY;
	if ( szValue == "USER_ACTION_ENGINEER_PLACE_MINES" )
		return NDb::USER_ACTION_ENGINEER_PLACE_MINES;
	if ( szValue == "USER_ACTION_ENGINEER_CLEAR_MINES" )
		return NDb::USER_ACTION_ENGINEER_CLEAR_MINES;
	if ( szValue == "USER_ACTION_ENGINEER_BUILD_DEFENSE" )
		return NDb::USER_ACTION_ENGINEER_BUILD_DEFENSE;
	if ( szValue == "USER_ACTION_ENGINEER_BUILD_ENTRENCHMENT" )
		return NDb::USER_ACTION_ENGINEER_BUILD_ENTRENCHMENT;
	if ( szValue == "USER_ACTION_ENGINEER_REPAIR" )
		return NDb::USER_ACTION_ENGINEER_REPAIR;
	if ( szValue == "USER_ACTION_SUPPORT_RESUPPLY" )
		return NDb::USER_ACTION_SUPPORT_RESUPPLY;
	if ( szValue == "USER_ACTION_FILL_RU" )
		return NDb::USER_ACTION_FILL_RU;
	if ( szValue == "USER_ACTION_HOOK_ARTILLERY" )
		return NDb::USER_ACTION_HOOK_ARTILLERY;
	if ( szValue == "USER_ACTION_DEPLOY_ARTILLERY" )
		return NDb::USER_ACTION_DEPLOY_ARTILLERY;
	if ( szValue == "USER_ACTION_FORMATION_0" )
		return NDb::USER_ACTION_FORMATION_0;
	if ( szValue == "USER_ACTION_FORMATION_3" )
		return NDb::USER_ACTION_FORMATION_3;
	if ( szValue == "USER_ACTION_FORMATION_2" )
		return NDb::USER_ACTION_FORMATION_2;
	if ( szValue == "USER_ACTION_FORMATION_1" )
		return NDb::USER_ACTION_FORMATION_1;
	if ( szValue == "USER_ACTION_FORMATION_4" )
		return NDb::USER_ACTION_FORMATION_4;
	if ( szValue == "USER_ACTION_USE_SHELL_DAMAGE" )
		return NDb::USER_ACTION_USE_SHELL_DAMAGE;
	if ( szValue == "USER_ACTION_USE_SHELL_AGIT" )
		return NDb::USER_ACTION_USE_SHELL_AGIT;
	if ( szValue == "USER_ACTION_USE_SHELL_SMOKE" )
		return NDb::USER_ACTION_USE_SHELL_SMOKE;
	if ( szValue == "USER_ACTION_PLACE_MARKER" )
		return NDb::USER_ACTION_PLACE_MARKER;
	if ( szValue == "USER_ACTION_CHANGE_MOVEMENT_ORDER" )
		return NDb::USER_ACTION_CHANGE_MOVEMENT_ORDER;
	if ( szValue == "USER_ACTION_DISBAND_SQUAD" )
		return NDb::USER_ACTION_DISBAND_SQUAD;
	if ( szValue == "USER_ACTION_FORM_SQUAD" )
		return NDb::USER_ACTION_FORM_SQUAD;
	if ( szValue == "USER_ACTION_STOP" )
		return NDb::USER_ACTION_STOP;
	if ( szValue == "USER_ACTION_SPYGLASS" )
		return NDb::USER_ACTION_SPYGLASS;
	if ( szValue == "USER_ACTION_MECH_BOARD" )
		return NDb::USER_ACTION_MECH_BOARD;
	if ( szValue == "USER_ACTION_ENGINEER_BUILD_FENCE" )
		return NDb::USER_ACTION_ENGINEER_BUILD_FENCE;
	if ( szValue == "USER_ACTION_ABILITY" )
		return NDb::USER_ACTION_ABILITY;
	if ( szValue == "USER_ACTION_CAMOFLAGE" )
		return NDb::USER_ACTION_CAMOFLAGE;
	if ( szValue == "USER_ACTION_THROW" )
		return NDb::USER_ACTION_THROW;
	if ( szValue == "USER_ACTION_ADVANCED_CAMOFLAGE" )
		return NDb::USER_ACTION_ADVANCED_CAMOFLAGE;
	if ( szValue == "USER_ACTION_LAND_MINE" )
		return NDb::USER_ACTION_LAND_MINE;
	if ( szValue == "USER_ACTION_BLASTING_CHARGE" )
		return NDb::USER_ACTION_BLASTING_CHARGE;
	if ( szValue == "USER_ACTION_CONTROLLED_CHARGE" )
		return NDb::USER_ACTION_CONTROLLED_CHARGE;
	if ( szValue == "USER_ACTION_DETONATE" )
		return NDb::USER_ACTION_DETONATE;
	if ( szValue == "USER_ACTION_HOLD_SECTOR" )
		return NDb::USER_ACTION_HOLD_SECTOR;
	if ( szValue == "USER_ACTION_TRACK_TARGETING" )
		return NDb::USER_ACTION_TRACK_TARGETING;
	if ( szValue == "USER_ACTION_SUPPRESS" )
		return NDb::USER_ACTION_SUPPRESS;
	if ( szValue == "USER_ACTION_CRITICAL_TARGETTING" )
		return NDb::USER_ACTION_CRITICAL_TARGETTING;
	if ( szValue == "USER_ACTION_RAPID_FIRE" )
		return NDb::USER_ACTION_RAPID_FIRE;
	if ( szValue == "USER_ACTION_COVER_FIRE" )
		return NDb::USER_ACTION_COVER_FIRE;
	if ( szValue == "USER_ACTION_LINKED_GRENADES" )
		return NDb::USER_ACTION_LINKED_GRENADES;
	if ( szValue == "USER_ACTION_SUPPORT_FIRE" )
		return NDb::USER_ACTION_SUPPORT_FIRE;
	if ( szValue == "USER_ACTION_PATROL" )
		return NDb::USER_ACTION_PATROL;
	if ( szValue == "USER_ACTION_KAMIKAZE" )
		return NDb::USER_ACTION_KAMIKAZE;
	if ( szValue == "USER_ACTION_FLAMETHROWER" )
		return NDb::USER_ACTION_FLAMETHROWER;
	if ( szValue == "USER_ACTION_CAUTION" )
		return NDb::USER_ACTION_CAUTION;
	if ( szValue == "USER_ACTION_EXACT_SHOT" )
		return NDb::USER_ACTION_EXACT_SHOT;
	if ( szValue == "USER_ACTION_COUNTER_FIRE" )
		return NDb::USER_ACTION_COUNTER_FIRE;
	if ( szValue == "USER_ACTION_FIRST_AID" )
		return NDb::USER_ACTION_FIRST_AID;
	if ( szValue == "USER_ACTION_SPY_MODE" )
		return NDb::USER_ACTION_SPY_MODE;
	if ( szValue == "USER_ACTION_MOBILE_FORTRESS" )
		return NDb::USER_ACTION_MOBILE_FORTRESS;
	if ( szValue == "USER_ACTION_MOVING_SHOOT" )
		return NDb::USER_ACTION_MOVING_SHOOT;
	if ( szValue == "USER_ACTION_MASTER_OF_STREETS" )
		return NDb::USER_ACTION_MASTER_OF_STREETS;
	if ( szValue == "USER_ACTION_ADRENALINE_RUSH" )
		return NDb::USER_ACTION_ADRENALINE_RUSH;
	if ( szValue == "USER_ACTION_ZEROING_IN" )
		return NDb::USER_ACTION_ZEROING_IN;
	if ( szValue == "USER_ACTION_DROP_BOMB" )
		return NDb::USER_ACTION_DROP_BOMB;
	if ( szValue == "USER_ACTION_EXACT_BOMBING" )
		return NDb::USER_ACTION_EXACT_BOMBING;
	if ( szValue == "USER_ACTION_SMOKE_SHOTS" )
		return NDb::USER_ACTION_SMOKE_SHOTS;
	if ( szValue == "USER_ACTION_GLOBE_BOMB_MISSION" )
		return NDb::USER_ACTION_GLOBE_BOMB_MISSION;
	if ( szValue == "USER_ACTION_GLOBE_ATTACK_MISSION" )
		return NDb::USER_ACTION_GLOBE_ATTACK_MISSION;
	if ( szValue == "USER_ACTION_GLOBE_BEGIN_WAR" )
		return NDb::USER_ACTION_GLOBE_BEGIN_WAR;
	if ( szValue == "USER_ACTION_DROP_PARATROOPERS" )
		return NDb::USER_ACTION_DROP_PARATROOPERS;
	if ( szValue == "USER_ACTION_MASTER_PILOT" )
		return NDb::USER_ACTION_MASTER_PILOT;
	if ( szValue == "USER_ACTION_SKY_GUARD" )
		return NDb::USER_ACTION_SKY_GUARD;
	if ( szValue == "USER_ACTION_SURVIVAL" )
		return NDb::USER_ACTION_SURVIVAL;
	if ( szValue == "USER_ACTION_TANK_HUNTER" )
		return NDb::USER_ACTION_TANK_HUNTER;
	if ( szValue == "USER_ACTION_REINF_COMMON" )
		return NDb::USER_ACTION_REINF_COMMON;
	if ( szValue == "USER_ACTION_REINF_BOMB" )
		return NDb::USER_ACTION_REINF_BOMB;
	if ( szValue == "USER_ACTION_REINF_PARATROOPERS" )
		return NDb::USER_ACTION_REINF_PARATROOPERS;
	if ( szValue == "USER_ACTION_MOVE_LIKE_TERRAIN" )
		return NDb::USER_ACTION_MOVE_LIKE_TERRAIN;
	if ( szValue == "USER_ACTION_REINF_NONE" )
		return NDb::USER_ACTION_REINF_NONE;
	if ( szValue == "USER_ACTION_ADD_UNIT" )
		return NDb::USER_ACTION_ADD_UNIT;
	if ( szValue == "USER_ACTION_REMOVE_UNIT" )
		return NDb::USER_ACTION_REMOVE_UNIT;
	if ( szValue == "USER_ACTION_FORBIDDEN" )
		return NDb::USER_ACTION_FORBIDDEN;
	if ( szValue == "USER_ACTION_SUPER_WEAPON_MODE" )
		return NDb::USER_ACTION_SUPER_WEAPON_MODE;
	if ( szValue == "USER_ACTION_RADIO_CONTROLLED_MODE" )
		return NDb::USER_ACTION_RADIO_CONTROLLED_MODE;
	if ( szValue == "USER_ACTION_MOVE_TRACK" )
		return NDb::USER_ACTION_MOVE_TRACK;
	if ( szValue == "USER_ACTION_MOVE_WHELL" )
		return NDb::USER_ACTION_MOVE_WHELL;
	if ( szValue == "USER_ACTION_MOVE_HUMAN" )
		return NDb::USER_ACTION_MOVE_HUMAN;
	return NDb::USER_ACTION_UNKNOWN;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
string EnumToString( NDb::ESpecialAbilityParam eValue )
{
	switch ( eValue )
	{
	case NDb::PARAM_ABILITY_ON:
		return "PARAM_ABILITY_ON";
	case NDb::PARAM_ABILITY_OFF:
		return "PARAM_ABILITY_OFF";
	case NDb::PARAM_ABILITY_AUTOCAST_ON:
		return "PARAM_ABILITY_AUTOCAST_ON";
	case NDb::PARAM_ABILITY_AUTOCAST_OFF:
		return "PARAM_ABILITY_AUTOCAST_OFF";
	default:
		return "PARAM_ABILITY_ON";
	}
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
NDb::ESpecialAbilityParam NDb::StringToEnum_NDb_ESpecialAbilityParam( const string &szValue )
{
	if ( szValue == "PARAM_ABILITY_ON" )
		return NDb::PARAM_ABILITY_ON;
	if ( szValue == "PARAM_ABILITY_OFF" )
		return NDb::PARAM_ABILITY_OFF;
	if ( szValue == "PARAM_ABILITY_AUTOCAST_ON" )
		return NDb::PARAM_ABILITY_AUTOCAST_ON;
	if ( szValue == "PARAM_ABILITY_AUTOCAST_OFF" )
		return NDb::PARAM_ABILITY_AUTOCAST_OFF;
	return NDb::PARAM_ABILITY_ON;
}
}
using namespace NDb;
