<HTML>
	<HEAD>
		<TITLE></TITLE>
		<META NAME="GENERATOR" Content="Microsoft Visual Studio .NET 7.1">
	</HEAD>
	<BODY>
		<H3>Работа меню File в редакторе</H3>
		<P>В редакторе поддерживается работа меню File. Реализованы следующие сервисы:</P>
		<UL>
			<LI>
			ID_MAIN_NEW - создает новый объект главного типа (о нем ниже) и вызывает его 
			редактирование
			<LI>
			ID_MAIN_OPEN - вызывает на редактирование объект главного типа, добавляет 
			объект в главный Recent List
			<LI>
			ID_MAIN_CLOSE - закрывает текущий редактор
			<LI>
			IN_MAIN_SAVE - вызывает метод Save у активного редактора, добавляет объект в 
			соответствующий Recent List
			<LI>
			ID_MAIN_NEW_RESOURCE - создает объект указанного типа и вызывает его 
			редактирование
			<LI>
			ID_MAIN_OPEN_RESOURCE - вызывает на редактирование объект указанного типа, 
			добавляет объект в Recent List
			<LI>
			любое подменю с первым пунктом меню с ID ID_MAIN_RECENT_0 - Главный Recent List
			<LI>
				любое подменю с первым пунктом меню с ID ID_MAIN_RECENT_RESOURCE_0 - Главный 
				Recent List</LI></UL>
		<P>У программы есть выделенный тип ресурсов (главный тип ресурсов), обычно это 
			карта. В случае B2 таким типом является MapInfo. С этим типом работают пункты 
			меню ID_MAIN_NEW, ID_MAIN_OPEN, ID_MAIN_RECENT_0 ... ID_MAIN_RECENT_9. Этот тип 
			указывается в ..\Editor\ContsUserData.xml, поле MainObjectType.</P>
		<P>Оба Recent List работают автономно, добавление происходит при сохранении 
			объекта (если пользователь сохранил объект через интерфейс), при создании 
			объекта и при его открытии. Если такой объект уже был в Recent List то он 
			перемещается на первое место. Всего поддерживается 10 записей для каждого 
			Recent List. В перый Recent List (ID_MAIN_RECENT_0) добавляются объекты 
			главного типа, не важно откуда они были открыты или созданы, во второй - все 
			остальные.</P>
		<P>Создание объекта происходит в три этапа. Сначала мы выбираем тип создаваемого 
			объекта, если мы создаем объект главного типа, то этот шаг пропускается. Затем 
			мы вызывается builder объекта. На последнем этапе мы запускаем редактор. 
			Объекты создаются в специальных папках, которые возвращаются в методе 
			IBuilder::GetDefaultFolder() соответствующих builder'ов. В проекте B2 builder 
			MapInfo объектов, в этом методе, возвращает каталог "CustomMissions\". Не 
			забывайте указывать слеш в конце каталога. Дополнительно, при создании объекта 
			с помощью метода IBuilder::InsertObject(), третьим параметром передается true. 
			Если требуется дополнительная обработка ситуации создания объекта через главное 
			меню, можно использовать этот флаг. Например, в B2 если указан этот флаг, карта 
			прописывается первым пунктом в GameRoot::Custom Missions.</P>
		<P>Открытие объекта происходит в два этапа. Сперва мы выбираем объект для 
			открытия. Затем мы создаем редактор необходимого типа и открываем в нем 
			выбранный объект. Список типов в диалоге открытия объекта зависит от выбранного 
			пункта меню. В случае ID_MAIN_OPEN мы можем выбрать только главный тип 
			программы. В случае ID_MAIN_OPER_RESOURCE мы выбираем из списка типов, у 
			которых зарегистрированы редакторы. Главный тип программы тоже входит в этот 
			список. Для этих двух случаев предусмотрены отдельные настройки по сохранению 
			последнего открытого объекта.</P>
	</BODY>
</HTML>
