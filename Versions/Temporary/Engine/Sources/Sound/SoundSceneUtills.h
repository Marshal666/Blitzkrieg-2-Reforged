#pragma once

#include "IntPair.h"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// для Hash таблицы
struct SIntThreeHash
{
	size_t operator() ( const struct SIntThree &v ) const;
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct SUpdatedCell
{
	int nFormerRadius;
	int nNewRadius;
	SIntThree vCell;
	SUpdatedCell( const SIntThree &vCell, const int nFormerRadius, const int nNewRadius )
		: vCell( vCell ), nFormerRadius( nFormerRadius ), nNewRadius( nNewRadius ) {  }
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// для сортировки звуков по времени старта
class CSoundStartTimePredicate
{
public:
	bool operator()( class CSound* one, class CSound *two ) const;
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//для поиска звуков, начало которых лежит не дальше, чем timeDelta
// от timeBase
class CSoundsWithinDeltaPredicate
{
	NTimer::STime timeToCompare;
public:
	CSoundsWithinDeltaPredicate( NTimer::STime timeBase, NTimer::STime timeDelta)
		: timeToCompare( timeBase+timeDelta ) {  }
	bool operator()( const CSound * sound ) const;
};
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
