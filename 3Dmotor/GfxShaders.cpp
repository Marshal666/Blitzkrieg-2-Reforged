#include "StdAfx.h"
#include "GfxShadersDescr.h"
#include "GfxShaders.h"
static DWORD dwvs11HLSLMain0[] ={ 0xfffe0101, 0x43fffe, 0x42415443, 0x1c, 0xd7, 0xfffe0101, 0x4, 0x1c, 0x100, 0xd0, 0x6c, 0x10002, 0x1, 0x78, 0x0, 0x88, 0xa0002, 0x4, 0x94, 0x0, 0xa4, 0x60002, 0x1, 0x78, 0x0, 0xb2, 0x2, 0x1, 0xc0, 0x0, 0x6f6c6f43, 0x754d7372, 0xab00746c, 0x30001, 0x40001, 0x1, 0x0, 0x6a6f7250, 0x7274614d, 0xab007869, 0x30003, 0x40004, 0x1, 0x0, 0x43786554, 0x64726f6f, 0x6c616353, 0x61570065, 0x676f4672, 0x61726150, 0xab00736d, 0x30001, 0x20001, 0x1, 0x0, 0x315f7376, 0x4d00315f, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 0x6c69706d, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x51, 0xa00f0002, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0002, 0x1f, 0x80000006, 0x900f0003, 0x1f, 0x80010006, 0x900f0004, 0x9, 0xc0010000, 0x90e40000, 0xa0e4000a, 0x9, 0xc0020000, 0x90e40000, 0xa0e4000b, 0x5, 0x80080000, 0x90ff0004, 0xa0000000, 0x4, 0x80080000, 0x90ff0003, 0xa0550000, 0x80ff0000, 0x5, 0x80070000, 0x90ff0001, 0xa0e40001, 0x9, 0xc0040000, 0x90e40000, 0xa0e4000c, 0x5, 0x80070000, 0x80ff0000, 0x80e40000, 0x9, 0xc0080000, 0x90e40000, 0xa0e4000d, 0x5, 0xd0070000, 0x80e40000, 0x90e40003, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff0001, 0x5, 0xe0030000, 0x90e40002, 0xa0000006, 0x1, 0xd00f0001, 0xa0000002, 0x1, 0xe0030001, 0xa0000002, 0xffff };
static DWORD dwvs20HLSLMain0[] ={ 0xfffe0200, 0x43fffe, 0x42415443, 0x1c, 0xd7, 0xfffe0200, 0x4, 0x1c, 0x100, 0xd0, 0x6c, 0x10002, 0x1, 0x78, 0x0, 0x88, 0xa0002, 0x4, 0x94, 0x0, 0xa4, 0x60002, 0x1, 0x78, 0x0, 0xb2, 0x2, 0x1, 0xc0, 0x0, 0x6f6c6f43, 0x754d7372, 0xab00746c, 0x30001, 0x40001, 0x1, 0x0, 0x6a6f7250, 0x7274614d, 0xab007869, 0x30003, 0x40004, 0x1, 0x0, 0x43786554, 0x64726f6f, 0x6c616353, 0x61570065, 0x676f4672, 0x61726150, 0xab00736d, 0x30001, 0x20001, 0x1, 0x0, 0x325f7376, 0x4d00305f, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 0x6c69706d, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x5000051, 0xa00f0002, 0x0, 0x0, 0x0, 0x0, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000003, 0x900f0001, 0x200001f, 0x80000005, 0x900f0002, 0x200001f, 0x80000006, 0x900f0003, 0x200001f, 0x80010006, 0x900f0004, 0x3000009, 0xc0010000, 0x90e40000, 0xa0e4000a, 0x3000009, 0xc0020000, 0x90e40000, 0xa0e4000b, 0x3000005, 0x80080000, 0x90ff0004, 0xa0000000, 0x4000004, 0x80080000, 0x90ff0003, 0xa0550000, 0x80ff0000, 0x3000005, 0x80070000, 0x90ff0001, 0xa0e40001, 0x3000009, 0xc0040000, 0x90e40000, 0xa0e4000c, 0x3000005, 0x80070000, 0x80ff0000, 0x80e40000, 0x3000009, 0xc0080000, 0x90e40000, 0xa0e4000d, 0x3000005, 0xd0070000, 0x80e40000, 0x90e40003, 0x3000005, 0xd0080000, 0x90ff0001, 0xa0ff0001, 0x3000005, 0xe0030000, 0x90e40002, 0xa0000006, 0x2000001, 0xd00f0001, 0xa0000002, 0x2000001, 0xe0030001, 0xa0000002, 0xffff };
SVShader vsHLSLMain0( 1, dwvs11HLSLMain0,dwvs20HLSLMain0);
static DWORD dwvs11HLSLMain1[] ={ 0xfffe0101, 0x43fffe, 0x42415443, 0x1c, 0xd7, 0xfffe0101, 0x4, 0x1c, 0x100, 0xd0, 0x6c, 0x10002, 0x1, 0x78, 0x0, 0x88, 0xa0002, 0x4, 0x94, 0x0, 0xa4, 0x60002, 0x1, 0x78, 0x0, 0xb2, 0x2, 0x1, 0xc0, 0x0, 0x6f6c6f43, 0x754d7372, 0xab00746c, 0x30001, 0x40001, 0x1, 0x0, 0x6a6f7250, 0x7274614d, 0xab007869, 0x30003, 0x40004, 0x1, 0x0, 0x43786554, 0x64726f6f, 0x6c616353, 0x61570065, 0x676f4672, 0x61726150, 0xab00736d, 0x30001, 0x20001, 0x1, 0x0, 0x315f7376, 0x4d00315f, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 0x6c69706d, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x51, 0xa00f0002, 0x0, 0x0, 0x0, 0x0, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0002, 0x1f, 0x80000006, 0x900f0003, 0x1f, 0x80010006, 0x900f0004, 0x9, 0xc0010000, 0x90e40000, 0xa0e4000a, 0x9, 0xc0020000, 0x90e40000, 0xa0e4000b, 0x5, 0x80080000, 0x90ff0004, 0xa0000000, 0x4, 0x80080000, 0x90ff0003, 0xa0550000, 0x80ff0000, 0x5, 0x80070000, 0x90ff0001, 0xa0e40001, 0x9, 0xc0040000, 0x90e40000, 0xa0e4000c, 0x5, 0x80070000, 0x80ff0000, 0x80e40000, 0x9, 0xc0080000, 0x90e40000, 0xa0e4000d, 0x5, 0xd0070000, 0x80e40000, 0x90e40003, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff0001, 0x5, 0xe0030000, 0x90e40002, 0xa0000006, 0x1, 0xd00f0001, 0xa0000002, 0x1, 0xe0030001, 0xa0000002, 0xffff };
static DWORD dwvs20HLSLMain1[] ={ 0xfffe0200, 0x43fffe, 0x42415443, 0x1c, 0xd7, 0xfffe0200, 0x4, 0x1c, 0x100, 0xd0, 0x6c, 0x10002, 0x1, 0x78, 0x0, 0x88, 0xa0002, 0x4, 0x94, 0x0, 0xa4, 0x60002, 0x1, 0x78, 0x0, 0xb2, 0x2, 0x1, 0xc0, 0x0, 0x6f6c6f43, 0x754d7372, 0xab00746c, 0x30001, 0x40001, 0x1, 0x0, 0x6a6f7250, 0x7274614d, 0xab007869, 0x30003, 0x40004, 0x1, 0x0, 0x43786554, 0x64726f6f, 0x6c616353, 0x61570065, 0x676f4672, 0x61726150, 0xab00736d, 0x30001, 0x20001, 0x1, 0x0, 0x325f7376, 0x4d00305f, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 0x6c69706d, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x5000051, 0xa00f0002, 0x0, 0x0, 0x0, 0x0, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000003, 0x900f0001, 0x200001f, 0x80000005, 0x900f0002, 0x200001f, 0x80000006, 0x900f0003, 0x200001f, 0x80010006, 0x900f0004, 0x3000009, 0xc0010000, 0x90e40000, 0xa0e4000a, 0x3000009, 0xc0020000, 0x90e40000, 0xa0e4000b, 0x3000005, 0x80080000, 0x90ff0004, 0xa0000000, 0x4000004, 0x80080000, 0x90ff0003, 0xa0550000, 0x80ff0000, 0x3000005, 0x80070000, 0x90ff0001, 0xa0e40001, 0x3000009, 0xc0040000, 0x90e40000, 0xa0e4000c, 0x3000005, 0x80070000, 0x80ff0000, 0x80e40000, 0x3000009, 0xc0080000, 0x90e40000, 0xa0e4000d, 0x3000005, 0xd0070000, 0x80e40000, 0x90e40003, 0x3000005, 0xd0080000, 0x90ff0001, 0xa0ff0001, 0x3000005, 0xe0030000, 0x90e40002, 0xa0000006, 0x2000001, 0xd00f0001, 0xa0000002, 0x2000001, 0xe0030001, 0xa0000002, 0xffff };
SVShader vsHLSLMain1( 2, dwvs11HLSLMain1,dwvs20HLSLMain1);
static DWORD dwvs11PureGeometry[] ={ 0xfffe0101, 0x46fffe, 0x47554244, 0x28, 0xe1, 0x60, 0x0, 0x0, 0x7, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x120, 0xffff0003, 0x12c, 0xffff0004, 0x138, 0xffff0005, 0x144, 0xffff0006, 0x150, 0xffff0007, 0x15c, 0xffff0008, 0x168, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x506f2034, 0x202c736f, 0x202c3076, 0xa303163, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0xc00f0000, 0x90e40000, 0xa0e4000a, 0xffff };
SVShader vsPureGeometry( 3, dwvs11PureGeometry,0);
static DWORD dwvs11ConstLight[] ={ 0xfffe0101, 0x6afffe, 0x47554244, 0x28, 0x170, 0x88, 0x0, 0x0, 0xc, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1b0, 0xffff0003, 0x1bc, 0xffff0004, 0x1c8, 0xffff0005, 0x1d4, 0xffff0006, 0x1e0, 0xffff0007, 0x1ec, 0xffff0008, 0x1f8, 0xffff0009, 0x208, 0xffff000a, 0x214, 0xffff000b, 0x228, 0xffff000c, 0x23c, 0xffff000d, 0x24c, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x30722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3072, 0x72206461, 0x2c782e31, 0x2e307220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3172, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e31, 0x2e317220, 0x6f6d0a79, 0x446f2076, 0x63202c30, 0xa3631, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0000, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40000, 0x4, 0x80010001, 0x80ff0000, 0xa0000013, 0xa0550013, 0x4, 0x80020001, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000001, 0x80550001, 0x1, 0xd00f0000, 0xa0e40010, 0xffff };
SVShader vsConstLight( 4, dwvs11ConstLight,0);
static DWORD dwvs11Render2D[] ={ 0xfffe0101, 0x52fffe, 0x47554244, 0x28, 0x111, 0x70, 0x0, 0x0, 0x9, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x150, 0xffff0003, 0x15c, 0xffff0004, 0x168, 0xffff0005, 0x174, 0xffff0006, 0x180, 0xffff0007, 0x18c, 0xffff0008, 0x198, 0xffff0009, 0x1a8, 0xffff000a, 0x1b8, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x506f2034, 0x202c736f, 0x202c3076, 0xa303163, 0x206c756d, 0x2e30546f, 0x202c7978, 0x202c3376, 0xa363163, 0x20766f6d, 0x2c30446f, 0xa347620, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0xc00f0000, 0x90e40000, 0xa0e4000a, 0x5, 0xe0030000, 0x90e40003, 0xa0e40010, 0x1, 0xd00f0000, 0x90e40004, 0xffff };
SVShader vsRender2D( 5, dwvs11Render2D,0);
static DWORD dwvs11Render2DClouds[] ={ 0xfffe0101, 0x62fffe, 0x47554244, 0x28, 0x151, 0x80, 0x0, 0x0, 0xb, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x190, 0xffff0003, 0x19c, 0xffff0004, 0x1a8, 0xffff0005, 0x1b4, 0xffff0006, 0x1c0, 0xffff0007, 0x1cc, 0xffff0008, 0x1d8, 0xffff0009, 0x1e8, 0xffff000a, 0x1f8, 0xffff000b, 0x204, 0xffff000c, 0x218, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x506f2034, 0x202c736f, 0x202c3076, 0xa303163, 0x206c756d, 0x782e3072, 0x76202c79, 0x63202c33, 0x6d0a3631, 0x6f20766f, 0x782e3054, 0x72202c79, 0x616d0a30, 0x546f2064, 0x79782e31, 0x3163202c, 0x79782e37, 0x3072202c, 0x2c79782e, 0x37316320, 0xa777a2e, 0x20766f6d, 0x2c30446f, 0xa347620, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0xc00f0000, 0x90e40000, 0xa0e4000a, 0x5, 0x80030000, 0x90e40003, 0xa0e40010, 0x1, 0xe0030000, 0x80e40000, 0x4, 0xe0030001, 0xa0540011, 0x80540000, 0xa0fe0011, 0x1, 0xd00f0000, 0x90e40004, 0xffff };
SVShader vsRender2DClouds( 6, dwvs11Render2DClouds,0);
static DWORD dwvs11DrawTexU[] ={ 0xfffe0101, 0x4bfffe, 0x47554244, 0x28, 0xf5, 0x68, 0x0, 0x0, 0x8, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x134, 0xffff0003, 0x140, 0xffff0004, 0x14c, 0xffff0005, 0x158, 0xffff0006, 0x164, 0xffff0007, 0x170, 0xffff0008, 0x17c, 0xffff0009, 0x18c, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x506f2034, 0x202c736f, 0x202c3076, 0xa303163, 0x20766f6d, 0x2c30446f, 0xa347620, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0xc00f0000, 0x90e40000, 0xa0e4000a, 0x1, 0xd00f0000, 0x90e40004, 0xffff };
SVShader vsDrawTexU( 7, dwvs11DrawTexU,0);
static DWORD dwvs11Texture[] ={ 0xfffe0101, 0x6cfffe, 0x47554244, 0x28, 0x179, 0x88, 0x0, 0x0, 0xc, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1b8, 0xffff0003, 0x1c4, 0xffff0004, 0x1d0, 0xffff0005, 0x1dc, 0xffff0006, 0x1e8, 0xffff0007, 0x1f4, 0xffff0008, 0x200, 0xffff0009, 0x210, 0xffff000a, 0x21c, 0xffff000b, 0x230, 0xffff000c, 0x244, 0xffff000d, 0x254, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x30722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3072, 0x72206461, 0x2c782e31, 0x2e307220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3172, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e31, 0x2e317220, 0x756d0a79, 0x546f206c, 0x79782e30, 0x3376202c, 0x3663202c, 0xa78782e, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0000, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40000, 0x4, 0x80010001, 0x80ff0000, 0xa0000013, 0xa0550013, 0x4, 0x80020001, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000001, 0x80550001, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0xffff };
SVShader vsTexture( 8, dwvs11Texture,0);
static DWORD dwvs11SimpleSky[] ={ 0xfffe0101, 0x78fffe, 0x47554244, 0x28, 0x1aa, 0xa0, 0x0, 0x0, 0xf, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1e8, 0xffff0003, 0x1f4, 0xffff0004, 0x200, 0xffff0005, 0x20c, 0xffff0006, 0x218, 0xffff0007, 0x224, 0xffff0008, 0x230, 0xffff0009, 0x23c, 0xffff000a, 0x24c, 0xffff000b, 0x258, 0xffff000c, 0x268, 0xffff000d, 0x278, 0xffff000e, 0x288, 0xffff000f, 0x298, 0xffff0010, 0x2a8, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x766f6d0a, 0x2c307220, 0x30316320, 0x6c756d0a, 0x2c307220, 0x2c307220, 0x30336320, 0x766f6d0a, 0x2c317220, 0x31316320, 0x6c756d0a, 0x2c317220, 0x2c317220, 0x31336320, 0x3470640a, 0x6f506f20, 0x2c782e73, 0x2c307620, 0xa307220, 0x20347064, 0x736f506f, 0x202c792e, 0x202c3076, 0x640a3172, 0x6f203470, 0x2e736f50, 0x76202c7a, 0x63202c30, 0x640a3231, 0x6f203470, 0x2e736f50, 0x76202c77, 0x63202c30, 0x6d0a3331, 0x6f206c75, 0x782e3054, 0x76202c79, 0x63202c33, 0x78782e36, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x1, 0x800f0000, 0xa0e4000a, 0x5, 0x800f0000, 0x80e40000, 0xa0e4001e, 0x1, 0x800f0001, 0xa0e4000b, 0x5, 0x800f0001, 0x80e40001, 0xa0e4001f, 0x9, 0xc0010000, 0x90e40000, 0x80e40000, 0x9, 0xc0020000, 0x90e40000, 0x80e40001, 0x9, 0xc0040000, 0x90e40000, 0xa0e4000c, 0x9, 0xc0080000, 0x90e40000, 0xa0e4000d, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0xffff };
SVShader vsSimpleSky( 9, dwvs11SimpleSky,0);
static DWORD dwvs11TexturePerVertexTransp[] ={ 0xfffe0101, 0x74fffe, 0x47554244, 0x28, 0x198, 0x90, 0x0, 0x0, 0xd, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1d8, 0xffff0003, 0x1e4, 0xffff0004, 0x1f0, 0xffff0005, 0x1fc, 0xffff0006, 0x208, 0xffff0007, 0x214, 0xffff0008, 0x220, 0xffff0009, 0x230, 0xffff000a, 0x23c, 0xffff000b, 0x250, 0xffff000c, 0x264, 0xffff000d, 0x274, 0xffff000e, 0x284, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x30722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3072, 0x72206461, 0x2c782e31, 0x2e307220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3172, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e31, 0x2e317220, 0x756d0a79, 0x546f206c, 0x79782e30, 0x3376202c, 0x3663202c, 0xa78782e, 0x206c756d, 0x2e30446f, 0x76202c61, 0x2c772e31, 0x36316320, 0xa782e, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0000, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40000, 0x4, 0x80010001, 0x80ff0000, 0xa0000013, 0xa0550013, 0x4, 0x80020001, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000001, 0x80550001, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0x5, 0xd0080000, 0x90ff0001, 0xa0000010, 0xffff };
SVShader vsTexturePerVertexTransp( 10, dwvs11TexturePerVertexTransp,0);
static DWORD dwvs11Depth[] ={ 0xfffe0101, 0xa7fffe, 0x47554244, 0x28, 0x265, 0xd0, 0x0, 0x0, 0x15, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x2a4, 0xffff0003, 0x2b0, 0xffff0004, 0x2bc, 0xffff0005, 0x2c8, 0xffff0006, 0x2d4, 0xffff0007, 0x2e0, 0xffff0008, 0x2ec, 0xffff0009, 0x2fc, 0xffff000a, 0x30c, 0xffff000b, 0x320, 0xffff000c, 0x32c, 0xffff000d, 0x33c, 0xffff000e, 0x348, 0xffff000f, 0x358, 0xffff0010, 0x364, 0xffff0011, 0x370, 0xffff0012, 0x380, 0xffff0013, 0x394, 0xffff0014, 0x3a4, 0xffff0015, 0x3b0, 0xffff0016, 0x3c0, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x3470640a, 0x2e307220, 0x76202c78, 0x63202c30, 0x640a3532, 0x72203470, 0x2c792e30, 0x2c307620, 0x36326320, 0x64616d0a, 0x2e317220, 0x202c7978, 0x782e3072, 0x72202c79, 0x79782e30, 0x3363202c, 0x6c0a7a2e, 0x2070676f, 0x202c3272, 0x782e3172, 0x6c756d0a, 0x2e307220, 0x72202c78, 0x2c782e30, 0x2e327220, 0x6f6c0a7a, 0x72207067, 0x72202c32, 0xa792e31, 0x206c756d, 0x792e3072, 0x3072202c, 0x202c792e, 0x7a2e3272, 0x7173720a, 0x2e317220, 0x72202c78, 0xa782e31, 0x20717372, 0x792e3172, 0x3172202c, 0x6d0a792e, 0x72206c75, 0x79782e30, 0x3072202c, 0x2c79782e, 0x2e317220, 0x6d0a7978, 0x6f206461, 0x2e736f50, 0x202c7978, 0x782e3072, 0x63202c79, 0x782e3732, 0x63202c79, 0x7a2e3732, 0x70640a77, 0x506f2034, 0x7a2e736f, 0x3076202c, 0x3163202c, 0x6f6d0a37, 0x506f2076, 0x772e736f, 0x3163202c, 0x3470640a, 0x30446f20, 0x202c772e, 0x202c3076, 0xa343263, 0x20766f6d, 0x2e30446f, 0x2c7a7978, 0xa316320, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x9, 0x80010000, 0x90e40000, 0xa0e40019, 0x9, 0x80020000, 0x90e40000, 0xa0e4001a, 0x4, 0x80030001, 0x80540000, 0x80540000, 0xa0aa0003, 0x4f, 0x800f0002, 0x80000001, 0x5, 0x80010000, 0x80000000, 0x80aa0002, 0x4f, 0x800f0002, 0x80550001, 0x5, 0x80020000, 0x80550000, 0x80aa0002, 0x7, 0x80010001, 0x80000001, 0x7, 0x80020001, 0x80550001, 0x5, 0x80030000, 0x80540000, 0x80540001, 0x4, 0xc0030000, 0x80540000, 0xa054001b, 0xa0fe001b, 0x9, 0xc0040000, 0x90e40000, 0xa0e40011, 0x1, 0xc0080000, 0xa0e40001, 0x9, 0xd0080000, 0x90e40000, 0xa0e40018, 0x1, 0xd0070000, 0xa0e40001, 0xffff };
SVShader vsDepth( 11, dwvs11Depth,0);
static DWORD dwvs11DepthLP[] ={ 0xfffe0101, 0x71fffe, 0x47554244, 0x28, 0x18b, 0x90, 0x0, 0x0, 0xd, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1cc, 0xffff0003, 0x1d8, 0xffff0004, 0x1e4, 0xffff0005, 0x1f0, 0xffff0006, 0x1fc, 0xffff0007, 0x208, 0xffff0008, 0x214, 0xffff0009, 0x224, 0xffff000a, 0x234, 0xffff000b, 0x248, 0xffff000c, 0x258, 0xffff000d, 0x264, 0xffff000e, 0x274, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x3470640a, 0x2e307220, 0x76202c79, 0x63202c30, 0x640a3532, 0x72203470, 0x2c782e30, 0x2c307620, 0x36326320, 0x64616d0a, 0x6f506f20, 0x79782e73, 0x3072202c, 0x2c79782e, 0x37326320, 0x2c79782e, 0x37326320, 0xa777a2e, 0x20347064, 0x736f506f, 0x202c7a2e, 0x202c3076, 0xa373163, 0x20766f6d, 0x736f506f, 0x202c772e, 0x640a3163, 0x6f203470, 0x772e3044, 0x3076202c, 0x3263202c, 0x6f6d0a34, 0x446f2076, 0x79782e30, 0x63202c7a, 0x4d000a31, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x9, 0x80020000, 0x90e40000, 0xa0e40019, 0x9, 0x80010000, 0x90e40000, 0xa0e4001a, 0x4, 0xc0030000, 0x80540000, 0xa054001b, 0xa0fe001b, 0x9, 0xc0040000, 0x90e40000, 0xa0e40011, 0x1, 0xc0080000, 0xa0e40001, 0x9, 0xd0080000, 0x90e40000, 0xa0e40018, 0x1, 0xd0070000, 0xa0e40001, 0xffff };
SVShader vsDepthLP( 12, dwvs11DepthLP,0);
static DWORD dwvs11DepthATTextureLP[] ={ 0xfffe0101, 0x78fffe, 0x47554244, 0x28, 0x1a9, 0x98, 0x0, 0x0, 0xe, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1e8, 0xffff0003, 0x1f4, 0xffff0004, 0x200, 0xffff0005, 0x20c, 0xffff0006, 0x218, 0xffff0007, 0x224, 0xffff0008, 0x230, 0xffff0009, 0x240, 0xffff000a, 0x250, 0xffff000b, 0x264, 0xffff000c, 0x274, 0xffff000d, 0x280, 0xffff000e, 0x290, 0xffff000f, 0x29c, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x3470640a, 0x2e307220, 0x76202c79, 0x63202c30, 0x640a3532, 0x72203470, 0x2c782e30, 0x2c307620, 0x36326320, 0x64616d0a, 0x6f506f20, 0x79782e73, 0x3072202c, 0x2c79782e, 0x37326320, 0x2c79782e, 0x37326320, 0xa777a2e, 0x20347064, 0x736f506f, 0x202c7a2e, 0x202c3076, 0xa373163, 0x20766f6d, 0x736f506f, 0x202c772e, 0x640a3163, 0x6f203470, 0x772e3044, 0x3076202c, 0x3263202c, 0x6f6d0a34, 0x446f2076, 0x79782e30, 0x63202c7a, 0x756d0a31, 0x546f206c, 0x79782e30, 0x3376202c, 0x3663202c, 0xa78782e, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x9, 0x80020000, 0x90e40000, 0xa0e40019, 0x9, 0x80010000, 0x90e40000, 0xa0e4001a, 0x4, 0xc0030000, 0x80540000, 0xa054001b, 0xa0fe001b, 0x9, 0xc0040000, 0x90e40000, 0xa0e40011, 0x1, 0xc0080000, 0xa0e40001, 0x9, 0xd0080000, 0x90e40000, 0xa0e40018, 0x1, 0xd0070000, 0xa0e40001, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0xffff };
SVShader vsDepthATTextureLP( 13, dwvs11DepthATTextureLP,0);
static DWORD dwvs11DepthATTexture[] ={ 0xfffe0101, 0xaffffe, 0x47554244, 0x28, 0x283, 0xd8, 0x0, 0x0, 0x16, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x2c4, 0xffff0003, 0x2d0, 0xffff0004, 0x2dc, 0xffff0005, 0x2e8, 0xffff0006, 0x2f4, 0xffff0007, 0x300, 0xffff0008, 0x30c, 0xffff0009, 0x31c, 0xffff000a, 0x32c, 0xffff000b, 0x340, 0xffff000c, 0x34c, 0xffff000d, 0x35c, 0xffff000e, 0x368, 0xffff000f, 0x378, 0xffff0010, 0x384, 0xffff0011, 0x390, 0xffff0012, 0x3a0, 0xffff0013, 0x3b4, 0xffff0014, 0x3c4, 0xffff0015, 0x3d0, 0xffff0016, 0x3e0, 0xffff0017, 0x3ec, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x3470640a, 0x2e307220, 0x76202c78, 0x63202c30, 0x640a3532, 0x72203470, 0x2c792e30, 0x2c307620, 0x36326320, 0x64616d0a, 0x2e317220, 0x202c7978, 0x782e3072, 0x72202c79, 0x79782e30, 0x3363202c, 0x6c0a7a2e, 0x2070676f, 0x202c3272, 0x782e3172, 0x6c756d0a, 0x2e307220, 0x72202c78, 0x2c782e30, 0x2e327220, 0x6f6c0a7a, 0x72207067, 0x72202c32, 0xa792e31, 0x206c756d, 0x792e3072, 0x3072202c, 0x202c792e, 0x7a2e3272, 0x7173720a, 0x2e317220, 0x72202c78, 0xa782e31, 0x20717372, 0x792e3172, 0x3172202c, 0x6d0a792e, 0x72206c75, 0x79782e30, 0x3072202c, 0x2c79782e, 0x2e317220, 0x6d0a7978, 0x6f206461, 0x2e736f50, 0x202c7978, 0x782e3072, 0x63202c79, 0x782e3732, 0x63202c79, 0x7a2e3732, 0x70640a77, 0x506f2034, 0x7a2e736f, 0x3076202c, 0x3163202c, 0x6f6d0a37, 0x506f2076, 0x772e736f, 0x3163202c, 0x3470640a, 0x30446f20, 0x202c772e, 0x202c3076, 0xa343263, 0x20766f6d, 0x2e30446f, 0x2c7a7978, 0xa316320, 0x206c756d, 0x2e30546f, 0x202c7978, 0x202c3376, 0x782e3663, 0x4d000a78, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x9, 0x80010000, 0x90e40000, 0xa0e40019, 0x9, 0x80020000, 0x90e40000, 0xa0e4001a, 0x4, 0x80030001, 0x80540000, 0x80540000, 0xa0aa0003, 0x4f, 0x800f0002, 0x80000001, 0x5, 0x80010000, 0x80000000, 0x80aa0002, 0x4f, 0x800f0002, 0x80550001, 0x5, 0x80020000, 0x80550000, 0x80aa0002, 0x7, 0x80010001, 0x80000001, 0x7, 0x80020001, 0x80550001, 0x5, 0x80030000, 0x80540000, 0x80540001, 0x4, 0xc0030000, 0x80540000, 0xa054001b, 0xa0fe001b, 0x9, 0xc0040000, 0x90e40000, 0xa0e40011, 0x1, 0xc0080000, 0xa0e40001, 0x9, 0xd0080000, 0x90e40000, 0xa0e40018, 0x1, 0xd0070000, 0xa0e40001, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0xffff };
SVShader vsDepthATTexture( 14, dwvs11DepthATTexture,0);
static DWORD dwvs11LinearDepth16[] ={ 0xfffe0101, 0x70fffe, 0x47554244, 0x28, 0x189, 0x90, 0x0, 0x0, 0xd, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1c8, 0xffff0003, 0x1d4, 0xffff0004, 0x1e0, 0xffff0005, 0x1ec, 0xffff0006, 0x1f8, 0xffff0007, 0x204, 0xffff0008, 0x210, 0xffff0009, 0x220, 0xffff000a, 0x230, 0xffff000b, 0x244, 0xffff000c, 0x254, 0xffff000d, 0x260, 0xffff000e, 0x270, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x3470640a, 0x2e307220, 0x76202c79, 0x63202c30, 0x640a3532, 0x72203470, 0x2c782e30, 0x2c307620, 0x36326320, 0x64616d0a, 0x6f506f20, 0x79782e73, 0x3072202c, 0x2c79782e, 0x37326320, 0x2c79782e, 0x37326320, 0xa777a2e, 0x20347064, 0x736f506f, 0x202c7a2e, 0x202c3076, 0xa373163, 0x20766f6d, 0x736f506f, 0x202c772e, 0x640a3163, 0x6f203470, 0x782e3054, 0x3076202c, 0x3263202c, 0x6f6d0a34, 0x546f2076, 0x2c792e30, 0xa306320, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x9, 0x80020000, 0x90e40000, 0xa0e40019, 0x9, 0x80010000, 0x90e40000, 0xa0e4001a, 0x4, 0xc0030000, 0x80540000, 0xa054001b, 0xa0fe001b, 0x9, 0xc0040000, 0x90e40000, 0xa0e40011, 0x1, 0xc0080000, 0xa0e40001, 0x9, 0xe0010000, 0x90e40000, 0xa0e40018, 0x1, 0xe0020000, 0xa0e40000, 0xffff };
SVShader vsLinearDepth16( 15, dwvs11LinearDepth16,0);
static DWORD dwvs11Depth16[] ={ 0xfffe0101, 0xa7fffe, 0x47554244, 0x28, 0x263, 0xd0, 0x0, 0x0, 0x15, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x2a4, 0xffff0003, 0x2b0, 0xffff0004, 0x2bc, 0xffff0005, 0x2c8, 0xffff0006, 0x2d4, 0xffff0007, 0x2e0, 0xffff0008, 0x2ec, 0xffff0009, 0x2fc, 0xffff000a, 0x30c, 0xffff000b, 0x320, 0xffff000c, 0x32c, 0xffff000d, 0x33c, 0xffff000e, 0x348, 0xffff000f, 0x358, 0xffff0010, 0x364, 0xffff0011, 0x370, 0xffff0012, 0x380, 0xffff0013, 0x394, 0xffff0014, 0x3a4, 0xffff0015, 0x3b0, 0xffff0016, 0x3c0, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x3470640a, 0x2e307220, 0x76202c78, 0x63202c30, 0x640a3532, 0x72203470, 0x2c792e30, 0x2c307620, 0x36326320, 0x64616d0a, 0x2e317220, 0x202c7978, 0x782e3072, 0x72202c79, 0x79782e30, 0x3363202c, 0x6c0a7a2e, 0x2070676f, 0x202c3272, 0x782e3172, 0x6c756d0a, 0x2e307220, 0x72202c78, 0x2c782e30, 0x2e327220, 0x6f6c0a7a, 0x72207067, 0x72202c32, 0xa792e31, 0x206c756d, 0x792e3072, 0x3072202c, 0x202c792e, 0x7a2e3272, 0x7173720a, 0x2e317220, 0x72202c78, 0xa782e31, 0x20717372, 0x792e3172, 0x3172202c, 0x6d0a792e, 0x72206c75, 0x79782e30, 0x3072202c, 0x2c79782e, 0x2e317220, 0x6d0a7978, 0x6f206461, 0x2e736f50, 0x202c7978, 0x782e3072, 0x63202c79, 0x782e3732, 0x63202c79, 0x7a2e3732, 0x70640a77, 0x506f2034, 0x7a2e736f, 0x3076202c, 0x3163202c, 0x6f6d0a37, 0x506f2076, 0x772e736f, 0x3163202c, 0x3470640a, 0x30546f20, 0x202c782e, 0x202c3076, 0xa343263, 0x20766f6d, 0x2e30546f, 0x63202c79, 0x4d000a30, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x9, 0x80010000, 0x90e40000, 0xa0e40019, 0x9, 0x80020000, 0x90e40000, 0xa0e4001a, 0x4, 0x80030001, 0x80540000, 0x80540000, 0xa0aa0003, 0x4f, 0x800f0002, 0x80000001, 0x5, 0x80010000, 0x80000000, 0x80aa0002, 0x4f, 0x800f0002, 0x80550001, 0x5, 0x80020000, 0x80550000, 0x80aa0002, 0x7, 0x80010001, 0x80000001, 0x7, 0x80020001, 0x80550001, 0x5, 0x80030000, 0x80540000, 0x80540001, 0x4, 0xc0030000, 0x80540000, 0xa054001b, 0xa0fe001b, 0x9, 0xc0040000, 0x90e40000, 0xa0e40011, 0x1, 0xc0080000, 0xa0e40001, 0x9, 0xe0010000, 0x90e40000, 0xa0e40018, 0x1, 0xe0020000, 0xa0e40000, 0xffff };
SVShader vsDepth16( 16, dwvs11Depth16,0);
static DWORD dwvs11LinearDepth16ATTexture[] ={ 0xfffe0101, 0x78fffe, 0x47554244, 0x28, 0x1a7, 0x98, 0x0, 0x0, 0xe, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1e8, 0xffff0003, 0x1f4, 0xffff0004, 0x200, 0xffff0005, 0x20c, 0xffff0006, 0x218, 0xffff0007, 0x224, 0xffff0008, 0x230, 0xffff0009, 0x240, 0xffff000a, 0x250, 0xffff000b, 0x264, 0xffff000c, 0x274, 0xffff000d, 0x280, 0xffff000e, 0x290, 0xffff000f, 0x29c, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x3470640a, 0x2e307220, 0x76202c79, 0x63202c30, 0x640a3532, 0x72203470, 0x2c782e30, 0x2c307620, 0x36326320, 0x64616d0a, 0x6f506f20, 0x79782e73, 0x3072202c, 0x2c79782e, 0x37326320, 0x2c79782e, 0x37326320, 0xa777a2e, 0x20347064, 0x736f506f, 0x202c7a2e, 0x202c3076, 0xa373163, 0x20766f6d, 0x736f506f, 0x202c772e, 0x640a3163, 0x6f203470, 0x782e3054, 0x3076202c, 0x3263202c, 0x6f6d0a34, 0x546f2076, 0x2c792e30, 0xa306320, 0x206c756d, 0x2e31546f, 0x202c7978, 0x202c3376, 0x782e3663, 0x4d000a78, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x9, 0x80020000, 0x90e40000, 0xa0e40019, 0x9, 0x80010000, 0x90e40000, 0xa0e4001a, 0x4, 0xc0030000, 0x80540000, 0xa054001b, 0xa0fe001b, 0x9, 0xc0040000, 0x90e40000, 0xa0e40011, 0x1, 0xc0080000, 0xa0e40001, 0x9, 0xe0010000, 0x90e40000, 0xa0e40018, 0x1, 0xe0020000, 0xa0e40000, 0x5, 0xe0030001, 0x90e40003, 0xa0000006, 0xffff };
SVShader vsLinearDepth16ATTexture( 17, dwvs11LinearDepth16ATTexture,0);
static DWORD dwvs11Depth16ATTexture[] ={ 0xfffe0101, 0xaefffe, 0x47554244, 0x28, 0x281, 0xd8, 0x0, 0x0, 0x16, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x2c0, 0xffff0003, 0x2cc, 0xffff0004, 0x2d8, 0xffff0005, 0x2e4, 0xffff0006, 0x2f0, 0xffff0007, 0x2fc, 0xffff0008, 0x308, 0xffff0009, 0x318, 0xffff000a, 0x328, 0xffff000b, 0x33c, 0xffff000c, 0x348, 0xffff000d, 0x358, 0xffff000e, 0x364, 0xffff000f, 0x374, 0xffff0010, 0x380, 0xffff0011, 0x38c, 0xffff0012, 0x39c, 0xffff0013, 0x3b0, 0xffff0014, 0x3c0, 0xffff0015, 0x3cc, 0xffff0016, 0x3dc, 0xffff0017, 0x3e8, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x3470640a, 0x2e307220, 0x76202c78, 0x63202c30, 0x640a3532, 0x72203470, 0x2c792e30, 0x2c307620, 0x36326320, 0x64616d0a, 0x2e317220, 0x202c7978, 0x782e3072, 0x72202c79, 0x79782e30, 0x3363202c, 0x6c0a7a2e, 0x2070676f, 0x202c3272, 0x782e3172, 0x6c756d0a, 0x2e307220, 0x72202c78, 0x2c782e30, 0x2e327220, 0x6f6c0a7a, 0x72207067, 0x72202c32, 0xa792e31, 0x206c756d, 0x792e3072, 0x3072202c, 0x202c792e, 0x7a2e3272, 0x7173720a, 0x2e317220, 0x72202c78, 0xa782e31, 0x20717372, 0x792e3172, 0x3172202c, 0x6d0a792e, 0x72206c75, 0x79782e30, 0x3072202c, 0x2c79782e, 0x2e317220, 0x6d0a7978, 0x6f206461, 0x2e736f50, 0x202c7978, 0x782e3072, 0x63202c79, 0x782e3732, 0x63202c79, 0x7a2e3732, 0x70640a77, 0x506f2034, 0x7a2e736f, 0x3076202c, 0x3163202c, 0x6f6d0a37, 0x506f2076, 0x772e736f, 0x3163202c, 0x3470640a, 0x30546f20, 0x202c782e, 0x202c3076, 0xa343263, 0x20766f6d, 0x2e30546f, 0x63202c79, 0x756d0a30, 0x546f206c, 0x79782e31, 0x3376202c, 0x3663202c, 0xa78782e, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x9, 0x80010000, 0x90e40000, 0xa0e40019, 0x9, 0x80020000, 0x90e40000, 0xa0e4001a, 0x4, 0x80030001, 0x80540000, 0x80540000, 0xa0aa0003, 0x4f, 0x800f0002, 0x80000001, 0x5, 0x80010000, 0x80000000, 0x80aa0002, 0x4f, 0x800f0002, 0x80550001, 0x5, 0x80020000, 0x80550000, 0x80aa0002, 0x7, 0x80010001, 0x80000001, 0x7, 0x80020001, 0x80550001, 0x5, 0x80030000, 0x80540000, 0x80540001, 0x4, 0xc0030000, 0x80540000, 0xa054001b, 0xa0fe001b, 0x9, 0xc0040000, 0x90e40000, 0xa0e40011, 0x1, 0xc0080000, 0xa0e40001, 0x9, 0xe0010000, 0x90e40000, 0xa0e40018, 0x1, 0xe0020000, 0xa0e40000, 0x5, 0xe0030001, 0x90e40003, 0xa0000006, 0xffff };
SVShader vsDepth16ATTexture( 18, dwvs11Depth16ATTexture,0);
static DWORD dwvs11LPDepth[] ={ 0xfffe0101, 0x4cfffe, 0x47554244, 0x28, 0xfa, 0x68, 0x0, 0x0, 0x8, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x138, 0xffff0003, 0x144, 0xffff0004, 0x150, 0xffff0005, 0x15c, 0xffff0006, 0x168, 0xffff0007, 0x174, 0xffff0008, 0x180, 0xffff0009, 0x190, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x506f2034, 0x202c736f, 0x202c3076, 0xa303163, 0x20347064, 0x2c30446f, 0x2c307620, 0x34326320, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0xc00f0000, 0x90e40000, 0xa0e4000a, 0x9, 0xd00f0000, 0x90e40000, 0xa0e40018, 0xffff };
SVShader vsLPDepth( 19, dwvs11LPDepth,0);
static DWORD dwvs11TexturePerVertexTranspNLP[] ={ 0xfffe0101, 0xaafffe, 0x47554244, 0x28, 0x26f, 0xd0, 0x0, 0x0, 0x15, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x2b0, 0xffff0003, 0x2bc, 0xffff0004, 0x2c8, 0xffff0005, 0x2d4, 0xffff0006, 0x2e0, 0xffff0007, 0x2ec, 0xffff0008, 0x2f8, 0xffff0009, 0x308, 0xffff000a, 0x318, 0xffff000b, 0x32c, 0xffff000c, 0x338, 0xffff000d, 0x348, 0xffff000e, 0x354, 0xffff000f, 0x364, 0xffff0010, 0x370, 0xffff0011, 0x37c, 0xffff0012, 0x38c, 0xffff0013, 0x3a0, 0xffff0014, 0x3b0, 0xffff0015, 0x3bc, 0xffff0016, 0x3cc, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x3470640a, 0x2e307220, 0x76202c78, 0x63202c30, 0x640a3532, 0x72203470, 0x2c792e30, 0x2c307620, 0x36326320, 0x64616d0a, 0x2e317220, 0x202c7978, 0x782e3072, 0x72202c79, 0x79782e30, 0x3363202c, 0x6c0a7a2e, 0x2070676f, 0x202c3272, 0x782e3172, 0x6c756d0a, 0x2e307220, 0x72202c78, 0x2c782e30, 0x2e327220, 0x6f6c0a7a, 0x72207067, 0x72202c32, 0xa792e31, 0x206c756d, 0x792e3072, 0x3072202c, 0x202c792e, 0x7a2e3272, 0x7173720a, 0x2e317220, 0x72202c78, 0xa782e31, 0x20717372, 0x792e3172, 0x3172202c, 0x6d0a792e, 0x72206c75, 0x79782e30, 0x3072202c, 0x2c79782e, 0x2e317220, 0x6d0a7978, 0x6f206461, 0x2e736f50, 0x202c7978, 0x782e3072, 0x63202c79, 0x782e3732, 0x63202c79, 0x7a2e3732, 0x70640a77, 0x506f2034, 0x7a2e736f, 0x3076202c, 0x3163202c, 0x6f6d0a37, 0x506f2076, 0x772e736f, 0x3163202c, 0x6c756d0a, 0x30546f20, 0x2c79782e, 0x2c337620, 0x2e366320, 0x6d0a7878, 0x6f206c75, 0x612e3044, 0x3176202c, 0x202c772e, 0x2e383163, 0x4d000a78, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x9, 0x80010000, 0x90e40000, 0xa0e40019, 0x9, 0x80020000, 0x90e40000, 0xa0e4001a, 0x4, 0x80030001, 0x80540000, 0x80540000, 0xa0aa0003, 0x4f, 0x800f0002, 0x80000001, 0x5, 0x80010000, 0x80000000, 0x80aa0002, 0x4f, 0x800f0002, 0x80550001, 0x5, 0x80020000, 0x80550000, 0x80aa0002, 0x7, 0x80010001, 0x80000001, 0x7, 0x80020001, 0x80550001, 0x5, 0x80030000, 0x80540000, 0x80540001, 0x4, 0xc0030000, 0x80540000, 0xa054001b, 0xa0fe001b, 0x9, 0xc0040000, 0x90e40000, 0xa0e40011, 0x1, 0xc0080000, 0xa0e40001, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0x5, 0xd0080000, 0x90ff0001, 0xa0000012, 0xffff };
SVShader vsTexturePerVertexTranspNLP( 20, dwvs11TexturePerVertexTranspNLP,0);
static DWORD dwvs11ParticleLMDirectionalTest[] ={ 0xfffe0101, 0x9afffe, 0x47554244, 0x28, 0x232, 0xc0, 0x0, 0x0, 0x13, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x270, 0xffff0003, 0x27c, 0xffff0004, 0x288, 0xffff0005, 0x294, 0xffff0006, 0x2a0, 0xffff0007, 0x2ac, 0xffff0008, 0x2b8, 0xffff0009, 0x2c8, 0xffff000a, 0x2d8, 0xffff000b, 0x2e8, 0xffff000c, 0x2f8, 0xffff000d, 0x30c, 0xffff000e, 0x318, 0xffff000f, 0x328, 0xffff0010, 0x334, 0xffff0011, 0x344, 0xffff0012, 0x350, 0xffff0013, 0x35c, 0xffff0014, 0x36c, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x506f2034, 0x202c736f, 0x202c3676, 0xa303163, 0x20347064, 0x2c30446f, 0x2c307620, 0x34326320, 0x3470640a, 0x2e307220, 0x76202c78, 0x63202c30, 0x640a3532, 0x72203470, 0x2c792e30, 0x2c307620, 0x36326320, 0x64616d0a, 0x2e317220, 0x202c7978, 0x782e3072, 0x72202c79, 0x79782e30, 0x3363202c, 0x6c0a7a2e, 0x2070676f, 0x202c3272, 0x782e3172, 0x6c756d0a, 0x2e307220, 0x72202c78, 0x2c782e30, 0x2e327220, 0x6f6c0a7a, 0x72207067, 0x72202c32, 0xa792e31, 0x206c756d, 0x792e3072, 0x3072202c, 0x202c792e, 0x7a2e3272, 0x7173720a, 0x2e317220, 0x72202c78, 0xa782e31, 0x20717372, 0x792e3172, 0x3172202c, 0x6d0a792e, 0x72206c75, 0x79782e30, 0x3072202c, 0x2c79782e, 0x2e317220, 0x6d0a7978, 0x6f206461, 0x782e3054, 0x72202c79, 0x79782e30, 0x3263202c, 0x79782e37, 0x3263202c, 0x777a2e37, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0xc00f0000, 0x90e40006, 0xa0e4000a, 0x9, 0xd00f0000, 0x90e40000, 0xa0e40018, 0x9, 0x80010000, 0x90e40000, 0xa0e40019, 0x9, 0x80020000, 0x90e40000, 0xa0e4001a, 0x4, 0x80030001, 0x80540000, 0x80540000, 0xa0aa0003, 0x4f, 0x800f0002, 0x80000001, 0x5, 0x80010000, 0x80000000, 0x80aa0002, 0x4f, 0x800f0002, 0x80550001, 0x5, 0x80020000, 0x80550000, 0x80aa0002, 0x7, 0x80010001, 0x80000001, 0x7, 0x80020001, 0x80550001, 0x5, 0x80030000, 0x80540000, 0x80540001, 0x4, 0xe0030000, 0x80540000, 0xa054001b, 0xa0fe001b, 0xffff };
SVShader vsParticleLMDirectionalTest( 21, dwvs11ParticleLMDirectionalTest,0);
static DWORD dwvs11RenderClouds[] ={ 0xfffe0101, 0xb6fffe, 0x47554244, 0x28, 0x2a0, 0xe0, 0x0, 0x0, 0x17, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x2e0, 0xffff0003, 0x2ec, 0xffff0004, 0x2f8, 0xffff0005, 0x304, 0xffff0006, 0x310, 0xffff0007, 0x31c, 0xffff0008, 0x328, 0xffff0009, 0x334, 0xffff000a, 0x348, 0xffff000b, 0x35c, 0xffff000c, 0x36c, 0xffff000d, 0x37c, 0xffff000e, 0x390, 0xffff000f, 0x39c, 0xffff0010, 0x3ac, 0xffff0011, 0x3b8, 0xffff0012, 0x3c8, 0xffff0013, 0x3d4, 0xffff0014, 0x3e0, 0xffff0015, 0x3f0, 0xffff0016, 0x404, 0xffff0017, 0x410, 0xffff0018, 0x420, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x766f6d0a, 0x2c307220, 0x30336320, 0x64616d0a, 0x2c307220, 0x31336320, 0x3076202c, 0x202c782e, 0x6d0a3072, 0x72206461, 0x63202c30, 0x202c3233, 0x792e3076, 0x3072202c, 0x3470640a, 0x2e317220, 0x72202c78, 0x63202c30, 0x640a3532, 0x72203470, 0x2c792e31, 0x2c307220, 0x36326320, 0x64616d0a, 0x2e327220, 0x202c7978, 0x782e3172, 0x72202c79, 0x79782e31, 0x3363202c, 0x6c0a7a2e, 0x2070676f, 0x202c3372, 0x782e3272, 0x6c756d0a, 0x2e317220, 0x72202c78, 0x2c782e31, 0x2e337220, 0x6f6c0a7a, 0x72207067, 0x72202c33, 0xa792e32, 0x206c756d, 0x792e3172, 0x3172202c, 0x202c792e, 0x7a2e3372, 0x7173720a, 0x2e327220, 0x72202c78, 0xa782e32, 0x20717372, 0x792e3272, 0x3272202c, 0x6d0a792e, 0x72206c75, 0x79782e31, 0x3172202c, 0x2c79782e, 0x2e327220, 0x6d0a7978, 0x6f206461, 0x2e736f50, 0x202c7978, 0x782e3172, 0x63202c79, 0x782e3732, 0x63202c79, 0x7a2e3732, 0x6f6d0a77, 0x506f2076, 0x7a2e736f, 0x63202c77, 0x79782e32, 0x3470640a, 0x30546f20, 0x202c782e, 0x202c3072, 0xa383263, 0x20347064, 0x2e30546f, 0x72202c79, 0x63202c30, 0xa3932, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x1, 0x800f0000, 0xa0e4001e, 0x4, 0x800f0000, 0xa0e4001f, 0x90000000, 0x80e40000, 0x4, 0x800f0000, 0xa0e40020, 0x90550000, 0x80e40000, 0x9, 0x80010001, 0x80e40000, 0xa0e40019, 0x9, 0x80020001, 0x80e40000, 0xa0e4001a, 0x4, 0x80030002, 0x80540001, 0x80540001, 0xa0aa0003, 0x4f, 0x800f0003, 0x80000002, 0x5, 0x80010001, 0x80000001, 0x80aa0003, 0x4f, 0x800f0003, 0x80550002, 0x5, 0x80020001, 0x80550001, 0x80aa0003, 0x7, 0x80010002, 0x80000002, 0x7, 0x80020002, 0x80550002, 0x5, 0x80030001, 0x80540001, 0x80540002, 0x4, 0xc0030000, 0x80540001, 0xa054001b, 0xa0fe001b, 0x1, 0xc00c0000, 0xa0540002, 0x9, 0xe0010000, 0x80e40000, 0xa0e4001c, 0x9, 0xe0020000, 0x80e40000, 0xa0e4001d, 0xffff };
SVShader vsRenderClouds( 22, dwvs11RenderClouds,0);
static DWORD dwvs11G3DiffuseTex[] ={ 0xfffe0101, 0x10dfffe, 0x47554244, 0x28, 0x3fe, 0x138, 0x0, 0x0, 0x22, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x43c, 0xffff0003, 0x448, 0xffff0004, 0x454, 0xffff0005, 0x460, 0xffff0006, 0x46c, 0xffff0007, 0x478, 0xffff0008, 0x484, 0xffff0009, 0x494, 0xffff000a, 0x4a0, 0xffff000b, 0x4b4, 0xffff000c, 0x4c8, 0xffff000d, 0x4d8, 0xffff000e, 0x4ec, 0xffff000f, 0x4fc, 0xffff0010, 0x510, 0xffff0011, 0x520, 0xffff0012, 0x530, 0xffff0013, 0x544, 0xffff0014, 0x550, 0xffff0015, 0x560, 0xffff0016, 0x56c, 0xffff0017, 0x57c, 0xffff0018, 0x588, 0xffff0019, 0x594, 0xffff001a, 0x5a4, 0xffff001b, 0x5b8, 0xffff001c, 0x5c8, 0xffff001d, 0x5d8, 0xffff001e, 0x5e8, 0xffff001f, 0x5f8, 0xffff0020, 0x608, 0xffff0021, 0x618, 0xffff0022, 0x628, 0xffff0023, 0x638, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x31722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3172, 0x72206461, 0x2c782e32, 0x2e317220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3272, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e32, 0x2e327220, 0x616d0a79, 0x30722064, 0x7a79782e, 0x3176202c, 0x3363202c, 0x7878782e, 0x3363202c, 0x7979792e, 0x6c756d0a, 0x2e317220, 0x76202c77, 0x2c772e34, 0x30336320, 0x6d0a792e, 0x72206461, 0x2c772e31, 0x2e357620, 0x63202c77, 0x782e3033, 0x3172202c, 0x640a772e, 0x72203470, 0x2c782e35, 0x2c307620, 0x35326320, 0x3470640a, 0x2e357220, 0x76202c79, 0x63202c30, 0x6d0a3632, 0x72206461, 0x79782e36, 0x3572202c, 0x2c79782e, 0x2e357220, 0x202c7978, 0x7a2e3363, 0x676f6c0a, 0x37722070, 0x3672202c, 0x6d0a782e, 0x72206c75, 0x2c782e35, 0x2e357220, 0x72202c78, 0xa7a2e37, 0x70676f6c, 0x2c377220, 0x2e367220, 0x756d0a79, 0x3572206c, 0x202c792e, 0x792e3572, 0x3772202c, 0x720a7a2e, 0x72207173, 0x2c782e36, 0x2e367220, 0x73720a78, 0x36722071, 0x202c792e, 0x792e3672, 0x6c756d0a, 0x2e357220, 0x202c7978, 0x782e3572, 0x72202c79, 0x79782e36, 0x64616d0a, 0x31546f20, 0x2c79782e, 0x2e357220, 0x202c7978, 0x2e373263, 0x202c7978, 0x2e373263, 0x640a777a, 0x72203370, 0x2c782e32, 0x2c307220, 0x35336320, 0x6c756d0a, 0x2e317220, 0x2c7a7978, 0x2e317220, 0x63202c77, 0x6d0a3932, 0x6f206c75, 0x782e3044, 0x202c7a79, 0x202c3476, 0x6d0a3172, 0x6f206c75, 0x772e3044, 0x3176202c, 0x202c772e, 0x2e393263, 0x756d0a77, 0x446f206c, 0x79782e31, 0x76202c7a, 0x72202c35, 0x67730a31, 0x34722065, 0x202c792e, 0x2e32722d, 0x63202c78, 0x772e3533, 0x3470640a, 0x2e347220, 0x76202c78, 0x63202c30, 0x610a3432, 0x6f206464, 0x202c3254, 0x782e3472, 0x3472202c, 0x6d0a792e, 0x6f206c75, 0x782e3054, 0x76202c79, 0x63202c33, 0x78782e36, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0001, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40001, 0x4, 0x80010002, 0x80ff0001, 0xa0000013, 0xa0550013, 0x4, 0x80020002, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000002, 0x80550002, 0x4, 0x80070000, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080001, 0x90ff0004, 0xa055001e, 0x4, 0x80080001, 0x90ff0005, 0xa000001e, 0x80ff0001, 0x9, 0x80010005, 0x90e40000, 0xa0e40019, 0x9, 0x80020005, 0x90e40000, 0xa0e4001a, 0x4, 0x80030006, 0x80540005, 0x80540005, 0xa0aa0003, 0x4f, 0x800f0007, 0x80000006, 0x5, 0x80010005, 0x80000005, 0x80aa0007, 0x4f, 0x800f0007, 0x80550006, 0x5, 0x80020005, 0x80550005, 0x80aa0007, 0x7, 0x80010006, 0x80000006, 0x7, 0x80020006, 0x80550006, 0x5, 0x80030005, 0x80540005, 0x80540006, 0x4, 0xe0030001, 0x80540005, 0xa054001b, 0xa0fe001b, 0x8, 0x80010002, 0x80e40000, 0xa0e40023, 0x5, 0x80070001, 0x80ff0001, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40001, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40001, 0xd, 0x80020004, 0x81000002, 0xa0ff0023, 0x9, 0x80010004, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000004, 0x80550004, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0xffff };
SVShader vsG3DiffuseTex( 23, dwvs11G3DiffuseTex,0);
static DWORD dwvs11G3DiffuseTexLP[] ={ 0xfffe0101, 0xc1fffe, 0x47554244, 0x28, 0x2ce, 0xe0, 0x0, 0x0, 0x17, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x30c, 0xffff0003, 0x318, 0xffff0004, 0x324, 0xffff0005, 0x330, 0xffff0006, 0x33c, 0xffff0007, 0x348, 0xffff0008, 0x354, 0xffff0009, 0x364, 0xffff000a, 0x370, 0xffff000b, 0x384, 0xffff000c, 0x398, 0xffff000d, 0x3a8, 0xffff000e, 0x3bc, 0xffff000f, 0x3cc, 0xffff0010, 0x3e0, 0xffff0011, 0x3f0, 0xffff0012, 0x400, 0xffff0013, 0x414, 0xffff0014, 0x424, 0xffff0015, 0x434, 0xffff0016, 0x444, 0xffff0017, 0x454, 0xffff0018, 0x464, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x31722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3172, 0x72206461, 0x2c782e32, 0x2e317220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3272, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e32, 0x2e327220, 0x616d0a79, 0x30722064, 0x7a79782e, 0x3176202c, 0x3363202c, 0x7878782e, 0x3363202c, 0x7979792e, 0x6c756d0a, 0x2e317220, 0x76202c77, 0x2c772e34, 0x30336320, 0x6d0a792e, 0x72206461, 0x2c772e31, 0x2e357620, 0x63202c77, 0x782e3033, 0x3172202c, 0x640a772e, 0x72203470, 0x2c792e32, 0x2c307620, 0x35326320, 0x3470640a, 0x2e327220, 0x76202c78, 0x63202c30, 0x6d0a3632, 0x6f206461, 0x782e3154, 0x72202c79, 0x79782e32, 0x3263202c, 0x79782e37, 0x3263202c, 0x777a2e37, 0x6c756d0a, 0x2e317220, 0x2c7a7978, 0x2e317220, 0x63202c77, 0x6d0a3932, 0x6f206c75, 0x782e3044, 0x202c7a79, 0x202c3476, 0x6d0a3172, 0x6f206c75, 0x772e3044, 0x3176202c, 0x202c772e, 0x2e393263, 0x756d0a77, 0x446f206c, 0x79782e31, 0x76202c7a, 0x72202c35, 0x70640a31, 0x546f2034, 0x76202c32, 0x63202c30, 0x6d0a3332, 0x6f206c75, 0x782e3054, 0x76202c79, 0x63202c33, 0x78782e36, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0001, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40001, 0x4, 0x80010002, 0x80ff0001, 0xa0000013, 0xa0550013, 0x4, 0x80020002, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000002, 0x80550002, 0x4, 0x80070000, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080001, 0x90ff0004, 0xa055001e, 0x4, 0x80080001, 0x90ff0005, 0xa000001e, 0x80ff0001, 0x9, 0x80020002, 0x90e40000, 0xa0e40019, 0x9, 0x80010002, 0x90e40000, 0xa0e4001a, 0x4, 0xe0030001, 0x80540002, 0xa054001b, 0xa0fe001b, 0x5, 0x80070001, 0x80ff0001, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40001, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40001, 0x9, 0xe00f0002, 0x90e40000, 0xa0e40017, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0xffff };
SVShader vsG3DiffuseTexLP( 24, dwvs11G3DiffuseTexLP,0);
static DWORD dwvs11G3DiffuseTexEXT[] ={ 0xfffe0101, 0x126fffe, 0x47554244, 0x28, 0x461, 0x150, 0x0, 0x0, 0x25, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x4a0, 0xffff0003, 0x4ac, 0xffff0004, 0x4b8, 0xffff0005, 0x4c4, 0xffff0006, 0x4d0, 0xffff0007, 0x4dc, 0xffff0008, 0x4e8, 0xffff0009, 0x4f4, 0xffff000a, 0x508, 0xffff000b, 0x51c, 0xffff000c, 0x52c, 0xffff000d, 0x538, 0xffff000e, 0x54c, 0xffff000f, 0x560, 0xffff0010, 0x570, 0xffff0011, 0x584, 0xffff0012, 0x594, 0xffff0013, 0x5a8, 0xffff0014, 0x5b8, 0xffff0015, 0x5c8, 0xffff0016, 0x5dc, 0xffff0017, 0x5e8, 0xffff0018, 0x5f8, 0xffff0019, 0x604, 0xffff001a, 0x614, 0xffff001b, 0x620, 0xffff001c, 0x62c, 0xffff001d, 0x63c, 0xffff001e, 0x650, 0xffff001f, 0x660, 0xffff0020, 0x670, 0xffff0021, 0x680, 0xffff0022, 0x690, 0xffff0023, 0x6a0, 0xffff0024, 0x6b0, 0xffff0025, 0x6c0, 0xffff0026, 0x6d0, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x766f6d0a, 0x2c327220, 0xa307620, 0x2064616d, 0x782e3272, 0x76202c79, 0x79782e36, 0x3363202c, 0x79782e31, 0x3272202c, 0xa79782e, 0x2064616d, 0x782e3272, 0x76202c79, 0x79782e36, 0x3363202c, 0x777a2e31, 0x3272202c, 0xa79782e, 0x3478346d, 0x2c317220, 0x2c327220, 0x30316320, 0x766f6d0a, 0x6f506f20, 0x72202c73, 0x616d0a31, 0x33722064, 0x202c782e, 0x772e3172, 0x3163202c, 0x2c782e39, 0x39316320, 0x6d0a792e, 0x72206461, 0x2c792e33, 0x2e307620, 0x63202c7a, 0x7a2e3931, 0x3163202c, 0xa772e39, 0x206e696d, 0x676f466f, 0x3372202c, 0x202c782e, 0x792e3372, 0x64616d0a, 0x2e307220, 0x2c7a7978, 0x2c317620, 0x2e336320, 0x2c787878, 0x2e336320, 0xa797979, 0x206c756d, 0x772e3172, 0x3476202c, 0x202c772e, 0x2e303363, 0x616d0a79, 0x31722064, 0x202c772e, 0x772e3576, 0x3363202c, 0x2c782e30, 0x2e317220, 0x70640a77, 0x35722034, 0x202c782e, 0x202c3076, 0xa353263, 0x20347064, 0x792e3572, 0x3076202c, 0x3263202c, 0x616d0a36, 0x36722064, 0x2c79782e, 0x2e357220, 0x202c7978, 0x782e3572, 0x63202c79, 0xa7a2e33, 0x70676f6c, 0x2c377220, 0x2e367220, 0x756d0a78, 0x3572206c, 0x202c782e, 0x782e3572, 0x3772202c, 0x6c0a7a2e, 0x2070676f, 0x202c3772, 0x792e3672, 0x6c756d0a, 0x2e357220, 0x72202c79, 0x2c792e35, 0x2e377220, 0x73720a7a, 0x36722071, 0x202c782e, 0x782e3672, 0x7173720a, 0x2e367220, 0x72202c79, 0xa792e36, 0x206c756d, 0x782e3572, 0x72202c79, 0x79782e35, 0x3672202c, 0xa79782e, 0x2064616d, 0x2e31546f, 0x202c7978, 0x782e3572, 0x63202c79, 0x782e3732, 0x63202c79, 0x7a2e3732, 0x70640a77, 0x32722033, 0x202c782e, 0x202c3072, 0xa353363, 0x206c756d, 0x782e3172, 0x202c7a79, 0x772e3172, 0x3263202c, 0x756d0a39, 0x446f206c, 0x79782e30, 0x76202c7a, 0x72202c34, 0x756d0a31, 0x446f206c, 0x2c772e30, 0x2e317620, 0x63202c77, 0x772e3932, 0x6c756d0a, 0x31446f20, 0x7a79782e, 0x3576202c, 0x3172202c, 0x6567730a, 0x2e347220, 0x2d202c79, 0x782e3272, 0x3363202c, 0xa772e35, 0x20347064, 0x782e3472, 0x3076202c, 0x3263202c, 0x64610a34, 0x546f2064, 0x72202c32, 0x2c782e34, 0x2e347220, 0x756d0a79, 0x546f206c, 0x79782e30, 0x3376202c, 0x3663202c, 0xa78782e, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x1, 0x800f0002, 0x90e40000, 0x4, 0x80030002, 0x90540006, 0xa054001f, 0x80540002, 0x4, 0x80030002, 0x90540006, 0xa0fe001f, 0x80540002, 0x14, 0x800f0001, 0x80e40002, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40001, 0x4, 0x80010003, 0x80ff0001, 0xa0000013, 0xa0550013, 0x4, 0x80020003, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000003, 0x80550003, 0x4, 0x80070000, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080001, 0x90ff0004, 0xa055001e, 0x4, 0x80080001, 0x90ff0005, 0xa000001e, 0x80ff0001, 0x9, 0x80010005, 0x90e40000, 0xa0e40019, 0x9, 0x80020005, 0x90e40000, 0xa0e4001a, 0x4, 0x80030006, 0x80540005, 0x80540005, 0xa0aa0003, 0x4f, 0x800f0007, 0x80000006, 0x5, 0x80010005, 0x80000005, 0x80aa0007, 0x4f, 0x800f0007, 0x80550006, 0x5, 0x80020005, 0x80550005, 0x80aa0007, 0x7, 0x80010006, 0x80000006, 0x7, 0x80020006, 0x80550006, 0x5, 0x80030005, 0x80540005, 0x80540006, 0x4, 0xe0030001, 0x80540005, 0xa054001b, 0xa0fe001b, 0x8, 0x80010002, 0x80e40000, 0xa0e40023, 0x5, 0x80070001, 0x80ff0001, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40001, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40001, 0xd, 0x80020004, 0x81000002, 0xa0ff0023, 0x9, 0x80010004, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000004, 0x80550004, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0xffff };
SVShader vsG3DiffuseTexEXT( 25, dwvs11G3DiffuseTexEXT,0);
static DWORD dwvs11G3TransparentGeom[] ={ 0xfffe0101, 0x115fffe, 0x47554244, 0x28, 0x41b, 0x140, 0x0, 0x0, 0x23, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x45c, 0xffff0003, 0x468, 0xffff0004, 0x474, 0xffff0005, 0x480, 0xffff0006, 0x48c, 0xffff0007, 0x498, 0xffff0008, 0x4a4, 0xffff0009, 0x4b4, 0xffff000a, 0x4c0, 0xffff000b, 0x4d4, 0xffff000c, 0x4e8, 0xffff000d, 0x4f8, 0xffff000e, 0x508, 0xffff000f, 0x51c, 0xffff0010, 0x52c, 0xffff0011, 0x540, 0xffff0012, 0x550, 0xffff0013, 0x560, 0xffff0014, 0x574, 0xffff0015, 0x580, 0xffff0016, 0x590, 0xffff0017, 0x59c, 0xffff0018, 0x5ac, 0xffff0019, 0x5b8, 0xffff001a, 0x5c4, 0xffff001b, 0x5d4, 0xffff001c, 0x5e8, 0xffff001d, 0x5f8, 0xffff001e, 0x608, 0xffff001f, 0x618, 0xffff0020, 0x628, 0xffff0021, 0x638, 0xffff0022, 0x648, 0xffff0023, 0x658, 0xffff0024, 0x668, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x32722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3272, 0x72206461, 0x2c782e33, 0x2e327220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3372, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e33, 0x2e337220, 0x756d0a79, 0x3072206c, 0x7a79782e, 0x3176202c, 0x202c772e, 0xa393263, 0x2064616d, 0x782e3172, 0x202c7a79, 0x202c3176, 0x782e3363, 0x202c7878, 0x792e3363, 0x6d0a7979, 0x72206c75, 0x2c772e32, 0x2e347620, 0x63202c77, 0x792e3033, 0x64616d0a, 0x2e327220, 0x76202c77, 0x2c772e35, 0x30336320, 0x202c782e, 0x772e3272, 0x3470640a, 0x2e367220, 0x76202c78, 0x63202c30, 0x640a3532, 0x72203470, 0x2c792e36, 0x2c307620, 0x36326320, 0x64616d0a, 0x2e377220, 0x202c7978, 0x782e3672, 0x72202c79, 0x79782e36, 0x3363202c, 0x6c0a7a2e, 0x2070676f, 0x202c3872, 0x782e3772, 0x6c756d0a, 0x2e367220, 0x72202c78, 0x2c782e36, 0x2e387220, 0x6f6c0a7a, 0x72207067, 0x72202c38, 0xa792e37, 0x206c756d, 0x792e3672, 0x3672202c, 0x202c792e, 0x7a2e3872, 0x7173720a, 0x2e377220, 0x72202c78, 0xa782e37, 0x20717372, 0x792e3772, 0x3772202c, 0x6d0a792e, 0x72206c75, 0x79782e36, 0x3672202c, 0x2c79782e, 0x2e377220, 0x6d0a7978, 0x6f206461, 0x782e3154, 0x72202c79, 0x79782e36, 0x3263202c, 0x79782e37, 0x3263202c, 0x777a2e37, 0x3370640a, 0x2e337220, 0x72202c78, 0x63202c31, 0x6d0a3533, 0x72206c75, 0x79782e32, 0x72202c7a, 0x2c772e32, 0xa307220, 0x206c756d, 0x2e30446f, 0x2c7a7978, 0x2c347620, 0xa327220, 0x206c756d, 0x2e30446f, 0x76202c77, 0x2c772e31, 0x39326320, 0x6d0a772e, 0x6f206c75, 0x782e3144, 0x202c7a79, 0x202c3576, 0x730a3272, 0x72206567, 0x2c792e35, 0x33722d20, 0x202c782e, 0x2e353363, 0x70640a77, 0x35722034, 0x202c782e, 0x202c3076, 0xa343263, 0x20646461, 0x2c32546f, 0x2e357220, 0x72202c78, 0xa792e35, 0x206c756d, 0x2e30546f, 0x202c7978, 0x202c3376, 0x782e3663, 0x4d000a78, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0002, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40002, 0x4, 0x80010003, 0x80ff0002, 0xa0000013, 0xa0550013, 0x4, 0x80020003, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000003, 0x80550003, 0x5, 0x80070000, 0x90ff0001, 0xa0e4001d, 0x4, 0x80070001, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080002, 0x90ff0004, 0xa055001e, 0x4, 0x80080002, 0x90ff0005, 0xa000001e, 0x80ff0002, 0x9, 0x80010006, 0x90e40000, 0xa0e40019, 0x9, 0x80020006, 0x90e40000, 0xa0e4001a, 0x4, 0x80030007, 0x80540006, 0x80540006, 0xa0aa0003, 0x4f, 0x800f0008, 0x80000007, 0x5, 0x80010006, 0x80000006, 0x80aa0008, 0x4f, 0x800f0008, 0x80550007, 0x5, 0x80020006, 0x80550006, 0x80aa0008, 0x7, 0x80010007, 0x80000007, 0x7, 0x80020007, 0x80550007, 0x5, 0x80030006, 0x80540006, 0x80540007, 0x4, 0xe0030001, 0x80540006, 0xa054001b, 0xa0fe001b, 0x8, 0x80010003, 0x80e40001, 0xa0e40023, 0x5, 0x80070002, 0x80ff0002, 0x80e40000, 0x5, 0xd0070000, 0x90e40004, 0x80e40002, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40002, 0xd, 0x80020005, 0x81000003, 0xa0ff0023, 0x9, 0x80010005, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000005, 0x80550005, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0xffff };
SVShader vsG3TransparentGeom( 26, dwvs11G3TransparentGeom,0);
static DWORD dwvs11G3TransparentGeomEXT[] ={ 0xfffe0101, 0x12dfffe, 0x47554244, 0x28, 0x47e, 0x158, 0x0, 0x0, 0x26, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x4bc, 0xffff0003, 0x4c8, 0xffff0004, 0x4d4, 0xffff0005, 0x4e0, 0xffff0006, 0x4ec, 0xffff0007, 0x4f8, 0xffff0008, 0x504, 0xffff0009, 0x510, 0xffff000a, 0x524, 0xffff000b, 0x538, 0xffff000c, 0x548, 0xffff000d, 0x554, 0xffff000e, 0x568, 0xffff000f, 0x57c, 0xffff0010, 0x58c, 0xffff0011, 0x59c, 0xffff0012, 0x5b0, 0xffff0013, 0x5c0, 0xffff0014, 0x5d4, 0xffff0015, 0x5e4, 0xffff0016, 0x5f4, 0xffff0017, 0x608, 0xffff0018, 0x614, 0xffff0019, 0x624, 0xffff001a, 0x630, 0xffff001b, 0x640, 0xffff001c, 0x64c, 0xffff001d, 0x658, 0xffff001e, 0x668, 0xffff001f, 0x67c, 0xffff0020, 0x68c, 0xffff0021, 0x69c, 0xffff0022, 0x6ac, 0xffff0023, 0x6bc, 0xffff0024, 0x6cc, 0xffff0025, 0x6dc, 0xffff0026, 0x6ec, 0xffff0027, 0x6fc, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x766f6d0a, 0x2c337220, 0xa307620, 0x2064616d, 0x782e3372, 0x76202c79, 0x79782e36, 0x3363202c, 0x79782e31, 0x3372202c, 0xa79782e, 0x2064616d, 0x782e3372, 0x76202c79, 0x79782e36, 0x3363202c, 0x777a2e31, 0x3372202c, 0xa79782e, 0x3478346d, 0x2c327220, 0x2c337220, 0x30316320, 0x766f6d0a, 0x6f506f20, 0x72202c73, 0x616d0a32, 0x34722064, 0x202c782e, 0x772e3272, 0x3163202c, 0x2c782e39, 0x39316320, 0x6d0a792e, 0x72206461, 0x2c792e34, 0x2e307620, 0x63202c7a, 0x7a2e3931, 0x3163202c, 0xa772e39, 0x206e696d, 0x676f466f, 0x3472202c, 0x202c782e, 0x792e3472, 0x6c756d0a, 0x2e307220, 0x2c7a7978, 0x2e317620, 0x63202c77, 0x6d0a3932, 0x72206461, 0x79782e31, 0x76202c7a, 0x63202c31, 0x78782e33, 0x63202c78, 0x79792e33, 0x756d0a79, 0x3272206c, 0x202c772e, 0x772e3476, 0x3363202c, 0xa792e30, 0x2064616d, 0x772e3272, 0x3576202c, 0x202c772e, 0x2e303363, 0x72202c78, 0xa772e32, 0x20347064, 0x782e3672, 0x3076202c, 0x3263202c, 0x70640a35, 0x36722034, 0x202c792e, 0x202c3076, 0xa363263, 0x2064616d, 0x782e3772, 0x72202c79, 0x79782e36, 0x3672202c, 0x2c79782e, 0x2e336320, 0x6f6c0a7a, 0x72207067, 0x72202c38, 0xa782e37, 0x206c756d, 0x782e3672, 0x3672202c, 0x202c782e, 0x7a2e3872, 0x676f6c0a, 0x38722070, 0x3772202c, 0x6d0a792e, 0x72206c75, 0x2c792e36, 0x2e367220, 0x72202c79, 0xa7a2e38, 0x20717372, 0x782e3772, 0x3772202c, 0x720a782e, 0x72207173, 0x2c792e37, 0x2e377220, 0x756d0a79, 0x3672206c, 0x2c79782e, 0x2e367220, 0x202c7978, 0x782e3772, 0x616d0a79, 0x546f2064, 0x79782e31, 0x3672202c, 0x2c79782e, 0x37326320, 0x2c79782e, 0x37326320, 0xa777a2e, 0x20337064, 0x782e3372, 0x3172202c, 0x3363202c, 0x756d0a35, 0x3272206c, 0x7a79782e, 0x3272202c, 0x202c772e, 0x6d0a3072, 0x6f206c75, 0x782e3044, 0x202c7a79, 0x202c3476, 0x6d0a3272, 0x6f206c75, 0x772e3044, 0x3176202c, 0x202c772e, 0x2e393263, 0x756d0a77, 0x446f206c, 0x79782e31, 0x76202c7a, 0x72202c35, 0x67730a32, 0x35722065, 0x202c792e, 0x2e33722d, 0x63202c78, 0x772e3533, 0x3470640a, 0x2e357220, 0x76202c78, 0x63202c30, 0x610a3432, 0x6f206464, 0x202c3254, 0x782e3572, 0x3572202c, 0x6d0a792e, 0x6f206c75, 0x782e3054, 0x76202c79, 0x63202c33, 0x78782e36, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x1, 0x800f0003, 0x90e40000, 0x4, 0x80030003, 0x90540006, 0xa054001f, 0x80540003, 0x4, 0x80030003, 0x90540006, 0xa0fe001f, 0x80540003, 0x14, 0x800f0002, 0x80e40003, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40002, 0x4, 0x80010004, 0x80ff0002, 0xa0000013, 0xa0550013, 0x4, 0x80020004, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000004, 0x80550004, 0x5, 0x80070000, 0x90ff0001, 0xa0e4001d, 0x4, 0x80070001, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080002, 0x90ff0004, 0xa055001e, 0x4, 0x80080002, 0x90ff0005, 0xa000001e, 0x80ff0002, 0x9, 0x80010006, 0x90e40000, 0xa0e40019, 0x9, 0x80020006, 0x90e40000, 0xa0e4001a, 0x4, 0x80030007, 0x80540006, 0x80540006, 0xa0aa0003, 0x4f, 0x800f0008, 0x80000007, 0x5, 0x80010006, 0x80000006, 0x80aa0008, 0x4f, 0x800f0008, 0x80550007, 0x5, 0x80020006, 0x80550006, 0x80aa0008, 0x7, 0x80010007, 0x80000007, 0x7, 0x80020007, 0x80550007, 0x5, 0x80030006, 0x80540006, 0x80540007, 0x4, 0xe0030001, 0x80540006, 0xa054001b, 0xa0fe001b, 0x8, 0x80010003, 0x80e40001, 0xa0e40023, 0x5, 0x80070002, 0x80ff0002, 0x80e40000, 0x5, 0xd0070000, 0x90e40004, 0x80e40002, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40002, 0xd, 0x80020005, 0x81000003, 0xa0ff0023, 0x9, 0x80010005, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000005, 0x80550005, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0xffff };
SVShader vsG3TransparentGeomEXT( 27, dwvs11G3TransparentGeomEXT,0);
static DWORD dwvs11G3DiffuseTex2[] ={ 0xfffe0101, 0x117fffe, 0x47554244, 0x28, 0x425, 0x140, 0x0, 0x0, 0x23, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x464, 0xffff0003, 0x470, 0xffff0004, 0x47c, 0xffff0005, 0x488, 0xffff0006, 0x494, 0xffff0007, 0x4a0, 0xffff0008, 0x4ac, 0xffff0009, 0x4bc, 0xffff000a, 0x4c8, 0xffff000b, 0x4dc, 0xffff000c, 0x4f0, 0xffff000d, 0x500, 0xffff000e, 0x514, 0xffff000f, 0x524, 0xffff0010, 0x538, 0xffff0011, 0x548, 0xffff0012, 0x558, 0xffff0013, 0x56c, 0xffff0014, 0x578, 0xffff0015, 0x588, 0xffff0016, 0x594, 0xffff0017, 0x5a4, 0xffff0018, 0x5b0, 0xffff0019, 0x5bc, 0xffff001a, 0x5cc, 0xffff001b, 0x5e0, 0xffff001c, 0x5f0, 0xffff001d, 0x600, 0xffff001e, 0x610, 0xffff001f, 0x620, 0xffff0020, 0x630, 0xffff0021, 0x640, 0xffff0022, 0x650, 0xffff0023, 0x660, 0xffff0024, 0x670, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x31722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3172, 0x72206461, 0x2c782e32, 0x2e317220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3272, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e32, 0x2e327220, 0x616d0a79, 0x30722064, 0x7a79782e, 0x3176202c, 0x3363202c, 0x7878782e, 0x3363202c, 0x7979792e, 0x6c756d0a, 0x2e317220, 0x76202c77, 0x2c772e34, 0x30336320, 0x6d0a792e, 0x72206461, 0x2c772e31, 0x2e357620, 0x63202c77, 0x782e3033, 0x3172202c, 0x640a772e, 0x72203470, 0x2c782e35, 0x2c307620, 0x35326320, 0x3470640a, 0x2e357220, 0x76202c79, 0x63202c30, 0x6d0a3632, 0x72206461, 0x79782e36, 0x3572202c, 0x2c79782e, 0x2e357220, 0x202c7978, 0x7a2e3363, 0x676f6c0a, 0x37722070, 0x3672202c, 0x6d0a782e, 0x72206c75, 0x2c782e35, 0x2e357220, 0x72202c78, 0xa7a2e37, 0x70676f6c, 0x2c377220, 0x2e367220, 0x756d0a79, 0x3572206c, 0x202c792e, 0x792e3572, 0x3772202c, 0x720a7a2e, 0x72207173, 0x2c782e36, 0x2e367220, 0x73720a78, 0x36722071, 0x202c792e, 0x792e3672, 0x6c756d0a, 0x2e357220, 0x202c7978, 0x782e3572, 0x72202c79, 0x79782e36, 0x64616d0a, 0x31546f20, 0x2c79782e, 0x2e357220, 0x202c7978, 0x2e373263, 0x202c7978, 0x2e373263, 0x640a777a, 0x72203370, 0x2c782e32, 0x2c307220, 0x35336320, 0x6c756d0a, 0x2e317220, 0x2c7a7978, 0x2e317220, 0x63202c77, 0x6d0a3932, 0x6f206c75, 0x782e3044, 0x202c7a79, 0x202c3476, 0x6d0a3172, 0x6f206c75, 0x772e3044, 0x3176202c, 0x202c772e, 0x2e393263, 0x756d0a77, 0x446f206c, 0x79782e31, 0x76202c7a, 0x72202c35, 0x67730a31, 0x34722065, 0x202c792e, 0x2e32722d, 0x63202c78, 0x772e3533, 0x3470640a, 0x2e347220, 0x76202c78, 0x63202c30, 0x610a3432, 0x6f206464, 0x202c3254, 0x782e3472, 0x3472202c, 0x6d0a792e, 0x6f206c75, 0x782e3054, 0x76202c79, 0x63202c33, 0x78782e36, 0x64616d0a, 0x33546f20, 0x2c79782e, 0x2c367620, 0x31336320, 0x2c78782e, 0x31336320, 0xa79792e, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0001, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40001, 0x4, 0x80010002, 0x80ff0001, 0xa0000013, 0xa0550013, 0x4, 0x80020002, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000002, 0x80550002, 0x4, 0x80070000, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080001, 0x90ff0004, 0xa055001e, 0x4, 0x80080001, 0x90ff0005, 0xa000001e, 0x80ff0001, 0x9, 0x80010005, 0x90e40000, 0xa0e40019, 0x9, 0x80020005, 0x90e40000, 0xa0e4001a, 0x4, 0x80030006, 0x80540005, 0x80540005, 0xa0aa0003, 0x4f, 0x800f0007, 0x80000006, 0x5, 0x80010005, 0x80000005, 0x80aa0007, 0x4f, 0x800f0007, 0x80550006, 0x5, 0x80020005, 0x80550005, 0x80aa0007, 0x7, 0x80010006, 0x80000006, 0x7, 0x80020006, 0x80550006, 0x5, 0x80030005, 0x80540005, 0x80540006, 0x4, 0xe0030001, 0x80540005, 0xa054001b, 0xa0fe001b, 0x8, 0x80010002, 0x80e40000, 0xa0e40023, 0x5, 0x80070001, 0x80ff0001, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40001, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40001, 0xd, 0x80020004, 0x81000002, 0xa0ff0023, 0x9, 0x80010004, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000004, 0x80550004, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0x4, 0xe0030003, 0x90e40006, 0xa000001f, 0xa055001f, 0xffff };
SVShader vsG3DiffuseTex2( 28, dwvs11G3DiffuseTex2,0);
static DWORD dwvs11G3DiffuseTex2NoShadows[] ={ 0xfffe0101, 0x117fffe, 0x47554244, 0x28, 0x425, 0x140, 0x0, 0x0, 0x23, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x464, 0xffff0003, 0x470, 0xffff0004, 0x47c, 0xffff0005, 0x488, 0xffff0006, 0x494, 0xffff0007, 0x4a0, 0xffff0008, 0x4ac, 0xffff0009, 0x4bc, 0xffff000a, 0x4c8, 0xffff000b, 0x4dc, 0xffff000c, 0x4f0, 0xffff000d, 0x500, 0xffff000e, 0x514, 0xffff000f, 0x524, 0xffff0010, 0x538, 0xffff0011, 0x548, 0xffff0012, 0x558, 0xffff0013, 0x56c, 0xffff0014, 0x578, 0xffff0015, 0x588, 0xffff0016, 0x594, 0xffff0017, 0x5a4, 0xffff0018, 0x5b0, 0xffff0019, 0x5bc, 0xffff001a, 0x5cc, 0xffff001b, 0x5e0, 0xffff001c, 0x5f0, 0xffff001d, 0x600, 0xffff001e, 0x610, 0xffff001f, 0x620, 0xffff0020, 0x630, 0xffff0021, 0x640, 0xffff0022, 0x650, 0xffff0023, 0x660, 0xffff0024, 0x670, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x31722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3172, 0x72206461, 0x2c782e32, 0x2e317220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3272, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e32, 0x2e327220, 0x616d0a79, 0x30722064, 0x7a79782e, 0x3176202c, 0x3363202c, 0x7878782e, 0x3363202c, 0x7979792e, 0x6c756d0a, 0x2e317220, 0x76202c77, 0x2c772e34, 0x30336320, 0x6d0a792e, 0x72206461, 0x2c772e31, 0x2e357620, 0x63202c77, 0x782e3033, 0x3172202c, 0x640a772e, 0x72203470, 0x2c782e35, 0x2c307620, 0x35326320, 0x3470640a, 0x2e357220, 0x76202c79, 0x63202c30, 0x6d0a3632, 0x72206461, 0x79782e36, 0x3572202c, 0x2c79782e, 0x2e357220, 0x202c7978, 0x7a2e3363, 0x676f6c0a, 0x37722070, 0x3672202c, 0x6d0a782e, 0x72206c75, 0x2c782e35, 0x2e357220, 0x72202c78, 0xa7a2e37, 0x70676f6c, 0x2c377220, 0x2e367220, 0x756d0a79, 0x3572206c, 0x202c792e, 0x792e3572, 0x3772202c, 0x720a7a2e, 0x72207173, 0x2c782e36, 0x2e367220, 0x73720a78, 0x36722071, 0x202c792e, 0x792e3672, 0x6c756d0a, 0x2e357220, 0x202c7978, 0x782e3572, 0x72202c79, 0x79782e36, 0x64616d0a, 0x31546f20, 0x2c79782e, 0x2e357220, 0x202c7978, 0x2e373263, 0x202c7978, 0x2e373263, 0x640a777a, 0x72203370, 0x2c782e32, 0x2c307220, 0x35336320, 0x6c756d0a, 0x2e317220, 0x2c7a7978, 0x2e317220, 0x63202c77, 0x6d0a3932, 0x6f206c75, 0x782e3044, 0x202c7a79, 0x202c3476, 0x6d0a3172, 0x6f206c75, 0x772e3044, 0x3176202c, 0x202c772e, 0x2e393263, 0x756d0a77, 0x446f206c, 0x79782e31, 0x76202c7a, 0x72202c35, 0x67730a31, 0x34722065, 0x202c792e, 0x2e32722d, 0x63202c78, 0x772e3533, 0x3470640a, 0x2e347220, 0x76202c78, 0x63202c30, 0x610a3432, 0x6f206464, 0x202c3254, 0x782e3472, 0x3472202c, 0x6d0a792e, 0x6f206c75, 0x782e3054, 0x76202c79, 0x63202c33, 0x78782e36, 0x64616d0a, 0x31546f20, 0x2c79782e, 0x2c367620, 0x31336320, 0x2c78782e, 0x31336320, 0xa79792e, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0001, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40001, 0x4, 0x80010002, 0x80ff0001, 0xa0000013, 0xa0550013, 0x4, 0x80020002, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000002, 0x80550002, 0x4, 0x80070000, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080001, 0x90ff0004, 0xa055001e, 0x4, 0x80080001, 0x90ff0005, 0xa000001e, 0x80ff0001, 0x9, 0x80010005, 0x90e40000, 0xa0e40019, 0x9, 0x80020005, 0x90e40000, 0xa0e4001a, 0x4, 0x80030006, 0x80540005, 0x80540005, 0xa0aa0003, 0x4f, 0x800f0007, 0x80000006, 0x5, 0x80010005, 0x80000005, 0x80aa0007, 0x4f, 0x800f0007, 0x80550006, 0x5, 0x80020005, 0x80550005, 0x80aa0007, 0x7, 0x80010006, 0x80000006, 0x7, 0x80020006, 0x80550006, 0x5, 0x80030005, 0x80540005, 0x80540006, 0x4, 0xe0030001, 0x80540005, 0xa054001b, 0xa0fe001b, 0x8, 0x80010002, 0x80e40000, 0xa0e40023, 0x5, 0x80070001, 0x80ff0001, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40001, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40001, 0xd, 0x80020004, 0x81000002, 0xa0ff0023, 0x9, 0x80010004, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000004, 0x80550004, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0x4, 0xe0030001, 0x90e40006, 0xa000001f, 0xa055001f, 0xffff };
SVShader vsG3DiffuseTex2NoShadows( 29, dwvs11G3DiffuseTex2NoShadows,0);
static DWORD dwvs11G3DiffuseTexDetail[] ={ 0xfffe0101, 0x115fffe, 0x47554244, 0x28, 0x41d, 0x140, 0x0, 0x0, 0x23, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x45c, 0xffff0003, 0x468, 0xffff0004, 0x474, 0xffff0005, 0x480, 0xffff0006, 0x48c, 0xffff0007, 0x498, 0xffff0008, 0x4a4, 0xffff0009, 0x4b4, 0xffff000a, 0x4c0, 0xffff000b, 0x4d4, 0xffff000c, 0x4e8, 0xffff000d, 0x4f8, 0xffff000e, 0x50c, 0xffff000f, 0x51c, 0xffff0010, 0x530, 0xffff0011, 0x540, 0xffff0012, 0x550, 0xffff0013, 0x564, 0xffff0014, 0x570, 0xffff0015, 0x580, 0xffff0016, 0x58c, 0xffff0017, 0x59c, 0xffff0018, 0x5a8, 0xffff0019, 0x5b4, 0xffff001a, 0x5c4, 0xffff001b, 0x5d8, 0xffff001c, 0x5e8, 0xffff001d, 0x5f8, 0xffff001e, 0x608, 0xffff001f, 0x618, 0xffff0020, 0x628, 0xffff0021, 0x638, 0xffff0022, 0x648, 0xffff0023, 0x658, 0xffff0024, 0x668, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x31722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3172, 0x72206461, 0x2c782e32, 0x2e317220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3272, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e32, 0x2e327220, 0x616d0a79, 0x30722064, 0x7a79782e, 0x3176202c, 0x3363202c, 0x7878782e, 0x3363202c, 0x7979792e, 0x6c756d0a, 0x2e317220, 0x76202c77, 0x2c772e34, 0x30336320, 0x6d0a792e, 0x72206461, 0x2c772e31, 0x2e357620, 0x63202c77, 0x782e3033, 0x3172202c, 0x640a772e, 0x72203470, 0x2c782e35, 0x2c307620, 0x35326320, 0x3470640a, 0x2e357220, 0x76202c79, 0x63202c30, 0x6d0a3632, 0x72206461, 0x79782e36, 0x3572202c, 0x2c79782e, 0x2e357220, 0x202c7978, 0x7a2e3363, 0x676f6c0a, 0x37722070, 0x3672202c, 0x6d0a782e, 0x72206c75, 0x2c782e35, 0x2e357220, 0x72202c78, 0xa7a2e37, 0x70676f6c, 0x2c377220, 0x2e367220, 0x756d0a79, 0x3572206c, 0x202c792e, 0x792e3572, 0x3772202c, 0x720a7a2e, 0x72207173, 0x2c782e36, 0x2e367220, 0x73720a78, 0x36722071, 0x202c792e, 0x792e3672, 0x6c756d0a, 0x2e357220, 0x202c7978, 0x782e3572, 0x72202c79, 0x79782e36, 0x64616d0a, 0x31546f20, 0x2c79782e, 0x2e357220, 0x202c7978, 0x2e373263, 0x202c7978, 0x2e373263, 0x640a777a, 0x72203370, 0x2c782e32, 0x2c307220, 0x35336320, 0x6c756d0a, 0x2e317220, 0x2c7a7978, 0x2e317220, 0x63202c77, 0x6d0a3932, 0x6f206c75, 0x782e3044, 0x202c7a79, 0x202c3476, 0x6d0a3172, 0x6f206c75, 0x772e3044, 0x3176202c, 0x202c772e, 0x2e393263, 0x756d0a77, 0x446f206c, 0x79782e31, 0x76202c7a, 0x72202c35, 0x67730a31, 0x34722065, 0x202c792e, 0x2e32722d, 0x63202c78, 0x772e3533, 0x3470640a, 0x2e347220, 0x76202c78, 0x63202c30, 0x610a3432, 0x6f206464, 0x202c3254, 0x782e3472, 0x3472202c, 0x6d0a792e, 0x6f206c75, 0x782e3054, 0x76202c79, 0x63202c33, 0x78782e36, 0x6c756d0a, 0x33546f20, 0x2c79782e, 0x2c337620, 0x32336320, 0xa78782e, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0001, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40001, 0x4, 0x80010002, 0x80ff0001, 0xa0000013, 0xa0550013, 0x4, 0x80020002, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000002, 0x80550002, 0x4, 0x80070000, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080001, 0x90ff0004, 0xa055001e, 0x4, 0x80080001, 0x90ff0005, 0xa000001e, 0x80ff0001, 0x9, 0x80010005, 0x90e40000, 0xa0e40019, 0x9, 0x80020005, 0x90e40000, 0xa0e4001a, 0x4, 0x80030006, 0x80540005, 0x80540005, 0xa0aa0003, 0x4f, 0x800f0007, 0x80000006, 0x5, 0x80010005, 0x80000005, 0x80aa0007, 0x4f, 0x800f0007, 0x80550006, 0x5, 0x80020005, 0x80550005, 0x80aa0007, 0x7, 0x80010006, 0x80000006, 0x7, 0x80020006, 0x80550006, 0x5, 0x80030005, 0x80540005, 0x80540006, 0x4, 0xe0030001, 0x80540005, 0xa054001b, 0xa0fe001b, 0x8, 0x80010002, 0x80e40000, 0xa0e40023, 0x5, 0x80070001, 0x80ff0001, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40001, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40001, 0xd, 0x80020004, 0x81000002, 0xa0ff0023, 0x9, 0x80010004, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000004, 0x80550004, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0x5, 0xe0030003, 0x90e40003, 0xa0000020, 0xffff };
SVShader vsG3DiffuseTexDetail( 30, dwvs11G3DiffuseTexDetail,0);
static DWORD dwvs11G3DiffuseTexDetailLM[] ={ 0xfffe0101, 0x11ffffe, 0x47554244, 0x28, 0x444, 0x148, 0x0, 0x0, 0x24, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x484, 0xffff0003, 0x490, 0xffff0004, 0x49c, 0xffff0005, 0x4a8, 0xffff0006, 0x4b4, 0xffff0007, 0x4c0, 0xffff0008, 0x4cc, 0xffff0009, 0x4dc, 0xffff000a, 0x4e8, 0xffff000b, 0x4fc, 0xffff000c, 0x510, 0xffff000d, 0x520, 0xffff000e, 0x534, 0xffff000f, 0x544, 0xffff0010, 0x558, 0xffff0011, 0x568, 0xffff0012, 0x578, 0xffff0013, 0x58c, 0xffff0014, 0x598, 0xffff0015, 0x5a8, 0xffff0016, 0x5b4, 0xffff0017, 0x5c4, 0xffff0018, 0x5d0, 0xffff0019, 0x5dc, 0xffff001a, 0x5ec, 0xffff001b, 0x600, 0xffff001c, 0x610, 0xffff001d, 0x620, 0xffff001e, 0x630, 0xffff001f, 0x640, 0xffff0020, 0x650, 0xffff0021, 0x660, 0xffff0022, 0x670, 0xffff0023, 0x680, 0xffff0024, 0x690, 0xffff0025, 0x6a4, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x31722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3172, 0x72206461, 0x2c782e32, 0x2e317220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3272, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e32, 0x2e327220, 0x616d0a79, 0x30722064, 0x7a79782e, 0x3176202c, 0x3363202c, 0x7878782e, 0x3363202c, 0x7979792e, 0x6c756d0a, 0x2e317220, 0x76202c77, 0x2c772e34, 0x30336320, 0x6d0a792e, 0x72206461, 0x2c772e31, 0x2e357620, 0x63202c77, 0x782e3033, 0x3172202c, 0x640a772e, 0x72203470, 0x2c782e35, 0x2c307620, 0x35326320, 0x3470640a, 0x2e357220, 0x76202c79, 0x63202c30, 0x6d0a3632, 0x72206461, 0x79782e36, 0x3572202c, 0x2c79782e, 0x2e357220, 0x202c7978, 0x7a2e3363, 0x676f6c0a, 0x37722070, 0x3672202c, 0x6d0a782e, 0x72206c75, 0x2c782e35, 0x2e357220, 0x72202c78, 0xa7a2e37, 0x70676f6c, 0x2c377220, 0x2e367220, 0x756d0a79, 0x3572206c, 0x202c792e, 0x792e3572, 0x3772202c, 0x720a7a2e, 0x72207173, 0x2c782e36, 0x2e367220, 0x73720a78, 0x36722071, 0x202c792e, 0x792e3672, 0x6c756d0a, 0x2e357220, 0x202c7978, 0x782e3572, 0x72202c79, 0x79782e36, 0x64616d0a, 0x31546f20, 0x2c79782e, 0x2e357220, 0x202c7978, 0x2e373263, 0x202c7978, 0x2e373263, 0x640a777a, 0x72203370, 0x2c782e32, 0x2c307220, 0x35336320, 0x6c756d0a, 0x2e317220, 0x2c7a7978, 0x2e317220, 0x63202c77, 0x6d0a3932, 0x6f206c75, 0x782e3044, 0x202c7a79, 0x202c3476, 0x6d0a3172, 0x6f206c75, 0x772e3044, 0x3176202c, 0x202c772e, 0x2e393263, 0x756d0a77, 0x446f206c, 0x79782e31, 0x76202c7a, 0x72202c35, 0x67730a31, 0x34722065, 0x202c792e, 0x2e32722d, 0x63202c78, 0x772e3533, 0x3470640a, 0x2e347220, 0x76202c78, 0x63202c30, 0x610a3432, 0x6f206464, 0x202c3254, 0x782e3472, 0x3472202c, 0x6d0a792e, 0x6f206c75, 0x782e3054, 0x76202c79, 0x63202c33, 0x78782e36, 0x64616d0a, 0x33546f20, 0x2c79782e, 0x2c367620, 0x31336320, 0x2c78782e, 0x31336320, 0xa79792e, 0x206c756d, 0x2e34546f, 0x202c7978, 0x202c3376, 0x2e323363, 0xa7878, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0001, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40001, 0x4, 0x80010002, 0x80ff0001, 0xa0000013, 0xa0550013, 0x4, 0x80020002, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000002, 0x80550002, 0x4, 0x80070000, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080001, 0x90ff0004, 0xa055001e, 0x4, 0x80080001, 0x90ff0005, 0xa000001e, 0x80ff0001, 0x9, 0x80010005, 0x90e40000, 0xa0e40019, 0x9, 0x80020005, 0x90e40000, 0xa0e4001a, 0x4, 0x80030006, 0x80540005, 0x80540005, 0xa0aa0003, 0x4f, 0x800f0007, 0x80000006, 0x5, 0x80010005, 0x80000005, 0x80aa0007, 0x4f, 0x800f0007, 0x80550006, 0x5, 0x80020005, 0x80550005, 0x80aa0007, 0x7, 0x80010006, 0x80000006, 0x7, 0x80020006, 0x80550006, 0x5, 0x80030005, 0x80540005, 0x80540006, 0x4, 0xe0030001, 0x80540005, 0xa054001b, 0xa0fe001b, 0x8, 0x80010002, 0x80e40000, 0xa0e40023, 0x5, 0x80070001, 0x80ff0001, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40001, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40001, 0xd, 0x80020004, 0x81000002, 0xa0ff0023, 0x9, 0x80010004, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000004, 0x80550004, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0x4, 0xe0030003, 0x90e40006, 0xa000001f, 0xa055001f, 0x5, 0xe0030004, 0x90e40003, 0xa0000020, 0xffff };
SVShader vsG3DiffuseTexDetailLM( 31, dwvs11G3DiffuseTexDetailLM,0);
static DWORD dwvs11G3DiffuseTexTerrain[] ={ 0xfffe0101, 0x10dfffe, 0x47554244, 0x28, 0x3fe, 0x138, 0x0, 0x0, 0x22, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x43c, 0xffff0003, 0x448, 0xffff0004, 0x454, 0xffff0005, 0x460, 0xffff0006, 0x46c, 0xffff0007, 0x478, 0xffff0008, 0x484, 0xffff0009, 0x494, 0xffff000a, 0x4a0, 0xffff000b, 0x4b4, 0xffff000c, 0x4c8, 0xffff000d, 0x4d8, 0xffff000e, 0x4ec, 0xffff000f, 0x4fc, 0xffff0010, 0x510, 0xffff0011, 0x520, 0xffff0012, 0x530, 0xffff0013, 0x544, 0xffff0014, 0x550, 0xffff0015, 0x560, 0xffff0016, 0x56c, 0xffff0017, 0x57c, 0xffff0018, 0x588, 0xffff0019, 0x594, 0xffff001a, 0x5a4, 0xffff001b, 0x5b8, 0xffff001c, 0x5c8, 0xffff001d, 0x5d8, 0xffff001e, 0x5e8, 0xffff001f, 0x5f8, 0xffff0020, 0x608, 0xffff0021, 0x618, 0xffff0022, 0x628, 0xffff0023, 0x638, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x31722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3172, 0x72206461, 0x2c782e32, 0x2e317220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3272, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e32, 0x2e327220, 0x616d0a79, 0x30722064, 0x7a79782e, 0x3176202c, 0x3363202c, 0x7878782e, 0x3363202c, 0x7979792e, 0x6c756d0a, 0x2e317220, 0x76202c77, 0x2c772e34, 0x30336320, 0x6d0a792e, 0x72206461, 0x2c772e31, 0x2e357620, 0x63202c77, 0x782e3033, 0x3172202c, 0x640a772e, 0x72203470, 0x2c782e35, 0x2c307620, 0x35326320, 0x3470640a, 0x2e357220, 0x76202c79, 0x63202c30, 0x6d0a3632, 0x72206461, 0x79782e36, 0x3572202c, 0x2c79782e, 0x2e357220, 0x202c7978, 0x7a2e3363, 0x676f6c0a, 0x37722070, 0x3672202c, 0x6d0a782e, 0x72206c75, 0x2c782e35, 0x2e357220, 0x72202c78, 0xa7a2e37, 0x70676f6c, 0x2c377220, 0x2e367220, 0x756d0a79, 0x3572206c, 0x202c792e, 0x792e3572, 0x3772202c, 0x720a7a2e, 0x72207173, 0x2c782e36, 0x2e367220, 0x73720a78, 0x36722071, 0x202c792e, 0x792e3672, 0x6c756d0a, 0x2e357220, 0x202c7978, 0x782e3572, 0x72202c79, 0x79782e36, 0x64616d0a, 0x31546f20, 0x2c79782e, 0x2e357220, 0x202c7978, 0x2e373263, 0x202c7978, 0x2e373263, 0x640a777a, 0x72203370, 0x2c782e32, 0x2c307220, 0x35336320, 0x6c756d0a, 0x2e317220, 0x2c7a7978, 0x2e317220, 0x63202c77, 0x6d0a3932, 0x6f206c75, 0x782e3044, 0x202c7a79, 0x202c3476, 0x6d0a3172, 0x6f206c75, 0x772e3044, 0x3176202c, 0x202c772e, 0x2e393263, 0x756d0a77, 0x446f206c, 0x79782e31, 0x76202c7a, 0x72202c35, 0x67730a31, 0x34722065, 0x202c792e, 0x2e32722d, 0x63202c78, 0x772e3533, 0x3470640a, 0x2e347220, 0x76202c78, 0x63202c30, 0x610a3432, 0x6f206464, 0x202c3254, 0x782e3472, 0x3472202c, 0x6d0a792e, 0x6f206c75, 0x782e3054, 0x76202c79, 0x63202c33, 0x78782e36, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0001, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40001, 0x4, 0x80010002, 0x80ff0001, 0xa0000013, 0xa0550013, 0x4, 0x80020002, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000002, 0x80550002, 0x4, 0x80070000, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080001, 0x90ff0004, 0xa055001e, 0x4, 0x80080001, 0x90ff0005, 0xa000001e, 0x80ff0001, 0x9, 0x80010005, 0x90e40000, 0xa0e40019, 0x9, 0x80020005, 0x90e40000, 0xa0e4001a, 0x4, 0x80030006, 0x80540005, 0x80540005, 0xa0aa0003, 0x4f, 0x800f0007, 0x80000006, 0x5, 0x80010005, 0x80000005, 0x80aa0007, 0x4f, 0x800f0007, 0x80550006, 0x5, 0x80020005, 0x80550005, 0x80aa0007, 0x7, 0x80010006, 0x80000006, 0x7, 0x80020006, 0x80550006, 0x5, 0x80030005, 0x80540005, 0x80540006, 0x4, 0xe0030001, 0x80540005, 0xa054001b, 0xa0fe001b, 0x8, 0x80010002, 0x80e40000, 0xa0e40023, 0x5, 0x80070001, 0x80ff0001, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40001, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40001, 0xd, 0x80020004, 0x81000002, 0xa0ff0023, 0x9, 0x80010004, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000004, 0x80550004, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0xffff };
SVShader vsG3DiffuseTexTerrain( 32, dwvs11G3DiffuseTexTerrain,0);
static DWORD dwvs11G3DiffuseTex2Terrain[] ={ 0xfffe0101, 0x115fffe, 0x47554244, 0x28, 0x41c, 0x140, 0x0, 0x0, 0x23, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x45c, 0xffff0003, 0x468, 0xffff0004, 0x474, 0xffff0005, 0x480, 0xffff0006, 0x48c, 0xffff0007, 0x498, 0xffff0008, 0x4a4, 0xffff0009, 0x4b4, 0xffff000a, 0x4c0, 0xffff000b, 0x4d4, 0xffff000c, 0x4e8, 0xffff000d, 0x4f8, 0xffff000e, 0x50c, 0xffff000f, 0x51c, 0xffff0010, 0x530, 0xffff0011, 0x540, 0xffff0012, 0x550, 0xffff0013, 0x564, 0xffff0014, 0x570, 0xffff0015, 0x580, 0xffff0016, 0x58c, 0xffff0017, 0x59c, 0xffff0018, 0x5a8, 0xffff0019, 0x5b4, 0xffff001a, 0x5c4, 0xffff001b, 0x5d8, 0xffff001c, 0x5e8, 0xffff001d, 0x5f8, 0xffff001e, 0x608, 0xffff001f, 0x618, 0xffff0020, 0x628, 0xffff0021, 0x638, 0xffff0022, 0x648, 0xffff0023, 0x658, 0xffff0024, 0x668, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x31722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3172, 0x72206461, 0x2c782e32, 0x2e317220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3272, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e32, 0x2e327220, 0x616d0a79, 0x30722064, 0x7a79782e, 0x3176202c, 0x3363202c, 0x7878782e, 0x3363202c, 0x7979792e, 0x6c756d0a, 0x2e317220, 0x76202c77, 0x2c772e34, 0x30336320, 0x6d0a792e, 0x72206461, 0x2c772e31, 0x2e357620, 0x63202c77, 0x782e3033, 0x3172202c, 0x640a772e, 0x72203470, 0x2c782e35, 0x2c307620, 0x35326320, 0x3470640a, 0x2e357220, 0x76202c79, 0x63202c30, 0x6d0a3632, 0x72206461, 0x79782e36, 0x3572202c, 0x2c79782e, 0x2e357220, 0x202c7978, 0x7a2e3363, 0x676f6c0a, 0x37722070, 0x3672202c, 0x6d0a782e, 0x72206c75, 0x2c782e35, 0x2e357220, 0x72202c78, 0xa7a2e37, 0x70676f6c, 0x2c377220, 0x2e367220, 0x756d0a79, 0x3572206c, 0x202c792e, 0x792e3572, 0x3772202c, 0x720a7a2e, 0x72207173, 0x2c782e36, 0x2e367220, 0x73720a78, 0x36722071, 0x202c792e, 0x792e3672, 0x6c756d0a, 0x2e357220, 0x202c7978, 0x782e3572, 0x72202c79, 0x79782e36, 0x64616d0a, 0x31546f20, 0x2c79782e, 0x2e357220, 0x202c7978, 0x2e373263, 0x202c7978, 0x2e373263, 0x640a777a, 0x72203370, 0x2c782e32, 0x2c307220, 0x35336320, 0x6c756d0a, 0x2e317220, 0x2c7a7978, 0x2e317220, 0x63202c77, 0x6d0a3932, 0x6f206c75, 0x782e3044, 0x202c7a79, 0x202c3476, 0x6d0a3172, 0x6f206c75, 0x772e3044, 0x3176202c, 0x202c772e, 0x2e393263, 0x756d0a77, 0x446f206c, 0x79782e31, 0x76202c7a, 0x72202c35, 0x67730a31, 0x34722065, 0x202c792e, 0x2e32722d, 0x63202c78, 0x772e3533, 0x3470640a, 0x2e347220, 0x76202c78, 0x63202c30, 0x610a3432, 0x6f206464, 0x202c3254, 0x782e3472, 0x3472202c, 0x6d0a792e, 0x6f206c75, 0x782e3054, 0x76202c79, 0x63202c33, 0x78782e36, 0x6c756d0a, 0x33546f20, 0x2c79782e, 0x2c367620, 0x2e366320, 0xa7878, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0001, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40001, 0x4, 0x80010002, 0x80ff0001, 0xa0000013, 0xa0550013, 0x4, 0x80020002, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000002, 0x80550002, 0x4, 0x80070000, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080001, 0x90ff0004, 0xa055001e, 0x4, 0x80080001, 0x90ff0005, 0xa000001e, 0x80ff0001, 0x9, 0x80010005, 0x90e40000, 0xa0e40019, 0x9, 0x80020005, 0x90e40000, 0xa0e4001a, 0x4, 0x80030006, 0x80540005, 0x80540005, 0xa0aa0003, 0x4f, 0x800f0007, 0x80000006, 0x5, 0x80010005, 0x80000005, 0x80aa0007, 0x4f, 0x800f0007, 0x80550006, 0x5, 0x80020005, 0x80550005, 0x80aa0007, 0x7, 0x80010006, 0x80000006, 0x7, 0x80020006, 0x80550006, 0x5, 0x80030005, 0x80540005, 0x80540006, 0x4, 0xe0030001, 0x80540005, 0xa054001b, 0xa0fe001b, 0x8, 0x80010002, 0x80e40000, 0xa0e40023, 0x5, 0x80070001, 0x80ff0001, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40001, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40001, 0xd, 0x80020004, 0x81000002, 0xa0ff0023, 0x9, 0x80010004, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000004, 0x80550004, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0x5, 0xe0030003, 0x90e40006, 0xa0000006, 0xffff };
SVShader vsG3DiffuseTex2Terrain( 33, dwvs11G3DiffuseTex2Terrain,0);
static DWORD dwvs11ShowLM[] ={ 0xfffe0101, 0x50fffe, 0x47554244, 0x28, 0x108, 0x68, 0x0, 0x0, 0x8, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x148, 0xffff0003, 0x154, 0xffff0004, 0x160, 0xffff0005, 0x16c, 0xffff0006, 0x178, 0xffff0007, 0x184, 0xffff0008, 0x190, 0xffff0009, 0x1a0, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x506f2034, 0x202c736f, 0x202c3076, 0xa303163, 0x2064616d, 0x2e30546f, 0x202c7978, 0x202c3676, 0x2e363163, 0x202c7878, 0x2e363163, 0xa7979, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0xc00f0000, 0x90e40000, 0xa0e4000a, 0x4, 0xe0030000, 0x90e40006, 0xa0000010, 0xa0550010, 0xffff };
SVShader vsShowLM( 34, dwvs11ShowLM,0);
static DWORD dwvs11G3DiffuseTexSpec[] ={ 0xfffe0101, 0x1b2fffe, 0x47554244, 0x28, 0x690, 0x1e8, 0x0, 0x0, 0x38, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x6d0, 0xffff0003, 0x6dc, 0xffff0004, 0x6e8, 0xffff0005, 0x6f4, 0xffff0006, 0x700, 0xffff0007, 0x70c, 0xffff0008, 0x718, 0xffff0009, 0x728, 0xffff000a, 0x734, 0xffff000b, 0x748, 0xffff000c, 0x75c, 0xffff000d, 0x76c, 0xffff000e, 0x780, 0xffff000f, 0x790, 0xffff0010, 0x7a4, 0xffff0011, 0x7b4, 0xffff0012, 0x7c4, 0xffff0013, 0x7d8, 0xffff0014, 0x7e4, 0xffff0015, 0x7f4, 0xffff0016, 0x800, 0xffff0017, 0x810, 0xffff0018, 0x81c, 0xffff0019, 0x828, 0xffff001a, 0x838, 0xffff001b, 0x84c, 0xffff001c, 0x85c, 0xffff001d, 0x86c, 0xffff001e, 0x87c, 0xffff001f, 0x88c, 0xffff0020, 0x89c, 0xffff0021, 0x8ac, 0xffff0022, 0x8bc, 0xffff0023, 0x8cc, 0xffff0024, 0x8dc, 0xffff0025, 0x8ec, 0xffff0026, 0x8fc, 0xffff0027, 0x90c, 0xffff0028, 0x920, 0xffff0029, 0x930, 0xffff002a, 0x93c, 0xffff002b, 0x94c, 0xffff002c, 0x95c, 0xffff002d, 0x968, 0xffff002e, 0x978, 0xffff002f, 0x98c, 0xffff0030, 0x99c, 0xffff0031, 0x9a8, 0xffff0032, 0x9b8, 0xffff0033, 0x9cc, 0xffff0034, 0x9dc, 0xffff0035, 0x9e8, 0xffff0036, 0x9f8, 0xffff0037, 0xa08, 0xffff0038, 0xa18, 0xffff0039, 0xa28, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x31722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3172, 0x72206461, 0x2c782e32, 0x2e317220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3272, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e32, 0x2e327220, 0x616d0a79, 0x30722064, 0x7a79782e, 0x3176202c, 0x3363202c, 0x7878782e, 0x3363202c, 0x7979792e, 0x6c756d0a, 0x2e317220, 0x76202c77, 0x2c772e34, 0x30336320, 0x6d0a792e, 0x72206461, 0x2c772e31, 0x2e357620, 0x63202c77, 0x782e3033, 0x3172202c, 0x640a772e, 0x72203470, 0x2c782e35, 0x2c307620, 0x35326320, 0x3470640a, 0x2e357220, 0x76202c79, 0x63202c30, 0x6d0a3632, 0x72206461, 0x79782e36, 0x3572202c, 0x2c79782e, 0x2e357220, 0x202c7978, 0x7a2e3363, 0x676f6c0a, 0x37722070, 0x3672202c, 0x6d0a782e, 0x72206c75, 0x2c782e35, 0x2e357220, 0x72202c78, 0xa7a2e37, 0x70676f6c, 0x2c377220, 0x2e367220, 0x756d0a79, 0x3572206c, 0x202c792e, 0x792e3572, 0x3772202c, 0x720a7a2e, 0x72207173, 0x2c782e36, 0x2e367220, 0x73720a78, 0x36722071, 0x202c792e, 0x792e3672, 0x6c756d0a, 0x2e357220, 0x202c7978, 0x782e3572, 0x72202c79, 0x79782e36, 0x64616d0a, 0x31546f20, 0x2c79782e, 0x2e357220, 0x202c7978, 0x2e373263, 0x202c7978, 0x2e373263, 0x640a777a, 0x72203370, 0x2c782e32, 0x2c307220, 0x35336320, 0x6c756d0a, 0x2e317220, 0x2c7a7978, 0x2e317220, 0x63202c77, 0x6d0a3932, 0x6f206c75, 0x782e3044, 0x202c7a79, 0x202c3476, 0x6d0a3172, 0x6f206c75, 0x772e3044, 0x3176202c, 0x202c772e, 0x2e393263, 0x756d0a77, 0x446f206c, 0x79782e31, 0x76202c7a, 0x72202c35, 0x67730a31, 0x34722065, 0x202c792e, 0x2e32722d, 0x63202c78, 0x772e3533, 0x3470640a, 0x2e347220, 0x76202c78, 0x63202c30, 0x610a3432, 0x6f206464, 0x202c3254, 0x782e3472, 0x3472202c, 0x6d0a792e, 0x6f206c75, 0x782e3054, 0x76202c79, 0x63202c33, 0x78782e36, 0x6c756d0a, 0x33546f20, 0x2c79782e, 0x2c337620, 0x2e366320, 0x6d0a7878, 0x72206c75, 0x79782e31, 0x72202c7a, 0x78792e30, 0x63202c7a, 0x6d0a3133, 0x72206c75, 0x79782e32, 0x72202c7a, 0x7a792e30, 0x72202c78, 0x787a2e31, 0x616d0a79, 0x32722064, 0x7a79782e, 0x3072202c, 0x79787a2e, 0x722d202c, 0x7a792e31, 0x72202c78, 0x70640a32, 0x31722033, 0x202c772e, 0x202c3172, 0x720a3172, 0x72207173, 0x2c772e36, 0x2e317220, 0x756d0a77, 0x3172206c, 0x7a79782e, 0x3172202c, 0x7a79782e, 0x3672202c, 0x640a772e, 0x72203370, 0x2c772e32, 0x2c327220, 0xa327220, 0x20717372, 0x772e3672, 0x3272202c, 0x6d0a772e, 0x72206c75, 0x79782e32, 0x72202c7a, 0x79782e32, 0x72202c7a, 0xa772e36, 0x2064616d, 0x782e3372, 0x202c7a79, 0x772e3963, 0x762d202c, 0x63202c30, 0x79782e39, 0x70640a7a, 0x33722033, 0x202c772e, 0x202c3372, 0x720a3372, 0x72207173, 0x2c772e36, 0x2e337220, 0x756d0a77, 0x3372206c, 0x7a79782e, 0x3372202c, 0x7a79782e, 0x3672202c, 0x6d0a772e, 0x72206461, 0x79782e34, 0x2d202c7a, 0x782e3076, 0x202c7a79, 0x2e353163, 0x2c777777, 0x35316320, 0x7a79782e, 0x3370640a, 0x2e347220, 0x72202c77, 0x72202c34, 0x73720a34, 0x36722071, 0x202c772e, 0x772e3472, 0x6c756d0a, 0x2e347220, 0x2c7a7978, 0x2e347220, 0x2c7a7978, 0x2e367220, 0x64610a77, 0x35722064, 0x7a79782e, 0x3372202c, 0x7a79782e, 0x3472202c, 0x7a79782e, 0x3370640a, 0x34546f20, 0x202c782e, 0x202c3172, 0x640a3572, 0x6f203370, 0x792e3454, 0x3272202c, 0x3572202c, 0x3370640a, 0x34546f20, 0x202c7a2e, 0x202c3072, 0xa3572, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0001, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40001, 0x4, 0x80010002, 0x80ff0001, 0xa0000013, 0xa0550013, 0x4, 0x80020002, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000002, 0x80550002, 0x4, 0x80070000, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080001, 0x90ff0004, 0xa055001e, 0x4, 0x80080001, 0x90ff0005, 0xa000001e, 0x80ff0001, 0x9, 0x80010005, 0x90e40000, 0xa0e40019, 0x9, 0x80020005, 0x90e40000, 0xa0e4001a, 0x4, 0x80030006, 0x80540005, 0x80540005, 0xa0aa0003, 0x4f, 0x800f0007, 0x80000006, 0x5, 0x80010005, 0x80000005, 0x80aa0007, 0x4f, 0x800f0007, 0x80550006, 0x5, 0x80020005, 0x80550005, 0x80aa0007, 0x7, 0x80010006, 0x80000006, 0x7, 0x80020006, 0x80550006, 0x5, 0x80030005, 0x80540005, 0x80540006, 0x4, 0xe0030001, 0x80540005, 0xa054001b, 0xa0fe001b, 0x8, 0x80010002, 0x80e40000, 0xa0e40023, 0x5, 0x80070001, 0x80ff0001, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40001, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40001, 0xd, 0x80020004, 0x81000002, 0xa0ff0023, 0x9, 0x80010004, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000004, 0x80550004, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0x5, 0xe0030003, 0x90e40003, 0xa0000006, 0x5, 0x80070001, 0x80a10000, 0xa0e4001f, 0x5, 0x80070002, 0x80090000, 0x80520001, 0x4, 0x80070002, 0x80520000, 0x81090001, 0x80e40002, 0x8, 0x80080001, 0x80e40001, 0x80e40001, 0x7, 0x80080006, 0x80ff0001, 0x5, 0x80070001, 0x80a40001, 0x80ff0006, 0x8, 0x80080002, 0x80e40002, 0x80e40002, 0x7, 0x80080006, 0x80ff0002, 0x5, 0x80070002, 0x80a40002, 0x80ff0006, 0x4, 0x80070003, 0xa0ff0009, 0x91e40000, 0xa0a40009, 0x8, 0x80080003, 0x80e40003, 0x80e40003, 0x7, 0x80080006, 0x80ff0003, 0x5, 0x80070003, 0x80a40003, 0x80ff0006, 0x4, 0x80070004, 0x91a40000, 0xa0ff000f, 0xa0a4000f, 0x8, 0x80080004, 0x80e40004, 0x80e40004, 0x7, 0x80080006, 0x80ff0004, 0x5, 0x80070004, 0x80a40004, 0x80ff0006, 0x2, 0x80070005, 0x80a40003, 0x80a40004, 0x8, 0xe0010004, 0x80e40001, 0x80e40005, 0x8, 0xe0020004, 0x80e40002, 0x80e40005, 0x8, 0xe0040004, 0x80e40000, 0x80e40005, 0xffff };
SVShader vsG3DiffuseTexSpec( 35, dwvs11G3DiffuseTexSpec,0);
static DWORD dwvs11G3DiffuseTexSpecLM[] ={ 0xfffe0101, 0x1bcfffe, 0x47554244, 0x28, 0x6b7, 0x1f0, 0x0, 0x0, 0x39, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x6f8, 0xffff0003, 0x704, 0xffff0004, 0x710, 0xffff0005, 0x71c, 0xffff0006, 0x728, 0xffff0007, 0x734, 0xffff0008, 0x740, 0xffff0009, 0x750, 0xffff000a, 0x75c, 0xffff000b, 0x770, 0xffff000c, 0x784, 0xffff000d, 0x794, 0xffff000e, 0x7a8, 0xffff000f, 0x7b8, 0xffff0010, 0x7cc, 0xffff0011, 0x7dc, 0xffff0012, 0x7ec, 0xffff0013, 0x800, 0xffff0014, 0x80c, 0xffff0015, 0x81c, 0xffff0016, 0x828, 0xffff0017, 0x838, 0xffff0018, 0x844, 0xffff0019, 0x850, 0xffff001a, 0x860, 0xffff001b, 0x874, 0xffff001c, 0x884, 0xffff001d, 0x894, 0xffff001e, 0x8a4, 0xffff001f, 0x8b4, 0xffff0020, 0x8c4, 0xffff0021, 0x8d4, 0xffff0022, 0x8e4, 0xffff0023, 0x8f4, 0xffff0024, 0x904, 0xffff0025, 0x914, 0xffff0026, 0x924, 0xffff0027, 0x934, 0xffff0028, 0x948, 0xffff0029, 0x958, 0xffff002a, 0x964, 0xffff002b, 0x974, 0xffff002c, 0x984, 0xffff002d, 0x990, 0xffff002e, 0x9a0, 0xffff002f, 0x9b4, 0xffff0030, 0x9c4, 0xffff0031, 0x9d0, 0xffff0032, 0x9e0, 0xffff0033, 0x9f4, 0xffff0034, 0xa04, 0xffff0035, 0xa10, 0xffff0036, 0xa20, 0xffff0037, 0xa30, 0xffff0038, 0xa40, 0xffff0039, 0xa50, 0xffff003a, 0xa60, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x31722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3172, 0x72206461, 0x2c782e32, 0x2e317220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3272, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e32, 0x2e327220, 0x616d0a79, 0x30722064, 0x7a79782e, 0x3176202c, 0x3363202c, 0x7878782e, 0x3363202c, 0x7979792e, 0x6c756d0a, 0x2e317220, 0x76202c77, 0x2c772e34, 0x30336320, 0x6d0a792e, 0x72206461, 0x2c772e31, 0x2e357620, 0x63202c77, 0x782e3033, 0x3172202c, 0x640a772e, 0x72203470, 0x2c782e35, 0x2c307620, 0x35326320, 0x3470640a, 0x2e357220, 0x76202c79, 0x63202c30, 0x6d0a3632, 0x72206461, 0x79782e36, 0x3572202c, 0x2c79782e, 0x2e357220, 0x202c7978, 0x7a2e3363, 0x676f6c0a, 0x37722070, 0x3672202c, 0x6d0a782e, 0x72206c75, 0x2c782e35, 0x2e357220, 0x72202c78, 0xa7a2e37, 0x70676f6c, 0x2c377220, 0x2e367220, 0x756d0a79, 0x3572206c, 0x202c792e, 0x792e3572, 0x3772202c, 0x720a7a2e, 0x72207173, 0x2c782e36, 0x2e367220, 0x73720a78, 0x36722071, 0x202c792e, 0x792e3672, 0x6c756d0a, 0x2e357220, 0x202c7978, 0x782e3572, 0x72202c79, 0x79782e36, 0x64616d0a, 0x31546f20, 0x2c79782e, 0x2e357220, 0x202c7978, 0x2e373263, 0x202c7978, 0x2e373263, 0x640a777a, 0x72203370, 0x2c782e32, 0x2c307220, 0x35336320, 0x6c756d0a, 0x2e317220, 0x2c7a7978, 0x2e317220, 0x63202c77, 0x6d0a3932, 0x6f206c75, 0x782e3044, 0x202c7a79, 0x202c3476, 0x6d0a3172, 0x6f206c75, 0x772e3044, 0x3176202c, 0x202c772e, 0x2e393263, 0x756d0a77, 0x446f206c, 0x79782e31, 0x76202c7a, 0x72202c35, 0x67730a31, 0x34722065, 0x202c792e, 0x2e32722d, 0x63202c78, 0x772e3533, 0x3470640a, 0x2e347220, 0x76202c78, 0x63202c30, 0x610a3432, 0x6f206464, 0x202c3254, 0x782e3472, 0x3472202c, 0x6d0a792e, 0x6f206c75, 0x782e3054, 0x76202c79, 0x63202c33, 0x78782e36, 0x6c756d0a, 0x33546f20, 0x2c79782e, 0x2c337620, 0x2e366320, 0x6d0a7878, 0x72206c75, 0x79782e31, 0x72202c7a, 0x78792e30, 0x63202c7a, 0x6d0a3133, 0x72206c75, 0x79782e32, 0x72202c7a, 0x7a792e30, 0x72202c78, 0x787a2e31, 0x616d0a79, 0x32722064, 0x7a79782e, 0x3072202c, 0x79787a2e, 0x722d202c, 0x7a792e31, 0x72202c78, 0x70640a32, 0x31722033, 0x202c772e, 0x202c3172, 0x720a3172, 0x72207173, 0x2c772e36, 0x2e317220, 0x756d0a77, 0x3172206c, 0x7a79782e, 0x3172202c, 0x7a79782e, 0x3672202c, 0x640a772e, 0x72203370, 0x2c772e32, 0x2c327220, 0xa327220, 0x20717372, 0x772e3672, 0x3272202c, 0x6d0a772e, 0x72206c75, 0x79782e32, 0x72202c7a, 0x79782e32, 0x72202c7a, 0xa772e36, 0x2064616d, 0x782e3372, 0x202c7a79, 0x772e3963, 0x762d202c, 0x63202c30, 0x79782e39, 0x70640a7a, 0x33722033, 0x202c772e, 0x202c3372, 0x720a3372, 0x72207173, 0x2c772e36, 0x2e337220, 0x756d0a77, 0x3372206c, 0x7a79782e, 0x3372202c, 0x7a79782e, 0x3672202c, 0x6d0a772e, 0x72206461, 0x79782e34, 0x2d202c7a, 0x782e3076, 0x202c7a79, 0x2e353163, 0x2c777777, 0x35316320, 0x7a79782e, 0x3370640a, 0x2e347220, 0x72202c77, 0x72202c34, 0x73720a34, 0x36722071, 0x202c772e, 0x772e3472, 0x6c756d0a, 0x2e347220, 0x2c7a7978, 0x2e347220, 0x2c7a7978, 0x2e367220, 0x64610a77, 0x35722064, 0x7a79782e, 0x3372202c, 0x7a79782e, 0x3472202c, 0x7a79782e, 0x3370640a, 0x34546f20, 0x202c782e, 0x202c3172, 0x640a3572, 0x6f203370, 0x792e3454, 0x3272202c, 0x3572202c, 0x3370640a, 0x34546f20, 0x202c7a2e, 0x202c3072, 0x6d0a3572, 0x6f206461, 0x782e3554, 0x76202c79, 0x63202c36, 0x782e3133, 0x63202c78, 0x792e3133, 0x4d000a79, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0001, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40001, 0x4, 0x80010002, 0x80ff0001, 0xa0000013, 0xa0550013, 0x4, 0x80020002, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000002, 0x80550002, 0x4, 0x80070000, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080001, 0x90ff0004, 0xa055001e, 0x4, 0x80080001, 0x90ff0005, 0xa000001e, 0x80ff0001, 0x9, 0x80010005, 0x90e40000, 0xa0e40019, 0x9, 0x80020005, 0x90e40000, 0xa0e4001a, 0x4, 0x80030006, 0x80540005, 0x80540005, 0xa0aa0003, 0x4f, 0x800f0007, 0x80000006, 0x5, 0x80010005, 0x80000005, 0x80aa0007, 0x4f, 0x800f0007, 0x80550006, 0x5, 0x80020005, 0x80550005, 0x80aa0007, 0x7, 0x80010006, 0x80000006, 0x7, 0x80020006, 0x80550006, 0x5, 0x80030005, 0x80540005, 0x80540006, 0x4, 0xe0030001, 0x80540005, 0xa054001b, 0xa0fe001b, 0x8, 0x80010002, 0x80e40000, 0xa0e40023, 0x5, 0x80070001, 0x80ff0001, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40001, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40001, 0xd, 0x80020004, 0x81000002, 0xa0ff0023, 0x9, 0x80010004, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000004, 0x80550004, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0x5, 0xe0030003, 0x90e40003, 0xa0000006, 0x5, 0x80070001, 0x80a10000, 0xa0e4001f, 0x5, 0x80070002, 0x80090000, 0x80520001, 0x4, 0x80070002, 0x80520000, 0x81090001, 0x80e40002, 0x8, 0x80080001, 0x80e40001, 0x80e40001, 0x7, 0x80080006, 0x80ff0001, 0x5, 0x80070001, 0x80a40001, 0x80ff0006, 0x8, 0x80080002, 0x80e40002, 0x80e40002, 0x7, 0x80080006, 0x80ff0002, 0x5, 0x80070002, 0x80a40002, 0x80ff0006, 0x4, 0x80070003, 0xa0ff0009, 0x91e40000, 0xa0a40009, 0x8, 0x80080003, 0x80e40003, 0x80e40003, 0x7, 0x80080006, 0x80ff0003, 0x5, 0x80070003, 0x80a40003, 0x80ff0006, 0x4, 0x80070004, 0x91a40000, 0xa0ff000f, 0xa0a4000f, 0x8, 0x80080004, 0x80e40004, 0x80e40004, 0x7, 0x80080006, 0x80ff0004, 0x5, 0x80070004, 0x80a40004, 0x80ff0006, 0x2, 0x80070005, 0x80a40003, 0x80a40004, 0x8, 0xe0010004, 0x80e40001, 0x80e40005, 0x8, 0xe0020004, 0x80e40002, 0x80e40005, 0x8, 0xe0040004, 0x80e40000, 0x80e40005, 0x4, 0xe0030005, 0x90e40006, 0xa000001f, 0xa055001f, 0xffff };
SVShader vsG3DiffuseTexSpecLM( 36, dwvs11G3DiffuseTexSpecLM,0);
static DWORD dwvs11Blend2TexColor[] ={ 0xfffe0101, 0x96fffe, 0x47554244, 0x28, 0x222, 0xb8, 0x0, 0x0, 0x12, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x260, 0xffff0003, 0x26c, 0xffff0004, 0x278, 0xffff0005, 0x284, 0xffff0006, 0x290, 0xffff0007, 0x29c, 0xffff0008, 0x2a8, 0xffff0009, 0x2b8, 0xffff000a, 0x2c4, 0xffff000b, 0x2d8, 0xffff000c, 0x2ec, 0xffff000d, 0x2fc, 0xffff000e, 0x30c, 0xffff000f, 0x320, 0xffff0010, 0x32c, 0xffff0011, 0x338, 0xffff0012, 0x344, 0xffff0013, 0x354, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x31722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3172, 0x72206461, 0x2c782e32, 0x2e317220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3272, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e32, 0x2e327220, 0x756d0a79, 0x3072206c, 0x202c772e, 0x772e3476, 0x3363202c, 0xa792e30, 0x2064616d, 0x2e31446f, 0x2c626772, 0x2e357620, 0x63202c77, 0x782e3033, 0x3072202c, 0x6d0a772e, 0x6f20766f, 0x202c3254, 0x772e3176, 0x766f6d0a, 0x30446f20, 0x6267722e, 0x3476202c, 0x766f6d0a, 0x30446f20, 0x202c772e, 0x782e3576, 0x6c756d0a, 0x30546f20, 0x2c79782e, 0x2c337620, 0x2e366320, 0x6d0a7878, 0x6f206c75, 0x782e3154, 0x76202c79, 0x63202c36, 0x78782e36, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0001, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40001, 0x4, 0x80010002, 0x80ff0001, 0xa0000013, 0xa0550013, 0x4, 0x80020002, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000002, 0x80550002, 0x5, 0x80080000, 0x90ff0004, 0xa055001e, 0x4, 0xd0070001, 0x90ff0005, 0xa000001e, 0x80ff0000, 0x1, 0xe00f0002, 0x90ff0001, 0x1, 0xd0070000, 0x90e40004, 0x1, 0xd0080000, 0x90000005, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0x5, 0xe0030001, 0x90e40006, 0xa0000006, 0xffff };
SVShader vsBlend2TexColor( 37, dwvs11Blend2TexColor,0);
static DWORD dwvs11ReflectionWater[] ={ 0xfffe0101, 0x106fffe, 0x47554244, 0x28, 0x3e0, 0x128, 0x0, 0x0, 0x20, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x420, 0xffff0003, 0x42c, 0xffff0004, 0x438, 0xffff0005, 0x444, 0xffff0006, 0x450, 0xffff0007, 0x45c, 0xffff0008, 0x468, 0xffff0009, 0x478, 0xffff000a, 0x484, 0xffff000b, 0x498, 0xffff000c, 0x4ac, 0xffff000d, 0x4bc, 0xffff000e, 0x4cc, 0xffff000f, 0x4d8, 0xffff0010, 0x4e8, 0xffff0011, 0x4f8, 0xffff0012, 0x508, 0xffff0013, 0x518, 0xffff0014, 0x524, 0xffff0015, 0x534, 0xffff0016, 0x548, 0xffff0017, 0x558, 0xffff0018, 0x568, 0xffff0019, 0x578, 0xffff001a, 0x58c, 0xffff001b, 0x59c, 0xffff001c, 0x5a8, 0xffff001d, 0x5b8, 0xffff001e, 0x5c8, 0xffff001f, 0x5d8, 0xffff0020, 0x5e8, 0xffff0021, 0x5fc, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x34722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3472, 0x72206461, 0x2c782e35, 0x2e347220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3572, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e35, 0x2e357220, 0x346d0a79, 0x72203478, 0x76202c30, 0x63202c30, 0x6d0a3031, 0x6f20766f, 0x2c736f50, 0xa307220, 0x206c756d, 0x782e3172, 0x76202c79, 0x63202c33, 0x78782e36, 0x6c756d0a, 0x2e317220, 0x202c7978, 0x202c3172, 0x2e323363, 0x610a7978, 0x6f206464, 0x782e3054, 0x72202c79, 0x79782e31, 0x3363202c, 0x79782e31, 0x6464610a, 0x33546f20, 0x2c79782e, 0x2e317220, 0x202c7978, 0x2e313363, 0x720a7978, 0x72207063, 0x2c772e32, 0x2e307220, 0x756d0a77, 0x3072206c, 0x7a79782e, 0x72202c77, 0x79782e30, 0x202c777a, 0x772e3272, 0x64616d0a, 0x2e307220, 0x202c7978, 0x782e3263, 0x72202c78, 0x79782e30, 0x3263202c, 0xa78782e, 0x206c756d, 0x2e31546f, 0x777a7978, 0x3072202c, 0x7878782e, 0x63202c77, 0x6d0a3533, 0x6f206c75, 0x782e3254, 0x2c777a79, 0x2e307220, 0x77797979, 0x3363202c, 0x756d0a36, 0x446f206c, 0x2c772e30, 0x2e317620, 0x63202c77, 0x7a2e3433, 0x64616d0a, 0x2e337220, 0x2c7a7978, 0x2e396320, 0x2d202c77, 0x202c3076, 0x782e3963, 0x640a7a79, 0x72203370, 0x2c772e33, 0x2c337220, 0xa337220, 0x20717372, 0x772e3472, 0x3372202c, 0x6d0a772e, 0x72206c75, 0x79782e33, 0x72202c7a, 0x79782e33, 0x72202c7a, 0xa772e34, 0x20646461, 0x772e3372, 0x3163202c, 0x202c782e, 0x2e33722d, 0x756d0a7a, 0x3372206c, 0x202c772e, 0x772e3372, 0x3372202c, 0x6d0a772e, 0x72206c75, 0x2c772e33, 0x2e337220, 0x72202c77, 0xa772e33, 0x2064616d, 0x772e3372, 0x3372202c, 0x202c772e, 0x2e343363, 0x63202c7a, 0x772e3433, 0x6c756d0a, 0x31446f20, 0x202c772e, 0x772e3372, 0x3176202c, 0xa772e, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0004, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40004, 0x4, 0x80010005, 0x80ff0004, 0xa0000013, 0xa0550013, 0x4, 0x80020005, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000005, 0x80550005, 0x14, 0x800f0000, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40000, 0x5, 0x80030001, 0x90e40003, 0xa0000006, 0x5, 0x80030001, 0x80e40001, 0xa0540020, 0x2, 0xe0030000, 0x80540001, 0xa054001f, 0x2, 0xe0030003, 0x80540001, 0xa054001f, 0x6, 0x80080002, 0x80ff0000, 0x5, 0x800f0000, 0x80e40000, 0x80ff0002, 0x4, 0x80030000, 0xa0000002, 0x80540000, 0xa0000002, 0x5, 0xe00f0001, 0x80c00000, 0xa0e40023, 0x5, 0xe00f0002, 0x80d50000, 0xa0e40024, 0x5, 0xd0080000, 0x90ff0001, 0xa0aa0022, 0x4, 0x80070003, 0xa0ff0009, 0x91e40000, 0xa0a40009, 0x8, 0x80080003, 0x80e40003, 0x80e40003, 0x7, 0x80080004, 0x80ff0003, 0x5, 0x80070003, 0x80a40003, 0x80ff0004, 0x2, 0x80080003, 0xa0000001, 0x81aa0003, 0x5, 0x80080003, 0x80ff0003, 0x80ff0003, 0x5, 0x80080003, 0x80ff0003, 0x80ff0003, 0x4, 0x80080003, 0x80ff0003, 0xa0aa0022, 0xa0ff0022, 0x5, 0xd0080001, 0x80ff0003, 0x90ff0001, 0xffff };
SVShader vsReflectionWater( 38, dwvs11ReflectionWater,0);
static DWORD dwvs11ReflectionWaterCube[] ={ 0xfffe0101, 0xd2fffe, 0x47554244, 0x28, 0x310, 0x100, 0x0, 0x0, 0x1b, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x350, 0xffff0003, 0x35c, 0xffff0004, 0x368, 0xffff0005, 0x374, 0xffff0006, 0x380, 0xffff0007, 0x38c, 0xffff0008, 0x398, 0xffff0009, 0x3a8, 0xffff000a, 0x3b4, 0xffff000b, 0x3c8, 0xffff000c, 0x3dc, 0xffff000d, 0x3ec, 0xffff000e, 0x3fc, 0xffff000f, 0x408, 0xffff0010, 0x418, 0xffff0011, 0x428, 0xffff0012, 0x438, 0xffff0013, 0x444, 0xffff0014, 0x450, 0xffff0015, 0x45c, 0xffff0016, 0x470, 0xffff0017, 0x480, 0xffff0018, 0x48c, 0xffff0019, 0x49c, 0xffff001a, 0x4a8, 0xffff001b, 0x4b4, 0xffff001c, 0x4c4, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x33722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3372, 0x72206461, 0x2c782e34, 0x2e337220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3472, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e34, 0x2e347220, 0x346d0a79, 0x72203478, 0x76202c30, 0x63202c30, 0x6d0a3031, 0x6f20766f, 0x2c736f50, 0xa307220, 0x206c756d, 0x782e3172, 0x76202c79, 0x63202c33, 0x78782e36, 0x6c756d0a, 0x2e317220, 0x202c7978, 0x202c3172, 0x2e323363, 0x610a7978, 0x6f206464, 0x782e3054, 0x72202c79, 0x79782e31, 0x3363202c, 0x79782e31, 0x766f6d0a, 0x31546f20, 0x7a79782e, 0x3363202c, 0x6f6d0a35, 0x546f2076, 0x79782e32, 0x63202c7a, 0x6d0a3633, 0x6f20766f, 0x782e3354, 0x202c7a79, 0xa373363, 0x2064616d, 0x782e3272, 0x202c7a79, 0x772e3963, 0x762d202c, 0x63202c30, 0x79782e39, 0x70640a7a, 0x32722033, 0x202c772e, 0x202c3272, 0x720a3272, 0x72207173, 0x2c772e33, 0x2e327220, 0x756d0a77, 0x3272206c, 0x7a79782e, 0x3272202c, 0x7a79782e, 0x3372202c, 0x6d0a772e, 0x6f20766f, 0x772e3154, 0x3272202c, 0x6d0a782e, 0x6f20766f, 0x772e3254, 0x3272202c, 0x6d0a792e, 0x6f206c75, 0x772e3354, 0x3272202c, 0x202c7a2e, 0x2e383363, 0x6f6d0a77, 0x446f2076, 0x2c772e30, 0x34336320, 0xa7a2e, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0003, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40003, 0x4, 0x80010004, 0x80ff0003, 0xa0000013, 0xa0550013, 0x4, 0x80020004, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000004, 0x80550004, 0x14, 0x800f0000, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40000, 0x5, 0x80030001, 0x90e40003, 0xa0000006, 0x5, 0x80030001, 0x80e40001, 0xa0540020, 0x2, 0xe0030000, 0x80540001, 0xa054001f, 0x1, 0xe0070001, 0xa0e40023, 0x1, 0xe0070002, 0xa0e40024, 0x1, 0xe0070003, 0xa0e40025, 0x4, 0x80070002, 0xa0ff0009, 0x91e40000, 0xa0a40009, 0x8, 0x80080002, 0x80e40002, 0x80e40002, 0x7, 0x80080003, 0x80ff0002, 0x5, 0x80070002, 0x80a40002, 0x80ff0003, 0x1, 0xe0080001, 0x80000002, 0x1, 0xe0080002, 0x80550002, 0x5, 0xe0080003, 0x80aa0002, 0xa0ff0026, 0x1, 0xd0080000, 0xa0aa0022, 0xffff };
SVShader vsReflectionWaterCube( 39, dwvs11ReflectionWaterCube,0);
static DWORD dwvs11G3Particles[] ={ 0xfffe0101, 0x90fffe, 0x47554244, 0x28, 0x207, 0xb0, 0x0, 0x0, 0x11, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x248, 0xffff0003, 0x254, 0xffff0004, 0x260, 0xffff0005, 0x26c, 0xffff0006, 0x278, 0xffff0007, 0x284, 0xffff0008, 0x290, 0xffff0009, 0x2a0, 0xffff000a, 0x2ac, 0xffff000b, 0x2c0, 0xffff000c, 0x2d4, 0xffff000d, 0x2e4, 0xffff000e, 0x2f4, 0xffff000f, 0x300, 0xffff0010, 0x30c, 0xffff0011, 0x31c, 0xffff0012, 0x32c, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x31722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3172, 0x72206461, 0x2c782e32, 0x2e317220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3272, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x2c307220, 0x2e327220, 0x72202c78, 0xa792e32, 0x206c756d, 0x2e31446f, 0x2c626772, 0x2c307220, 0x30326320, 0x766f6d0a, 0x31446f20, 0x202c772e, 0x6d0a3072, 0x6f20766f, 0x772e3044, 0x3476202c, 0x6c756d0a, 0x30446f20, 0x7a79782e, 0x3476202c, 0x7a79782e, 0x3476202c, 0x6d0a772e, 0x6f206c75, 0x782e3054, 0x76202c79, 0x63202c33, 0x78782e36, 0x64616d0a, 0x31546f20, 0x2c79782e, 0x2c367620, 0x2e366320, 0x202c7979, 0x7a2e3663, 0x4d000a7a, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0001, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40001, 0x4, 0x80010002, 0x80ff0001, 0xa0000013, 0xa0550013, 0x4, 0x80020002, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0x800f0000, 0x80000002, 0x80550002, 0x5, 0xd0070001, 0x80e40000, 0xa0e40014, 0x1, 0xd0080001, 0x80e40000, 0x1, 0xd0080000, 0x90e40004, 0x5, 0xd0070000, 0x90a40004, 0x90ff0004, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0x4, 0xe0030001, 0x90e40006, 0xa0550006, 0xa0aa0006, 0xffff };
SVShader vsG3Particles( 40, dwvs11G3Particles,0);
static DWORD dwvs11GlossedMirror[] ={ 0xfffe0101, 0xe2fffe, 0x47554244, 0x28, 0x351, 0x100, 0x0, 0x0, 0x1b, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x390, 0xffff0003, 0x39c, 0xffff0004, 0x3a8, 0xffff0005, 0x3b4, 0xffff0006, 0x3c0, 0xffff0007, 0x3cc, 0xffff0008, 0x3d8, 0xffff0009, 0x3e8, 0xffff000a, 0x3f4, 0xffff000b, 0x408, 0xffff000c, 0x41c, 0xffff000d, 0x42c, 0xffff000e, 0x440, 0xffff000f, 0x450, 0xffff0010, 0x464, 0xffff0011, 0x478, 0xffff0012, 0x488, 0xffff0013, 0x494, 0xffff0014, 0x4a4, 0xffff0015, 0x4b4, 0xffff0016, 0x4c4, 0xffff0017, 0x4d4, 0xffff0018, 0x4e4, 0xffff0019, 0x4f4, 0xffff001a, 0x508, 0xffff001b, 0x518, 0xffff001c, 0x52c, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x32722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3272, 0x72206461, 0x2c782e33, 0x2e327220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3372, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e33, 0x2e337220, 0x616d0a79, 0x30722064, 0x7a79782e, 0x3176202c, 0x3363202c, 0x7878782e, 0x3363202c, 0x7979792e, 0x6c756d0a, 0x2e317220, 0x76202c77, 0x2c772e34, 0x30336320, 0x6d0a792e, 0x72206461, 0x2c772e31, 0x2e357620, 0x63202c77, 0x782e3033, 0x3172202c, 0x6d0a772e, 0x72206461, 0x79782e32, 0x63202c7a, 0x2c772e39, 0x30762d20, 0x3963202c, 0x7a79782e, 0x3370640a, 0x2e327220, 0x72202c77, 0x72202c32, 0x73720a32, 0x34722071, 0x202c772e, 0x772e3272, 0x6c756d0a, 0x2e327220, 0x2c7a7978, 0x2e327220, 0x2c7a7978, 0x2e347220, 0x70640a77, 0x32722033, 0x202c772e, 0x202c3272, 0x610a3072, 0x72206464, 0x2c772e33, 0x2e316320, 0x2d202c78, 0x772e3272, 0x6c756d0a, 0x2e337220, 0x72202c77, 0x2c772e33, 0x2e337220, 0x756d0a77, 0x3372206c, 0x202c772e, 0x772e3372, 0x3372202c, 0x6d0a772e, 0x72206c75, 0x2c772e32, 0x2e327220, 0x63202c77, 0xa7a2e32, 0x2064616d, 0x772e3372, 0x3372202c, 0x202c772e, 0x2e343363, 0x63202c7a, 0x772e3433, 0x6c756d0a, 0x30446f20, 0x202c772e, 0x772e3372, 0x3172202c, 0x6d0a772e, 0x6f206461, 0x782e3054, 0x202c7a79, 0x772e3272, 0x3072202c, 0x722d202c, 0x79782e32, 0x756d0a7a, 0x546f206c, 0x79782e31, 0x3376202c, 0x3663202c, 0xa78782e, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0002, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40002, 0x4, 0x80010003, 0x80ff0002, 0xa0000013, 0xa0550013, 0x4, 0x80020003, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000003, 0x80550003, 0x4, 0x80070000, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080001, 0x90ff0004, 0xa055001e, 0x4, 0x80080001, 0x90ff0005, 0xa000001e, 0x80ff0001, 0x4, 0x80070002, 0xa0ff0009, 0x91e40000, 0xa0a40009, 0x8, 0x80080002, 0x80e40002, 0x80e40002, 0x7, 0x80080004, 0x80ff0002, 0x5, 0x80070002, 0x80a40002, 0x80ff0004, 0x8, 0x80080002, 0x80e40002, 0x80e40000, 0x2, 0x80080003, 0xa0000001, 0x81ff0002, 0x5, 0x80080003, 0x80ff0003, 0x80ff0003, 0x5, 0x80080003, 0x80ff0003, 0x80ff0003, 0x5, 0x80080002, 0x80ff0002, 0xa0aa0002, 0x4, 0x80080003, 0x80ff0003, 0xa0aa0022, 0xa0ff0022, 0x5, 0xd0080000, 0x80ff0003, 0x80ff0001, 0x4, 0xe0070000, 0x80ff0002, 0x80e40000, 0x81a40002, 0x5, 0xe0030001, 0x90e40003, 0xa0000006, 0xffff };
SVShader vsGlossedMirror( 41, dwvs11GlossedMirror,0);
static DWORD dwvs11G3DiffuseTexMirror[] ={ 0xfffe0101, 0x171fffe, 0x47554244, 0x28, 0x58b, 0x1a0, 0x0, 0x0, 0x2f, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x5cc, 0xffff0003, 0x5d8, 0xffff0004, 0x5e4, 0xffff0005, 0x5f0, 0xffff0006, 0x5fc, 0xffff0007, 0x608, 0xffff0008, 0x614, 0xffff0009, 0x624, 0xffff000a, 0x630, 0xffff000b, 0x644, 0xffff000c, 0x658, 0xffff000d, 0x668, 0xffff000e, 0x67c, 0xffff000f, 0x68c, 0xffff0010, 0x6a0, 0xffff0011, 0x6b0, 0xffff0012, 0x6c0, 0xffff0013, 0x6d4, 0xffff0014, 0x6e0, 0xffff0015, 0x6f0, 0xffff0016, 0x6fc, 0xffff0017, 0x70c, 0xffff0018, 0x718, 0xffff0019, 0x724, 0xffff001a, 0x734, 0xffff001b, 0x748, 0xffff001c, 0x758, 0xffff001d, 0x768, 0xffff001e, 0x778, 0xffff001f, 0x788, 0xffff0020, 0x798, 0xffff0021, 0x7a8, 0xffff0022, 0x7b8, 0xffff0023, 0x7c8, 0xffff0024, 0x7d8, 0xffff0025, 0x7ec, 0xffff0026, 0x7fc, 0xffff0027, 0x808, 0xffff0028, 0x818, 0xffff0029, 0x828, 0xffff002a, 0x838, 0xffff002b, 0x848, 0xffff002c, 0x858, 0xffff002d, 0x868, 0xffff002e, 0x87c, 0xffff002f, 0x88c, 0xffff0030, 0x8a0, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x32722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3272, 0x72206461, 0x2c782e33, 0x2e327220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3372, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e33, 0x2e337220, 0x616d0a79, 0x30722064, 0x7a79782e, 0x3176202c, 0x3363202c, 0x7878782e, 0x3363202c, 0x7979792e, 0x6c756d0a, 0x2e317220, 0x76202c77, 0x2c772e34, 0x30336320, 0x6d0a792e, 0x72206461, 0x2c772e31, 0x2e357620, 0x63202c77, 0x782e3033, 0x3172202c, 0x640a772e, 0x72203470, 0x2c782e35, 0x2c307620, 0x35326320, 0x3470640a, 0x2e357220, 0x76202c79, 0x63202c30, 0x6d0a3632, 0x72206461, 0x79782e36, 0x3572202c, 0x2c79782e, 0x2e357220, 0x202c7978, 0x7a2e3363, 0x676f6c0a, 0x37722070, 0x3672202c, 0x6d0a782e, 0x72206c75, 0x2c782e35, 0x2e357220, 0x72202c78, 0xa7a2e37, 0x70676f6c, 0x2c377220, 0x2e367220, 0x756d0a79, 0x3572206c, 0x202c792e, 0x792e3572, 0x3772202c, 0x720a7a2e, 0x72207173, 0x2c782e36, 0x2e367220, 0x73720a78, 0x36722071, 0x202c792e, 0x792e3672, 0x6c756d0a, 0x2e357220, 0x202c7978, 0x782e3572, 0x72202c79, 0x79782e36, 0x64616d0a, 0x31546f20, 0x2c79782e, 0x2e357220, 0x202c7978, 0x2e373263, 0x202c7978, 0x2e373263, 0x640a777a, 0x72203370, 0x2c782e32, 0x2c307220, 0x35336320, 0x6c756d0a, 0x2e317220, 0x2c7a7978, 0x2e317220, 0x63202c77, 0x6d0a3932, 0x6f206c75, 0x782e3044, 0x202c7a79, 0x202c3476, 0x6d0a3172, 0x6f206c75, 0x772e3044, 0x3176202c, 0x202c772e, 0x2e393263, 0x756d0a77, 0x446f206c, 0x79782e31, 0x76202c7a, 0x72202c35, 0x67730a31, 0x34722065, 0x202c792e, 0x2e32722d, 0x63202c78, 0x772e3533, 0x3470640a, 0x2e347220, 0x76202c78, 0x63202c30, 0x610a3432, 0x6f206464, 0x202c3254, 0x782e3472, 0x3472202c, 0x6d0a792e, 0x6f206c75, 0x782e3054, 0x76202c79, 0x63202c33, 0x78782e36, 0x64616d0a, 0x2e327220, 0x2c7a7978, 0x2e396320, 0x2d202c77, 0x202c3076, 0x782e3963, 0x640a7a79, 0x72203370, 0x2c772e32, 0x2c327220, 0xa327220, 0x20717372, 0x772e3472, 0x3272202c, 0x6d0a772e, 0x72206c75, 0x79782e32, 0x72202c7a, 0x79782e32, 0x72202c7a, 0xa772e34, 0x20337064, 0x772e3272, 0x3272202c, 0x3072202c, 0x6464610a, 0x2e337220, 0x63202c77, 0x2c782e31, 0x32722d20, 0x6d0a772e, 0x72206c75, 0x2c772e33, 0x2e337220, 0x72202c77, 0xa772e33, 0x206c756d, 0x772e3372, 0x3372202c, 0x202c772e, 0x772e3372, 0x6c756d0a, 0x2e327220, 0x72202c77, 0x2c772e32, 0x2e326320, 0x616d0a7a, 0x33722064, 0x202c772e, 0x772e3372, 0x3363202c, 0x2c7a2e34, 0x34336320, 0x6d0a772e, 0x6f206c75, 0x772e3044, 0x3372202c, 0x202c772e, 0x772e3172, 0x64616d0a, 0x33546f20, 0x7a79782e, 0x3272202c, 0x202c772e, 0x202c3072, 0x2e32722d, 0xa7a7978, 0x206c756d, 0x2e34546f, 0x202c7978, 0x202c3376, 0x782e3663, 0x4d000a78, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0002, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40002, 0x4, 0x80010003, 0x80ff0002, 0xa0000013, 0xa0550013, 0x4, 0x80020003, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000003, 0x80550003, 0x4, 0x80070000, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080001, 0x90ff0004, 0xa055001e, 0x4, 0x80080001, 0x90ff0005, 0xa000001e, 0x80ff0001, 0x9, 0x80010005, 0x90e40000, 0xa0e40019, 0x9, 0x80020005, 0x90e40000, 0xa0e4001a, 0x4, 0x80030006, 0x80540005, 0x80540005, 0xa0aa0003, 0x4f, 0x800f0007, 0x80000006, 0x5, 0x80010005, 0x80000005, 0x80aa0007, 0x4f, 0x800f0007, 0x80550006, 0x5, 0x80020005, 0x80550005, 0x80aa0007, 0x7, 0x80010006, 0x80000006, 0x7, 0x80020006, 0x80550006, 0x5, 0x80030005, 0x80540005, 0x80540006, 0x4, 0xe0030001, 0x80540005, 0xa054001b, 0xa0fe001b, 0x8, 0x80010002, 0x80e40000, 0xa0e40023, 0x5, 0x80070001, 0x80ff0001, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40001, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40001, 0xd, 0x80020004, 0x81000002, 0xa0ff0023, 0x9, 0x80010004, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000004, 0x80550004, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0x4, 0x80070002, 0xa0ff0009, 0x91e40000, 0xa0a40009, 0x8, 0x80080002, 0x80e40002, 0x80e40002, 0x7, 0x80080004, 0x80ff0002, 0x5, 0x80070002, 0x80a40002, 0x80ff0004, 0x8, 0x80080002, 0x80e40002, 0x80e40000, 0x2, 0x80080003, 0xa0000001, 0x81ff0002, 0x5, 0x80080003, 0x80ff0003, 0x80ff0003, 0x5, 0x80080003, 0x80ff0003, 0x80ff0003, 0x5, 0x80080002, 0x80ff0002, 0xa0aa0002, 0x4, 0x80080003, 0x80ff0003, 0xa0aa0022, 0xa0ff0022, 0x5, 0xd0080000, 0x80ff0003, 0x80ff0001, 0x4, 0xe0070003, 0x80ff0002, 0x80e40000, 0x81a40002, 0x5, 0xe0030004, 0x90e40003, 0xa0000006, 0xffff };
SVShader vsG3DiffuseTexMirror( 42, dwvs11G3DiffuseTexMirror,0);
static DWORD dwvs11Tracks[] ={ 0xfffe0101, 0x72fffe, 0x47554244, 0x28, 0x191, 0x90, 0x0, 0x0, 0xd, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1d0, 0xffff0003, 0x1dc, 0xffff0004, 0x1e8, 0xffff0005, 0x1f4, 0xffff0006, 0x200, 0xffff0007, 0x20c, 0xffff0008, 0x218, 0xffff0009, 0x228, 0xffff000a, 0x234, 0xffff000b, 0x248, 0xffff000c, 0x25c, 0xffff000d, 0x26c, 0xffff000e, 0x27c, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x30722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3072, 0x72206461, 0x2c782e31, 0x2e307220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3172, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e31, 0x2e317220, 0x756d0a79, 0x546f206c, 0x79782e30, 0x3376202c, 0x3663202c, 0xa78782e, 0x20766f6d, 0x2e30446f, 0x2c7a7978, 0xa347620, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0000, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40000, 0x4, 0x80010001, 0x80ff0000, 0xa0000013, 0xa0550013, 0x4, 0x80020001, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000001, 0x80550001, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0x1, 0xd0070000, 0x90e40004, 0xffff };
SVShader vsTracks( 43, dwvs11Tracks,0);
static DWORD dwvs11CLSkyLight3[] ={ 0xfffe0101, 0xb9fffe, 0x47554244, 0x28, 0x2ad, 0xe0, 0x0, 0x0, 0x17, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x2ec, 0xffff0003, 0x2f8, 0xffff0004, 0x304, 0xffff0005, 0x310, 0xffff0006, 0x31c, 0xffff0007, 0x328, 0xffff0008, 0x334, 0xffff0009, 0x344, 0xffff000a, 0x350, 0xffff000b, 0x35c, 0xffff000c, 0x370, 0xffff000d, 0x380, 0xffff000e, 0x394, 0xffff000f, 0x3a0, 0xffff0010, 0x3b4, 0xffff0011, 0x3c4, 0xffff0012, 0x3d4, 0xffff0013, 0x3e4, 0xffff0014, 0x3f4, 0xffff0015, 0x404, 0xffff0016, 0x414, 0xffff0017, 0x424, 0xffff0018, 0x434, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x30722034, 0x3676202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3072, 0x7220766f, 0x72202c32, 0x616d0a30, 0x466f2064, 0x202c676f, 0x772e3272, 0x3163202c, 0x2c782e39, 0x39316320, 0x6d0a792e, 0x72206c75, 0x79782e31, 0x3363202c, 0x777a2e34, 0x3072202c, 0x6d0a772e, 0x72206461, 0x79782e30, 0x3072202c, 0x2c79782e, 0x34336320, 0x2c79782e, 0x2e317220, 0x6d0a7978, 0x6f20766f, 0x782e3354, 0x2c777a79, 0x2e307220, 0x77777978, 0x64616d0a, 0x34546f20, 0x7a79782e, 0x3176202c, 0x3363202c, 0x7878782e, 0x3363202c, 0x7979792e, 0x3470640a, 0x30446f20, 0x202c782e, 0x202c3076, 0xa363163, 0x20347064, 0x2e30546f, 0x76202c78, 0x63202c30, 0x640a3731, 0x6f203470, 0x792e3054, 0x3076202c, 0x3163202c, 0x70640a38, 0x446f2034, 0x2c792e30, 0x2c307620, 0x35326320, 0x3470640a, 0x31546f20, 0x202c782e, 0x202c3076, 0xa363263, 0x20347064, 0x2e31546f, 0x76202c79, 0x63202c30, 0x640a3732, 0x6f203470, 0x7a2e3044, 0x3076202c, 0x3263202c, 0x70640a38, 0x546f2034, 0x2c782e32, 0x2c307620, 0x39326320, 0x3470640a, 0x32546f20, 0x202c792e, 0x202c3076, 0xa303363, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0000, 0x90e40006, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40000, 0x1, 0x800f0002, 0x80e40000, 0x4, 0xc00f0001, 0x80ff0002, 0xa0000013, 0xa0550013, 0x5, 0x80030001, 0xa0fe0022, 0x80ff0000, 0x4, 0x80030000, 0x80540000, 0xa0540022, 0x80540001, 0x1, 0xe00f0003, 0x80f40000, 0x4, 0xe0070004, 0x90e40001, 0xa0000003, 0xa0550003, 0x9, 0xd0010000, 0x90e40000, 0xa0e40010, 0x9, 0xe0010000, 0x90e40000, 0xa0e40011, 0x9, 0xe0020000, 0x90e40000, 0xa0e40012, 0x9, 0xd0020000, 0x90e40000, 0xa0e40019, 0x9, 0xe0010001, 0x90e40000, 0xa0e4001a, 0x9, 0xe0020001, 0x90e40000, 0xa0e4001b, 0x9, 0xd0040000, 0x90e40000, 0xa0e4001c, 0x9, 0xe0010002, 0x90e40000, 0xa0e4001d, 0x9, 0xe0020002, 0x90e40000, 0xa0e4001e, 0xffff };
SVShader vsCLSkyLight3( 44, dwvs11CLSkyLight3,0);
static DWORD dwvs11PointCubeMapDepth[] ={ 0xfffe0101, 0x73fffe, 0x47554244, 0x28, 0x193, 0x90, 0x0, 0x0, 0xd, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1d4, 0xffff0003, 0x1e0, 0xffff0004, 0x1ec, 0xffff0005, 0x1f8, 0xffff0006, 0x204, 0xffff0007, 0x210, 0xffff0008, 0x21c, 0xffff0009, 0x22c, 0xffff000a, 0x238, 0xffff000b, 0x24c, 0xffff000c, 0x260, 0xffff000d, 0x270, 0xffff000e, 0x280, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x31722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3172, 0x72206461, 0x2c782e32, 0x2e317220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3272, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e32, 0x2e327220, 0x64610a79, 0x30722064, 0x3076202c, 0x632d202c, 0x6d0a3531, 0x6f206c75, 0x782e3054, 0x202c7a79, 0x202c3072, 0x2e363163, 0x4d000a78, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0001, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40001, 0x4, 0x80010002, 0x80ff0001, 0xa0000013, 0xa0550013, 0x4, 0x80020002, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000002, 0x80550002, 0x2, 0x800f0000, 0x90e40000, 0xa1e4000f, 0x5, 0xe0070000, 0x80e40000, 0xa0000010, 0xffff };
SVShader vsPointCubeMapDepth( 45, dwvs11PointCubeMapDepth,0);
static DWORD dwvs11CLPointLightShadowed[] ={ 0xfffe0101, 0x8afffe, 0x47554244, 0x28, 0x1f2, 0xa8, 0x0, 0x0, 0x10, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x230, 0xffff0003, 0x23c, 0xffff0004, 0x248, 0xffff0005, 0x254, 0xffff0006, 0x260, 0xffff0007, 0x26c, 0xffff0008, 0x278, 0xffff0009, 0x288, 0xffff000a, 0x294, 0xffff000b, 0x2a0, 0xffff000c, 0x2b4, 0xffff000d, 0x2c4, 0xffff000e, 0x2d8, 0xffff000f, 0x2e4, 0xffff0010, 0x2f4, 0xffff0011, 0x304, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x30722034, 0x3676202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3072, 0x7220766f, 0x72202c32, 0x616d0a30, 0x466f2064, 0x202c676f, 0x772e3272, 0x3163202c, 0x2c782e39, 0x39316320, 0x6d0a792e, 0x72206c75, 0x79782e31, 0x3163202c, 0x777a2e37, 0x3072202c, 0x6d0a772e, 0x72206461, 0x79782e30, 0x3072202c, 0x2c79782e, 0x37316320, 0x2c79782e, 0x2e317220, 0x6d0a7978, 0x6f20766f, 0x782e3154, 0x2c777a79, 0x2e307220, 0x77777978, 0x6464610a, 0x2c337220, 0x2c307620, 0x31632d20, 0x756d0a35, 0x546f206c, 0x79782e30, 0x72202c7a, 0x63202c33, 0x782e3631, 0x64616d0a, 0x32546f20, 0x7a79782e, 0x3176202c, 0x3363202c, 0x7878782e, 0x3363202c, 0x7979792e, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0000, 0x90e40006, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40000, 0x1, 0x800f0002, 0x80e40000, 0x4, 0xc00f0001, 0x80ff0002, 0xa0000013, 0xa0550013, 0x5, 0x80030001, 0xa0fe0011, 0x80ff0000, 0x4, 0x80030000, 0x80540000, 0xa0540011, 0x80540001, 0x1, 0xe00f0001, 0x80f40000, 0x2, 0x800f0003, 0x90e40000, 0xa1e4000f, 0x5, 0xe0070000, 0x80e40003, 0xa0000010, 0x4, 0xe0070002, 0x90e40001, 0xa0000003, 0xa0550003, 0xffff };
SVShader vsCLPointLightShadowed( 46, dwvs11CLPointLightShadowed,0);
static DWORD dwvs11Clouds[] ={ 0xfffe0101, 0x84fffe, 0x47554244, 0x28, 0x1d7, 0xa0, 0x0, 0x0, 0xf, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x218, 0xffff0003, 0x224, 0xffff0004, 0x230, 0xffff0005, 0x23c, 0xffff0006, 0x248, 0xffff0007, 0x254, 0xffff0008, 0x260, 0xffff0009, 0x270, 0xffff000a, 0x27c, 0xffff000b, 0x290, 0xffff000c, 0x2a4, 0xffff000d, 0x2b4, 0xffff000e, 0x2c4, 0xffff000f, 0x2d8, 0xffff0010, 0x2e4, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x31722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3172, 0x72206461, 0x2c782e32, 0x2e317220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x792e3272, 0x3076202c, 0x202c7a2e, 0x2e393163, 0x63202c7a, 0x772e3931, 0x6e696d0a, 0x6f466f20, 0x72202c67, 0x2c782e32, 0x2e327220, 0x756d0a79, 0x3072206c, 0x202c772e, 0x772e3476, 0x3363202c, 0xa792e30, 0x2064616d, 0x772e3072, 0x3576202c, 0x202c772e, 0x2e303363, 0x72202c78, 0xa772e30, 0x20766f6d, 0x2c30446f, 0x2e307220, 0x616d0a77, 0x546f2064, 0x79782e30, 0x3376202c, 0x3263202c, 0x7a7a2e35, 0x3263202c, 0x4d000a35, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0001, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40001, 0x4, 0x80010002, 0x80ff0001, 0xa0000013, 0xa0550013, 0x4, 0x80020002, 0x90aa0000, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000002, 0x80550002, 0x5, 0x80080000, 0x90ff0004, 0xa055001e, 0x4, 0x80080000, 0x90ff0005, 0xa000001e, 0x80ff0000, 0x1, 0xd00f0000, 0x80ff0000, 0x4, 0xe0030000, 0x90e40003, 0xa0aa0019, 0xa0e40019, 0xffff };
SVShader vsClouds( 47, dwvs11Clouds,0);
static DWORD dwvs11G3AnimWaterWithoutHorse[] ={ 0xfffe0101, 0x183fffe, 0x47554244, 0x28, 0x5d5, 0x1a8, 0x0, 0x0, 0x30, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x614, 0xffff0003, 0x620, 0xffff0004, 0x62c, 0xffff0005, 0x638, 0xffff0006, 0x644, 0xffff0007, 0x650, 0xffff0008, 0x65c, 0xffff0009, 0x668, 0xffff000a, 0x67c, 0xffff000b, 0x690, 0xffff000c, 0x69c, 0xffff000d, 0x6ac, 0xffff000e, 0x6c0, 0xffff000f, 0x6d4, 0xffff0010, 0x6e8, 0xffff0011, 0x6f8, 0xffff0012, 0x70c, 0xffff0013, 0x720, 0xffff0014, 0x730, 0xffff0015, 0x744, 0xffff0016, 0x754, 0xffff0017, 0x760, 0xffff0018, 0x774, 0xffff0019, 0x788, 0xffff001a, 0x798, 0xffff001b, 0x7ac, 0xffff001c, 0x7bc, 0xffff001d, 0x7d0, 0xffff001e, 0x7e0, 0xffff001f, 0x7f0, 0xffff0020, 0x804, 0xffff0021, 0x810, 0xffff0022, 0x820, 0xffff0023, 0x82c, 0xffff0024, 0x83c, 0xffff0025, 0x848, 0xffff0026, 0x854, 0xffff0027, 0x864, 0xffff0028, 0x878, 0xffff0029, 0x888, 0xffff002a, 0x898, 0xffff002b, 0x8a8, 0xffff002c, 0x8b8, 0xffff002d, 0x8c8, 0xffff002e, 0x8d8, 0xffff002f, 0x8e8, 0xffff0030, 0x8f8, 0xffff0031, 0x908, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x766f6d0a, 0x2c337220, 0xa307620, 0x2064616d, 0x782e3172, 0x76202c79, 0x63202c36, 0x782e3633, 0x63202c78, 0x792e3633, 0x616d0a79, 0x31722064, 0x202c782e, 0x792e3172, 0x3363202c, 0x2c782e33, 0x2e317220, 0x72660a78, 0x31722063, 0x2c79782e, 0x2e317220, 0x67730a78, 0x31722065, 0x202c7a2e, 0x782e3172, 0x3363202c, 0xa7a2e34, 0x2064616d, 0x782e3172, 0x3172202c, 0x202c7a2e, 0x3433632d, 0x202c7a2e, 0x782e3172, 0x64616d0a, 0x2e317220, 0x72202c78, 0x2c782e31, 0x37336320, 0x202c782e, 0x2e373363, 0x616d0a79, 0x31722064, 0x202c7a2e, 0x7a2e3172, 0x632d202c, 0x782e3433, 0x632d202c, 0x792e3433, 0x6c756d0a, 0x2e317220, 0x72202c78, 0x2c782e31, 0x2e317220, 0x616d0a7a, 0x33722064, 0x202c782e, 0x782e3172, 0x3363202c, 0x2c772e34, 0x2e337220, 0x616d0a78, 0x31722064, 0x202c782e, 0x782e3172, 0x3172202c, 0x202c782e, 0x2e343363, 0x756d0a79, 0x3172206c, 0x202c782e, 0x782e3172, 0x3172202c, 0x6d0a7a2e, 0x72206461, 0x2c792e33, 0x2e317220, 0x63202c78, 0x772e3433, 0x3372202c, 0x6d0a792e, 0x20347834, 0x202c3272, 0x202c3372, 0xa303163, 0x20766f6d, 0x736f506f, 0x3272202c, 0x64616d0a, 0x2e357220, 0x72202c78, 0x2c772e32, 0x39316320, 0x202c782e, 0x2e393163, 0x616d0a79, 0x35722064, 0x202c792e, 0x7a2e3372, 0x3163202c, 0x2c7a2e39, 0x39316320, 0x6d0a772e, 0x6f206e69, 0x2c676f46, 0x2e357220, 0x72202c78, 0xa792e35, 0x2064616d, 0x782e3472, 0x202c7a79, 0x202c3176, 0x782e3363, 0x202c7878, 0x792e3363, 0x6d0a7979, 0x72206c75, 0x2c772e35, 0x2e347620, 0x63202c77, 0x792e3033, 0x64616d0a, 0x2e357220, 0x76202c77, 0x2c772e35, 0x30336320, 0x202c782e, 0x772e3572, 0x3470640a, 0x2e397220, 0x76202c78, 0x63202c30, 0x640a3532, 0x72203470, 0x2c792e39, 0x2c307620, 0x36326320, 0x64616d0a, 0x30317220, 0x2c79782e, 0x2e397220, 0x202c7978, 0x782e3972, 0x63202c79, 0xa7a2e33, 0x70676f6c, 0x31317220, 0x3172202c, 0xa782e30, 0x206c756d, 0x782e3972, 0x3972202c, 0x202c782e, 0x2e313172, 0x6f6c0a7a, 0x72207067, 0x202c3131, 0x2e303172, 0x756d0a79, 0x3972206c, 0x202c792e, 0x792e3972, 0x3172202c, 0xa7a2e31, 0x20717372, 0x2e303172, 0x72202c78, 0x782e3031, 0x7173720a, 0x30317220, 0x202c792e, 0x2e303172, 0x756d0a79, 0x3972206c, 0x2c79782e, 0x2e397220, 0x202c7978, 0x2e303172, 0x6d0a7978, 0x6f206461, 0x782e3154, 0x72202c79, 0x79782e39, 0x3263202c, 0x79782e37, 0x3263202c, 0x777a2e37, 0x3370640a, 0x2e367220, 0x72202c78, 0x63202c34, 0x6d0a3533, 0x72206c75, 0x79782e35, 0x72202c7a, 0x2c772e35, 0x39326320, 0x6c756d0a, 0x30446f20, 0x7a79782e, 0x3476202c, 0x3572202c, 0x6c756d0a, 0x30446f20, 0x202c772e, 0x772e3176, 0x3263202c, 0xa772e39, 0x206c756d, 0x2e31446f, 0x2c7a7978, 0x2c357620, 0xa357220, 0x20656773, 0x792e3872, 0x722d202c, 0x2c782e36, 0x35336320, 0x640a772e, 0x72203470, 0x2c782e38, 0x2c307620, 0x34326320, 0x6464610a, 0x32546f20, 0x3872202c, 0x202c782e, 0x792e3872, 0x6c756d0a, 0x2e307220, 0x202c7978, 0x202c3376, 0x782e3663, 0x64610a78, 0x546f2064, 0x79782e30, 0x3072202c, 0x2c79782e, 0x31336320, 0xa79782e, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x1, 0x800f0003, 0x90e40000, 0x4, 0x80030001, 0x90e40006, 0xa0000024, 0xa0550024, 0x4, 0x80010001, 0x80550001, 0xa0000021, 0x80000001, 0x13, 0x80030001, 0x80000001, 0xd, 0x80040001, 0x80000001, 0xa0aa0022, 0x4, 0x80010001, 0x80aa0001, 0xa1aa0022, 0x80000001, 0x4, 0x80010001, 0x80000001, 0xa0000025, 0xa0550025, 0x4, 0x80040001, 0x80aa0001, 0xa1000022, 0xa1550022, 0x5, 0x80010001, 0x80000001, 0x80aa0001, 0x4, 0x80010003, 0x80000001, 0xa0ff0022, 0x80000003, 0x4, 0x80010001, 0x80000001, 0x80000001, 0xa0550022, 0x5, 0x80010001, 0x80000001, 0x80aa0001, 0x4, 0x80020003, 0x80000001, 0xa0ff0022, 0x80550003, 0x14, 0x800f0002, 0x80e40003, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40002, 0x4, 0x80010005, 0x80ff0002, 0xa0000013, 0xa0550013, 0x4, 0x80020005, 0x80aa0003, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000005, 0x80550005, 0x4, 0x80070004, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080005, 0x90ff0004, 0xa055001e, 0x4, 0x80080005, 0x90ff0005, 0xa000001e, 0x80ff0005, 0x9, 0x80010009, 0x90e40000, 0xa0e40019, 0x9, 0x80020009, 0x90e40000, 0xa0e4001a, 0x4, 0x8003000a, 0x80540009, 0x80540009, 0xa0aa0003, 0x4f, 0x800f000b, 0x8000000a, 0x5, 0x80010009, 0x80000009, 0x80aa000b, 0x4f, 0x800f000b, 0x8055000a, 0x5, 0x80020009, 0x80550009, 0x80aa000b, 0x7, 0x8001000a, 0x8000000a, 0x7, 0x8002000a, 0x8055000a, 0x5, 0x80030009, 0x80540009, 0x8054000a, 0x4, 0xe0030001, 0x80540009, 0xa054001b, 0xa0fe001b, 0x8, 0x80010006, 0x80e40004, 0xa0e40023, 0x5, 0x80070005, 0x80ff0005, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40005, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40005, 0xd, 0x80020008, 0x81000006, 0xa0ff0023, 0x9, 0x80010008, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000008, 0x80550008, 0x5, 0x80030000, 0x90e40003, 0xa0000006, 0x2, 0xe0030000, 0x80540000, 0xa054001f, 0xffff };
SVShader vsG3AnimWaterWithoutHorse( 48, dwvs11G3AnimWaterWithoutHorse,0);
static DWORD dwvs11G3AnimWater[] ={ 0xfffe0101, 0x1fcfffe, 0x47554244, 0x28, 0x7ba, 0x228, 0x0, 0x0, 0x40, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x7f8, 0xffff0003, 0x804, 0xffff0004, 0x810, 0xffff0005, 0x81c, 0xffff0006, 0x828, 0xffff0007, 0x834, 0xffff0008, 0x840, 0xffff0009, 0x84c, 0xffff000a, 0x860, 0xffff000b, 0x874, 0xffff000c, 0x880, 0xffff000d, 0x890, 0xffff000e, 0x8a4, 0xffff000f, 0x8b8, 0xffff0010, 0x8cc, 0xffff0011, 0x8dc, 0xffff0012, 0x8f0, 0xffff0013, 0x904, 0xffff0014, 0x914, 0xffff0015, 0x928, 0xffff0016, 0x938, 0xffff0017, 0x944, 0xffff0018, 0x958, 0xffff0019, 0x96c, 0xffff001a, 0x97c, 0xffff001b, 0x990, 0xffff001c, 0x9a0, 0xffff001d, 0x9b4, 0xffff001e, 0x9c4, 0xffff001f, 0x9d4, 0xffff0020, 0x9e8, 0xffff0021, 0x9f4, 0xffff0022, 0xa04, 0xffff0023, 0xa10, 0xffff0024, 0xa20, 0xffff0025, 0xa2c, 0xffff0026, 0xa38, 0xffff0027, 0xa48, 0xffff0028, 0xa5c, 0xffff0029, 0xa6c, 0xffff002a, 0xa7c, 0xffff002b, 0xa8c, 0xffff002c, 0xa9c, 0xffff002d, 0xaac, 0xffff002e, 0xabc, 0xffff002f, 0xacc, 0xffff0030, 0xadc, 0xffff0031, 0xaec, 0xffff0032, 0xafc, 0xffff0033, 0xb0c, 0xffff0034, 0xb1c, 0xffff0035, 0xb2c, 0xffff0036, 0xb3c, 0xffff0037, 0xb4c, 0xffff0038, 0xb5c, 0xffff0039, 0xb6c, 0xffff003a, 0xb7c, 0xffff003b, 0xb8c, 0xffff003c, 0xb9c, 0xffff003d, 0xbb0, 0xffff003e, 0xbc0, 0xffff003f, 0xbd0, 0xffff0040, 0xbe0, 0xffff0041, 0xbf4, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x766f6d0a, 0x2c337220, 0xa307620, 0x2064616d, 0x782e3172, 0x76202c79, 0x63202c36, 0x782e3633, 0x63202c78, 0x792e3633, 0x616d0a79, 0x31722064, 0x202c782e, 0x792e3172, 0x3363202c, 0x2c782e33, 0x2e317220, 0x72660a78, 0x31722063, 0x2c79782e, 0x2e317220, 0x67730a78, 0x31722065, 0x202c7a2e, 0x782e3172, 0x3363202c, 0xa7a2e34, 0x2064616d, 0x782e3172, 0x3172202c, 0x202c7a2e, 0x3433632d, 0x202c7a2e, 0x782e3172, 0x64616d0a, 0x2e317220, 0x72202c78, 0x2c782e31, 0x37336320, 0x202c782e, 0x2e373363, 0x616d0a79, 0x31722064, 0x202c7a2e, 0x7a2e3172, 0x632d202c, 0x782e3433, 0x632d202c, 0x792e3433, 0x6c756d0a, 0x2e317220, 0x72202c78, 0x2c782e31, 0x2e317220, 0x616d0a7a, 0x33722064, 0x202c782e, 0x782e3172, 0x3363202c, 0x2c772e34, 0x2e337220, 0x616d0a78, 0x31722064, 0x202c782e, 0x782e3172, 0x3172202c, 0x202c782e, 0x2e343363, 0x756d0a79, 0x3172206c, 0x202c782e, 0x782e3172, 0x3172202c, 0x6d0a7a2e, 0x72206461, 0x2c792e33, 0x2e317220, 0x63202c78, 0x772e3433, 0x3372202c, 0x6d0a792e, 0x20347834, 0x202c3272, 0x202c3372, 0xa303163, 0x20766f6d, 0x736f506f, 0x3272202c, 0x64616d0a, 0x2e357220, 0x72202c78, 0x2c772e32, 0x39316320, 0x202c782e, 0x2e393163, 0x616d0a79, 0x35722064, 0x202c792e, 0x7a2e3372, 0x3163202c, 0x2c7a2e39, 0x39316320, 0x6d0a772e, 0x6f206e69, 0x2c676f46, 0x2e357220, 0x72202c78, 0xa792e35, 0x2064616d, 0x782e3472, 0x202c7a79, 0x202c3176, 0x782e3363, 0x202c7878, 0x792e3363, 0x6d0a7979, 0x72206c75, 0x2c772e35, 0x2e347620, 0x63202c77, 0x792e3033, 0x64616d0a, 0x2e357220, 0x76202c77, 0x2c772e35, 0x30336320, 0x202c782e, 0x772e3572, 0x3470640a, 0x2e397220, 0x76202c78, 0x63202c30, 0x640a3532, 0x72203470, 0x2c792e39, 0x2c307620, 0x36326320, 0x64616d0a, 0x30317220, 0x2c79782e, 0x2e397220, 0x202c7978, 0x782e3972, 0x63202c79, 0xa7a2e33, 0x70676f6c, 0x31317220, 0x3172202c, 0xa782e30, 0x206c756d, 0x782e3972, 0x3972202c, 0x202c782e, 0x2e313172, 0x6f6c0a7a, 0x72207067, 0x202c3131, 0x2e303172, 0x756d0a79, 0x3972206c, 0x202c792e, 0x792e3972, 0x3172202c, 0xa7a2e31, 0x20717372, 0x2e303172, 0x72202c78, 0x782e3031, 0x7173720a, 0x30317220, 0x202c792e, 0x2e303172, 0x756d0a79, 0x3972206c, 0x2c79782e, 0x2e397220, 0x202c7978, 0x2e303172, 0x6d0a7978, 0x6f206461, 0x782e3154, 0x72202c79, 0x79782e39, 0x3263202c, 0x79782e37, 0x3263202c, 0x777a2e37, 0x3370640a, 0x2e367220, 0x72202c78, 0x63202c34, 0x6d0a3533, 0x72206c75, 0x79782e35, 0x72202c7a, 0x2c772e35, 0x39326320, 0x6c756d0a, 0x30446f20, 0x7a79782e, 0x3476202c, 0x3572202c, 0x6c756d0a, 0x30446f20, 0x202c772e, 0x772e3176, 0x3263202c, 0xa772e39, 0x206c756d, 0x2e31446f, 0x2c7a7978, 0x2c357620, 0xa357220, 0x20656773, 0x792e3872, 0x722d202c, 0x2c782e36, 0x35336320, 0x640a772e, 0x72203470, 0x2c782e38, 0x2c307620, 0x34326320, 0x6464610a, 0x32546f20, 0x3872202c, 0x202c782e, 0x792e3872, 0x6c756d0a, 0x2e307220, 0x202c7978, 0x202c3376, 0x782e3663, 0x64610a78, 0x546f2064, 0x79782e30, 0x3072202c, 0x2c79782e, 0x31336320, 0xa79782e, 0x20646461, 0x2e31546f, 0x202c7978, 0x202c3072, 0x2e313363, 0x610a777a, 0x72206464, 0x79782e30, 0x76202c7a, 0x79782e31, 0x63202c7a, 0x782e3833, 0x730a7878, 0x72206567, 0x79782e31, 0x72202c7a, 0x63202c30, 0x64610a31, 0x30722064, 0x7a79782e, 0x3072202c, 0x722d202c, 0x79782e31, 0x64610a7a, 0x30722064, 0x7a79782e, 0x3072202c, 0x7a79782e, 0x632d202c, 0x78782e32, 0x756d0a78, 0x3172206c, 0x7a79782e, 0x3072202c, 0x3072202c, 0x6c756d0a, 0x2e307220, 0x2c7a7978, 0x2c317220, 0xa317220, 0x206c756d, 0x782e3072, 0x202c7a79, 0x202c3072, 0x6d0a3172, 0x72206c75, 0x79782e30, 0x72202c7a, 0x76202c30, 0x79782e35, 0x70640a7a, 0x30722033, 0x202c772e, 0x202c3072, 0x2e383363, 0xa797979, 0x2064616d, 0x772e3072, 0x3072202c, 0x202c772e, 0x2e383363, 0x63202c7a, 0x772e3833, 0x78616d0a, 0x2e307220, 0x72202c77, 0x2c772e30, 0xa306320, 0x206e696d, 0x772e3072, 0x3072202c, 0x202c772e, 0x610a3163, 0x72206464, 0x2c772e30, 0x2c316320, 0x30722d20, 0x6d0a772e, 0x72206461, 0x2c772e30, 0x2e307220, 0x2d202c77, 0x772e3072, 0x3163202c, 0x6c756d0a, 0x33546f20, 0x3072202c, 0x202c772e, 0x772e3072, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x1, 0x800f0003, 0x90e40000, 0x4, 0x80030001, 0x90e40006, 0xa0000024, 0xa0550024, 0x4, 0x80010001, 0x80550001, 0xa0000021, 0x80000001, 0x13, 0x80030001, 0x80000001, 0xd, 0x80040001, 0x80000001, 0xa0aa0022, 0x4, 0x80010001, 0x80aa0001, 0xa1aa0022, 0x80000001, 0x4, 0x80010001, 0x80000001, 0xa0000025, 0xa0550025, 0x4, 0x80040001, 0x80aa0001, 0xa1000022, 0xa1550022, 0x5, 0x80010001, 0x80000001, 0x80aa0001, 0x4, 0x80010003, 0x80000001, 0xa0ff0022, 0x80000003, 0x4, 0x80010001, 0x80000001, 0x80000001, 0xa0550022, 0x5, 0x80010001, 0x80000001, 0x80aa0001, 0x4, 0x80020003, 0x80000001, 0xa0ff0022, 0x80550003, 0x14, 0x800f0002, 0x80e40003, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40002, 0x4, 0x80010005, 0x80ff0002, 0xa0000013, 0xa0550013, 0x4, 0x80020005, 0x80aa0003, 0xa0aa0013, 0xa0ff0013, 0xa, 0xc00f0001, 0x80000005, 0x80550005, 0x4, 0x80070004, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080005, 0x90ff0004, 0xa055001e, 0x4, 0x80080005, 0x90ff0005, 0xa000001e, 0x80ff0005, 0x9, 0x80010009, 0x90e40000, 0xa0e40019, 0x9, 0x80020009, 0x90e40000, 0xa0e4001a, 0x4, 0x8003000a, 0x80540009, 0x80540009, 0xa0aa0003, 0x4f, 0x800f000b, 0x8000000a, 0x5, 0x80010009, 0x80000009, 0x80aa000b, 0x4f, 0x800f000b, 0x8055000a, 0x5, 0x80020009, 0x80550009, 0x80aa000b, 0x7, 0x8001000a, 0x8000000a, 0x7, 0x8002000a, 0x8055000a, 0x5, 0x80030009, 0x80540009, 0x8054000a, 0x4, 0xe0030001, 0x80540009, 0xa054001b, 0xa0fe001b, 0x8, 0x80010006, 0x80e40004, 0xa0e40023, 0x5, 0x80070005, 0x80ff0005, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40005, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40005, 0xd, 0x80020008, 0x81000006, 0xa0ff0023, 0x9, 0x80010008, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000008, 0x80550008, 0x5, 0x80030000, 0x90e40003, 0xa0000006, 0x2, 0xe0030000, 0x80540000, 0xa054001f, 0x2, 0xe0030001, 0x80e40000, 0xa0fe001f, 0x2, 0x80070000, 0x90a40001, 0xa0000026, 0xd, 0x80070001, 0x80e40000, 0xa0e40001, 0x2, 0x80070000, 0x80e40000, 0x81a40001, 0x2, 0x80070000, 0x80a40000, 0xa1000002, 0x5, 0x80070001, 0x80e40000, 0x80e40000, 0x5, 0x80070000, 0x80e40001, 0x80e40001, 0x5, 0x80070000, 0x80e40000, 0x80e40001, 0x5, 0x80070000, 0x80e40000, 0x90a40005, 0x8, 0x80080000, 0x80e40000, 0xa0550026, 0x4, 0x80080000, 0x80ff0000, 0xa0aa0026, 0xa0ff0026, 0xb, 0x80080000, 0x80ff0000, 0xa0e40000, 0xa, 0x80080000, 0x80ff0000, 0xa0e40001, 0x2, 0x80080000, 0xa0e40001, 0x81ff0000, 0x4, 0x80080000, 0x80ff0000, 0x81ff0000, 0xa0e40001, 0x5, 0xe00f0003, 0x80ff0000, 0x80ff0000, 0xffff };
SVShader vsG3AnimWater( 49, dwvs11G3AnimWater,0);
static DWORD dwvs11G3AnimWaterOld[] ={ 0xfffe0101, 0x182fffe, 0x47554244, 0x28, 0x5cf, 0x1a8, 0x0, 0x0, 0x30, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x610, 0xffff0003, 0x61c, 0xffff0004, 0x628, 0xffff0005, 0x634, 0xffff0006, 0x640, 0xffff0007, 0x64c, 0xffff0008, 0x658, 0xffff0009, 0x664, 0xffff000a, 0x678, 0xffff000b, 0x68c, 0xffff000c, 0x698, 0xffff000d, 0x6a8, 0xffff000e, 0x6bc, 0xffff000f, 0x6d0, 0xffff0010, 0x6e4, 0xffff0011, 0x6f4, 0xffff0012, 0x708, 0xffff0013, 0x71c, 0xffff0014, 0x72c, 0xffff0015, 0x740, 0xffff0016, 0x750, 0xffff0017, 0x760, 0xffff0018, 0x76c, 0xffff0019, 0x780, 0xffff001a, 0x794, 0xffff001b, 0x7a4, 0xffff001c, 0x7b8, 0xffff001d, 0x7c8, 0xffff001e, 0x7d8, 0xffff001f, 0x7ec, 0xffff0020, 0x7f8, 0xffff0021, 0x808, 0xffff0022, 0x814, 0xffff0023, 0x824, 0xffff0024, 0x830, 0xffff0025, 0x83c, 0xffff0026, 0x84c, 0xffff0027, 0x860, 0xffff0028, 0x870, 0xffff0029, 0x880, 0xffff002a, 0x890, 0xffff002b, 0x8a0, 0xffff002c, 0x8b0, 0xffff002d, 0x8c0, 0xffff002e, 0x8d0, 0xffff002f, 0x8e0, 0xffff0030, 0x8f0, 0xffff0031, 0x900, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x766f6d0a, 0x2c307220, 0xa307620, 0x2064616d, 0x782e3172, 0x76202c79, 0x63202c36, 0x782e3633, 0x63202c78, 0x792e3633, 0x616d0a79, 0x31722064, 0x202c782e, 0x792e3172, 0x3363202c, 0x2c782e33, 0x2e317220, 0x72660a78, 0x31722063, 0x2c79782e, 0x2e317220, 0x67730a78, 0x31722065, 0x202c7a2e, 0x782e3172, 0x3363202c, 0xa7a2e34, 0x2064616d, 0x782e3172, 0x3172202c, 0x202c7a2e, 0x3433632d, 0x202c7a2e, 0x782e3172, 0x64616d0a, 0x2e317220, 0x72202c78, 0x2c782e31, 0x37336320, 0x202c782e, 0x2e373363, 0x616d0a79, 0x31722064, 0x202c7a2e, 0x7a2e3172, 0x632d202c, 0x782e3433, 0x632d202c, 0x792e3433, 0x6c756d0a, 0x2e317220, 0x72202c78, 0x2c782e31, 0x2e317220, 0x616d0a7a, 0x30722064, 0x202c782e, 0x782e3172, 0x3363202c, 0x2c772e34, 0x2e307220, 0x616d0a78, 0x31722064, 0x202c782e, 0x782e3172, 0x3172202c, 0x202c782e, 0x2e343363, 0x756d0a79, 0x3172206c, 0x202c782e, 0x782e3172, 0x3172202c, 0x6d0a7a2e, 0x72206461, 0x2c792e30, 0x2e317220, 0x63202c78, 0x772e3433, 0x3072202c, 0x610a792e, 0x72206464, 0x2c782e30, 0x2e307220, 0x63202c78, 0x7a2e3733, 0x78346d0a, 0x32722034, 0x3072202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3272, 0x6f206461, 0x2c676f46, 0x2e327220, 0x63202c77, 0x782e3931, 0x3163202c, 0xa792e39, 0x2064616d, 0x782e3372, 0x202c7a79, 0x202c3176, 0x782e3363, 0x202c7878, 0x792e3363, 0x6d0a7979, 0x72206c75, 0x2c772e35, 0x2e347620, 0x63202c77, 0x792e3033, 0x64616d0a, 0x2e357220, 0x76202c77, 0x2c772e35, 0x30336320, 0x202c782e, 0x772e3572, 0x3470640a, 0x2e397220, 0x76202c78, 0x63202c30, 0x640a3532, 0x72203470, 0x2c792e39, 0x2c307620, 0x36326320, 0x64616d0a, 0x30317220, 0x2c79782e, 0x2e397220, 0x202c7978, 0x782e3972, 0x63202c79, 0xa7a2e33, 0x70676f6c, 0x31317220, 0x3172202c, 0xa782e30, 0x206c756d, 0x782e3972, 0x3972202c, 0x202c782e, 0x2e313172, 0x6f6c0a7a, 0x72207067, 0x202c3131, 0x2e303172, 0x756d0a79, 0x3972206c, 0x202c792e, 0x792e3972, 0x3172202c, 0xa7a2e31, 0x20717372, 0x2e303172, 0x72202c78, 0x782e3031, 0x7173720a, 0x30317220, 0x202c792e, 0x2e303172, 0x756d0a79, 0x3972206c, 0x2c79782e, 0x2e397220, 0x202c7978, 0x2e303172, 0x6d0a7978, 0x6f206461, 0x782e3154, 0x72202c79, 0x79782e39, 0x3263202c, 0x79782e37, 0x3263202c, 0x777a2e37, 0x3370640a, 0x2e367220, 0x72202c78, 0x63202c33, 0x6d0a3533, 0x72206c75, 0x79782e35, 0x72202c7a, 0x2c772e35, 0x39326320, 0x6c756d0a, 0x30446f20, 0x7a79782e, 0x3476202c, 0x3572202c, 0x6c756d0a, 0x30446f20, 0x202c772e, 0x772e3176, 0x3263202c, 0xa772e39, 0x206c756d, 0x2e31446f, 0x2c7a7978, 0x2c357620, 0xa357220, 0x20656773, 0x792e3872, 0x722d202c, 0x2c782e36, 0x35336320, 0x640a772e, 0x72203470, 0x2c782e38, 0x2c307620, 0x34326320, 0x6464610a, 0x32546f20, 0x3872202c, 0x202c782e, 0x792e3872, 0x6c756d0a, 0x2e347220, 0x202c7978, 0x202c3376, 0x782e3663, 0x756d0a78, 0x3472206c, 0x2c79782e, 0x2c347220, 0x32336320, 0xa79782e, 0x20646461, 0x2e30546f, 0x202c7978, 0x782e3472, 0x63202c79, 0x782e3133, 0x4d000a79, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x1, 0x800f0000, 0x90e40000, 0x4, 0x80030001, 0x90e40006, 0xa0000024, 0xa0550024, 0x4, 0x80010001, 0x80550001, 0xa0000021, 0x80000001, 0x13, 0x80030001, 0x80000001, 0xd, 0x80040001, 0x80000001, 0xa0aa0022, 0x4, 0x80010001, 0x80aa0001, 0xa1aa0022, 0x80000001, 0x4, 0x80010001, 0x80000001, 0xa0000025, 0xa0550025, 0x4, 0x80040001, 0x80aa0001, 0xa1000022, 0xa1550022, 0x5, 0x80010001, 0x80000001, 0x80aa0001, 0x4, 0x80010000, 0x80000001, 0xa0ff0022, 0x80000000, 0x4, 0x80010001, 0x80000001, 0x80000001, 0xa0550022, 0x5, 0x80010001, 0x80000001, 0x80aa0001, 0x4, 0x80020000, 0x80000001, 0xa0ff0022, 0x80550000, 0x2, 0x80010000, 0x80000000, 0xa0aa0025, 0x14, 0x800f0002, 0x80e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40002, 0x4, 0xc00f0001, 0x80ff0002, 0xa0000013, 0xa0550013, 0x4, 0x80070003, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80080005, 0x90ff0004, 0xa055001e, 0x4, 0x80080005, 0x90ff0005, 0xa000001e, 0x80ff0005, 0x9, 0x80010009, 0x90e40000, 0xa0e40019, 0x9, 0x80020009, 0x90e40000, 0xa0e4001a, 0x4, 0x8003000a, 0x80540009, 0x80540009, 0xa0aa0003, 0x4f, 0x800f000b, 0x8000000a, 0x5, 0x80010009, 0x80000009, 0x80aa000b, 0x4f, 0x800f000b, 0x8055000a, 0x5, 0x80020009, 0x80550009, 0x80aa000b, 0x7, 0x8001000a, 0x8000000a, 0x7, 0x8002000a, 0x8055000a, 0x5, 0x80030009, 0x80540009, 0x8054000a, 0x4, 0xe0030001, 0x80540009, 0xa054001b, 0xa0fe001b, 0x8, 0x80010006, 0x80e40003, 0xa0e40023, 0x5, 0x80070005, 0x80ff0005, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40005, 0x5, 0xd0080000, 0x90ff0001, 0xa0ff001d, 0x5, 0xd0070001, 0x90e40005, 0x80e40005, 0xd, 0x80020008, 0x81000006, 0xa0ff0023, 0x9, 0x80010008, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000008, 0x80550008, 0x5, 0x80030004, 0x90e40003, 0xa0000006, 0x5, 0x80030004, 0x80e40004, 0xa0540020, 0x2, 0xe0030000, 0x80540004, 0xa054001f, 0xffff };
SVShader vsG3AnimWaterOld( 50, dwvs11G3AnimWaterOld,0);
static DWORD dwvs11G3Surf[] ={ 0xfffe0101, 0x1ebfffe, 0x47554244, 0x28, 0x774, 0x218, 0x0, 0x0, 0x3e, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x7b4, 0xffff0003, 0x7c0, 0xffff0004, 0x7cc, 0xffff0005, 0x7d8, 0xffff0006, 0x7e4, 0xffff0007, 0x7f0, 0xffff0008, 0x7fc, 0xffff0009, 0x810, 0xffff000a, 0x820, 0xffff000b, 0x82c, 0xffff000c, 0x83c, 0xffff000d, 0x84c, 0xffff000e, 0x85c, 0xffff000f, 0x868, 0xffff0010, 0x87c, 0xffff0011, 0x888, 0xffff0012, 0x898, 0xffff0013, 0x8a8, 0xffff0014, 0x8b8, 0xffff0015, 0x8c4, 0xffff0016, 0x8d4, 0xffff0017, 0x8e8, 0xffff0018, 0x8f8, 0xffff0019, 0x908, 0xffff001a, 0x91c, 0xffff001b, 0x930, 0xffff001c, 0x940, 0xffff001d, 0x954, 0xffff001e, 0x964, 0xffff001f, 0x974, 0xffff0020, 0x988, 0xffff0021, 0x998, 0xffff0022, 0x9a8, 0xffff0023, 0x9b8, 0xffff0024, 0x9cc, 0xffff0025, 0x9dc, 0xffff0026, 0x9e8, 0xffff0027, 0x9fc, 0xffff0028, 0xa0c, 0xffff0029, 0xa1c, 0xffff002a, 0xa30, 0xffff002b, 0xa40, 0xffff002c, 0xa50, 0xffff002d, 0xa64, 0xffff002e, 0xa74, 0xffff002f, 0xa84, 0xffff0030, 0xa98, 0xffff0031, 0xaa4, 0xffff0032, 0xab4, 0xffff0033, 0xac0, 0xffff0034, 0xad0, 0xffff0035, 0xadc, 0xffff0036, 0xae8, 0xffff0037, 0xaf8, 0xffff0038, 0xb0c, 0xffff0039, 0xb1c, 0xffff003a, 0xb2c, 0xffff003b, 0xb3c, 0xffff003c, 0xb4c, 0xffff003d, 0xb5c, 0xffff003e, 0xb6c, 0xffff003f, 0xb7c, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x64616d0a, 0x2e307220, 0x2c7a7978, 0x2c317620, 0x2e336320, 0x2c787878, 0x2e336320, 0xa797979, 0x206c756d, 0x782e3272, 0x76202c79, 0x63202c33, 0x78782e36, 0x6372660a, 0x2e317220, 0x202c7978, 0x782e3272, 0x6275730a, 0x2e327220, 0x72202c78, 0x2c782e32, 0x2e317220, 0x756d0a78, 0x546f206c, 0x2c782e30, 0x2e317220, 0x63202c78, 0x782e3333, 0x6567730a, 0x30546f20, 0x202c792e, 0x782e3272, 0x3363202c, 0xa772e33, 0x20766f6d, 0x202c3172, 0x6d0a3076, 0x72206461, 0x79782e35, 0x3676202c, 0x3363202c, 0x78782e31, 0x3363202c, 0x79792e31, 0x766f6d0a, 0x2e377220, 0x202c7978, 0x782e3572, 0x67730a79, 0x32722065, 0x202c7a2e, 0x792e3272, 0x3363202c, 0xa792e33, 0x206c756d, 0x782e3572, 0x72202c79, 0x79782e35, 0x3272202c, 0xa7a7a2e, 0x20646461, 0x782e3272, 0x3272202c, 0x202c792e, 0x2e323363, 0x72660a78, 0x32722063, 0x2c79782e, 0x2e327220, 0x67730a78, 0x32722065, 0x202c7a2e, 0x782e3272, 0x3363202c, 0xa7a2e33, 0x2064616d, 0x782e3272, 0x3272202c, 0x202c7a2e, 0x3333632d, 0x202c7a2e, 0x782e3272, 0x6c756d0a, 0x2e327220, 0x72202c78, 0x2c782e32, 0x33336320, 0x610a782e, 0x72206464, 0x2c772e32, 0x32722d20, 0x202c7a2e, 0x2e333363, 0x616d0a79, 0x37722064, 0x202c7a2e, 0x7a2e3272, 0x3363202c, 0x2c782e33, 0x33632d20, 0xa792e33, 0x2064616d, 0x782e3272, 0x3272202c, 0x202c782e, 0x7a2e3772, 0x3272202c, 0x6d0a772e, 0x72206c75, 0x2c782e32, 0x2e327220, 0x72202c78, 0xa782e32, 0x2064616d, 0x782e3272, 0x3272202c, 0x202c782e, 0x7a2e3772, 0x3272202c, 0x6d0a772e, 0x72206c75, 0x79782e36, 0x3272202c, 0x2c78782e, 0x2e357220, 0x6d0a7978, 0x72206c75, 0x79782e36, 0x3672202c, 0x2c79782e, 0x2e327220, 0x6d0a7777, 0x72206461, 0x79782e36, 0x3572202c, 0x2c79782e, 0x2e327220, 0x202c7a7a, 0x782e3672, 0x64610a79, 0x31722064, 0x2c79782e, 0x2e367220, 0x202c7978, 0x782e3172, 0x756d0a79, 0x3772206c, 0x2c79782e, 0x2e377220, 0x202c7978, 0x782e3272, 0x756d0a78, 0x3772206c, 0x2c79782e, 0x2e377220, 0x202c7978, 0x2e32722d, 0x6d0a7a7a, 0x72206461, 0x79782e31, 0x3772202c, 0x2c79782e, 0x32336320, 0x202c772e, 0x782e3172, 0x346d0a79, 0x72203478, 0x72202c33, 0x63202c31, 0x6d0a3031, 0x6f20766f, 0x2c736f50, 0xa337220, 0x2064616d, 0x676f466f, 0x3372202c, 0x202c772e, 0x2e393163, 0x63202c78, 0x792e3931, 0x6c756d0a, 0x2e327220, 0x72202c79, 0x2c782e32, 0x2e327220, 0x64610a77, 0x32722064, 0x202c782e, 0x2e333363, 0x2d202c79, 0x782e3272, 0x64616d0a, 0x2e327220, 0x72202c79, 0x2c782e32, 0x2e327220, 0x72202c7a, 0xa792e32, 0x206c756d, 0x772e3472, 0x3272202c, 0x202c792e, 0x2e393263, 0x756d0a77, 0x3572206c, 0x202c772e, 0x772e3476, 0x3363202c, 0xa792e30, 0x2064616d, 0x772e3572, 0x3576202c, 0x202c772e, 0x2e303363, 0x72202c78, 0xa772e35, 0x20347064, 0x782e3972, 0x3076202c, 0x3263202c, 0x70640a35, 0x39722034, 0x202c792e, 0x202c3076, 0xa363263, 0x2064616d, 0x2e303172, 0x202c7978, 0x782e3972, 0x72202c79, 0x79782e39, 0x3363202c, 0x6c0a7a2e, 0x2070676f, 0x2c313172, 0x30317220, 0x6d0a782e, 0x72206c75, 0x2c782e39, 0x2e397220, 0x72202c78, 0x7a2e3131, 0x676f6c0a, 0x31722070, 0x72202c31, 0x792e3031, 0x6c756d0a, 0x2e397220, 0x72202c79, 0x2c792e39, 0x31317220, 0x720a7a2e, 0x72207173, 0x782e3031, 0x3172202c, 0xa782e30, 0x20717372, 0x2e303172, 0x72202c79, 0x792e3031, 0x6c756d0a, 0x2e397220, 0x202c7978, 0x782e3972, 0x72202c79, 0x782e3031, 0x616d0a79, 0x546f2064, 0x79782e31, 0x3972202c, 0x2c79782e, 0x37326320, 0x2c79782e, 0x37326320, 0xa777a2e, 0x20337064, 0x782e3672, 0x3072202c, 0x3363202c, 0x756d0a35, 0x3572206c, 0x7a79782e, 0x3572202c, 0x202c772e, 0xa393263, 0x206c756d, 0x2e30446f, 0x2c7a7978, 0x2c347620, 0xa357220, 0x206c756d, 0x2e30446f, 0x76202c77, 0x2c772e31, 0x2e347220, 0x756d0a77, 0x446f206c, 0x79782e31, 0x76202c7a, 0x72202c35, 0x67730a35, 0x38722065, 0x202c792e, 0x2e36722d, 0x63202c78, 0x772e3533, 0x3470640a, 0x2e387220, 0x76202c78, 0x63202c30, 0x610a3432, 0x6f206464, 0x202c3254, 0x782e3872, 0x3872202c, 0xa792e, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x4, 0x80070000, 0x90e40001, 0xa0000003, 0xa0550003, 0x5, 0x80030002, 0x90e40003, 0xa0000006, 0x13, 0x80030001, 0x80000002, 0x2, 0x80010002, 0x80000002, 0x81000001, 0x5, 0xe0010000, 0x80000001, 0xa0000021, 0xd, 0xe0020000, 0x80000002, 0xa0ff0021, 0x1, 0x800f0001, 0x90e40000, 0x4, 0x80030005, 0x90e40006, 0xa000001f, 0xa055001f, 0x1, 0x80030007, 0x80540005, 0xd, 0x80040002, 0x80550002, 0xa0550021, 0x5, 0x80030005, 0x80540005, 0x80aa0002, 0x2, 0x80010002, 0x80550002, 0xa0000020, 0x13, 0x80030002, 0x80000002, 0xd, 0x80040002, 0x80000002, 0xa0aa0021, 0x4, 0x80010002, 0x80aa0002, 0xa1aa0021, 0x80000002, 0x5, 0x80010002, 0x80000002, 0xa0000021, 0x2, 0x80080002, 0x81aa0002, 0xa0550021, 0x4, 0x80040007, 0x80aa0002, 0xa0000021, 0xa1550021, 0x4, 0x80010002, 0x80000002, 0x80aa0007, 0x80ff0002, 0x5, 0x80010002, 0x80000002, 0x80000002, 0x4, 0x80010002, 0x80000002, 0x80aa0007, 0x80ff0002, 0x5, 0x80030006, 0x80000002, 0x80540005, 0x5, 0x80030006, 0x80540006, 0x80ff0002, 0x4, 0x80030006, 0x80540005, 0x80aa0002, 0x80540006, 0x2, 0x80030001, 0x80540006, 0x80540001, 0x5, 0x80030007, 0x80540007, 0x80000002, 0x5, 0x80030007, 0x80540007, 0x81aa0002, 0x4, 0x80030001, 0x80540007, 0xa0ff0020, 0x80540001, 0x14, 0x800f0003, 0x80e40001, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40003, 0x4, 0xc00f0001, 0x80ff0003, 0xa0000013, 0xa0550013, 0x5, 0x80020002, 0x80000002, 0x80ff0002, 0x2, 0x80010002, 0xa0550021, 0x81000002, 0x4, 0x80020002, 0x80000002, 0x80aa0002, 0x80550002, 0x5, 0x80080004, 0x80550002, 0xa0ff001d, 0x5, 0x80080005, 0x90ff0004, 0xa055001e, 0x4, 0x80080005, 0x90ff0005, 0xa000001e, 0x80ff0005, 0x9, 0x80010009, 0x90e40000, 0xa0e40019, 0x9, 0x80020009, 0x90e40000, 0xa0e4001a, 0x4, 0x8003000a, 0x80540009, 0x80540009, 0xa0aa0003, 0x4f, 0x800f000b, 0x8000000a, 0x5, 0x80010009, 0x80000009, 0x80aa000b, 0x4f, 0x800f000b, 0x8055000a, 0x5, 0x80020009, 0x80550009, 0x80aa000b, 0x7, 0x8001000a, 0x8000000a, 0x7, 0x8002000a, 0x8055000a, 0x5, 0x80030009, 0x80540009, 0x8054000a, 0x4, 0xe0030001, 0x80540009, 0xa054001b, 0xa0fe001b, 0x8, 0x80010006, 0x80e40000, 0xa0e40023, 0x5, 0x80070005, 0x80ff0005, 0xa0e4001d, 0x5, 0xd0070000, 0x90e40004, 0x80e40005, 0x5, 0xd0080000, 0x90ff0001, 0x80ff0004, 0x5, 0xd0070001, 0x90e40005, 0x80e40005, 0xd, 0x80020008, 0x81000006, 0xa0ff0023, 0x9, 0x80010008, 0x90e40000, 0xa0e40018, 0x2, 0xe00f0002, 0x80000008, 0x80550008, 0xffff };
SVShader vsG3Surf( 51, dwvs11G3Surf,0);
static DWORD dwvs11G3WriteZ[] ={ 0xfffe0101, 0x58fffe, 0x47554244, 0x28, 0x128, 0x78, 0x0, 0x0, 0xa, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x168, 0xffff0003, 0x174, 0xffff0004, 0x180, 0xffff0005, 0x18c, 0xffff0006, 0x198, 0xffff0007, 0x1a4, 0xffff0008, 0x1b0, 0xffff0009, 0x1c0, 0xffff000a, 0x1cc, 0xffff000b, 0x1dc, 0x312e7376, 0x640a312e, 0x705f6c63, 0x7469736f, 0x206e6f69, 0xa3b3076, 0x5f6c6364, 0x6d726f6e, 0x76206c61, 0x640a3b31, 0x745f6c63, 0x6f637865, 0x3064726f, 0x3b337620, 0x6c63640a, 0x6e61745f, 0x746e6567, 0x34762030, 0x63640a3b, 0x61745f6c, 0x6e65676e, 0x76203174, 0x640a3b35, 0x745f6c63, 0x6f637865, 0x3164726f, 0x3b367620, 0x78346d0a, 0x30722034, 0x3076202c, 0x3163202c, 0x6f6d0a30, 0x506f2076, 0x202c736f, 0x6d0a3072, 0x6f206c75, 0x782e3054, 0x76202c79, 0x63202c33, 0x78782e36, 0x766f6d0a, 0x31546f20, 0x3072202c, 0xa7a2e, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x1f, 0x80000000, 0x900f0000, 0x1f, 0x80000003, 0x900f0001, 0x1f, 0x80000005, 0x900f0003, 0x1f, 0x80000006, 0x900f0004, 0x1f, 0x80010006, 0x900f0005, 0x1f, 0x80010005, 0x900f0006, 0x14, 0x800f0000, 0x90e40000, 0xa0e4000a, 0x1, 0xc00f0000, 0x80e40000, 0x5, 0xe0030000, 0x90e40003, 0xa0000006, 0x1, 0xe00f0001, 0x80aa0000, 0xffff };
SVShader vsG3WriteZ( 52, dwvs11G3WriteZ,0);
static DWORD dwps11G3WriteZ[] ={ 0xffff0200, 0x7afffe, 0x47554244, 0x28, 0x1af, 0x70, 0x0, 0x0, 0x9, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1f0, 0xffff0003, 0x1fc, 0xffff0004, 0x208, 0xffff0006, 0x214, 0xffff0008, 0x224, 0xffff000e, 0x234, 0xffff000f, 0x240, 0xffff0015, 0x250, 0xffff0016, 0x25c, 0x322e7370, 0xa0d302e, 0x206c6364, 0x782e3074, 0x640a0d79, 0x74206c63, 0xd782e31, 0x6c63640a, 0x2064325f, 0xa0d3073, 0x65740a0d, 0x20646c78, 0x202c3172, 0x202c3074, 0xa0d3073, 0x75730a0d, 0x30722062, 0x3174202c, 0x202c782e, 0x2e393263, 0x2f0a0d78, 0x78616d2f, 0x2c317220, 0x2c307220, 0x39326320, 0xa0d772e, 0x756d2f2f, 0x3172206c, 0x3172202c, 0x3263202c, 0xd792e39, 0x6d2f2f0a, 0x72207861, 0x2d202c32, 0x202c3072, 0x2e393263, 0x2f0a0d77, 0x6c756d2f, 0x2c327220, 0x2c327220, 0x39326320, 0xa0d7a2e, 0x64612f2f, 0x61735f64, 0x30722074, 0x3172202c, 0x3272202c, 0x62610a0d, 0x30722073, 0x3072202c, 0x756d0a0d, 0x61735f6c, 0x30722074, 0x3072202c, 0x3263202c, 0xd792e39, 0x2f0a0d0a, 0x6275732f, 0x2c307220, 0x30336320, 0x202c782e, 0xa0d3072, 0x756d2f2f, 0x3072206c, 0x3072202c, 0x3072202c, 0x2f2f0a0d, 0x20627573, 0x202c3072, 0x2e303363, 0x72202c78, 0xd0a0d30, 0x766f6d0a, 0x2e307220, 0x72202c61, 0xd612e31, 0x766f6d0a, 0x30436f20, 0x3072202c, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0010001, 0x200001f, 0x90000000, 0xa00f0800, 0x3000042, 0x800f0001, 0xb0e40000, 0xa0e40800, 0x3000002, 0x800f0000, 0xb0000001, 0xa100001d, 0x2000023, 0x800f0000, 0x80e40000, 0x3000005, 0x801f0000, 0x80e40000, 0xa055001d, 0x2000001, 0x80080000, 0x80ff0001, 0x2000001, 0x800f0800, 0x80e40000, 0xffff };
static SRenderState rsshaG3WriteZ[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3WriteZ[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3WriteZ[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3WriteZ[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3WriteZ( 1 , dwps11G3WriteZ,0,0,0, rsshaG3WriteZ, tssshaG3WriteZ, rsstateG3WriteZ, tssstateG3WriteZ );
static DWORD dwps11G3DepthOfField[] ={ 0xffff0200, 0x3a8fffe, 0x47554244, 0x28, 0xe6a, 0x310, 0x0, 0x0, 0x5d, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xea8, 0xffff0003, 0xeb4, 0xffff0004, 0xec0, 0xffff000a, 0xecc, 0xffff000b, 0xedc, 0xffff000e, 0xeec, 0xffff0011, 0xefc, 0xffff0012, 0xf10, 0xffff0013, 0xf24, 0xffff0014, 0xf38, 0xffff0015, 0xf4c, 0xffff0018, 0xf60, 0xffff0019, 0xf70, 0xffff001c, 0xf80, 0xffff001d, 0xf90, 0xffff0020, 0xfa0, 0xffff0021, 0xfb0, 0xffff0024, 0xfc0, 0xffff0025, 0xfd0, 0xffff0028, 0xfe0, 0xffff0029, 0xff0, 0xffff002c, 0x1000, 0xffff002d, 0x1010, 0xffff002e, 0x1024, 0xffff002f, 0x1038, 0xffff0032, 0x1048, 0xffff0033, 0x1058, 0xffff0034, 0x106c, 0xffff0035, 0x1080, 0xffff0038, 0x1090, 0xffff0039, 0x10a0, 0xffff003a, 0x10b4, 0xffff003b, 0x10c8, 0xffff003e, 0x10d8, 0xffff003f, 0x10e8, 0xffff0040, 0x10fc, 0xffff0041, 0x1110, 0xffff0044, 0x1120, 0xffff0045, 0x1130, 0xffff0046, 0x1144, 0xffff0047, 0x1158, 0xffff004a, 0x1168, 0xffff004b, 0x117c, 0xffff004c, 0x1190, 0xffff004d, 0x11a4, 0xffff004e, 0x11b8, 0xffff0051, 0x11cc, 0xffff0052, 0x11dc, 0xffff0055, 0x11ec, 0xffff0056, 0x11fc, 0xffff0059, 0x120c, 0xffff005a, 0x121c, 0xffff005d, 0x122c, 0xffff005e, 0x123c, 0xffff0061, 0x124c, 0xffff0062, 0x125c, 0xffff0065, 0x126c, 0xffff0066, 0x127c, 0xffff0067, 0x1290, 0xffff0068, 0x12a4, 0xffff006b, 0x12b4, 0xffff006c, 0x12c4, 0xffff006d, 0x12d8, 0xffff006e, 0x12ec, 0xffff0071, 0x12fc, 0xffff0072, 0x130c, 0xffff0073, 0x1320, 0xffff0074, 0x1334, 0xffff0077, 0x1344, 0xffff0078, 0x1354, 0xffff0079, 0x1368, 0xffff007a, 0x137c, 0xffff007d, 0x138c, 0xffff007e, 0x139c, 0xffff007f, 0x13b0, 0xffff0080, 0x13c4, 0xffff0083, 0x13d4, 0xffff0084, 0x13e8, 0xffff0087, 0x13fc, 0xffff0088, 0x140c, 0xffff008b, 0x141c, 0xffff008c, 0x142c, 0xffff008f, 0x143c, 0xffff0090, 0x144c, 0xffff0091, 0x1460, 0xffff0092, 0x1474, 0xffff0095, 0x1484, 0xffff0096, 0x1494, 0xffff0097, 0x14a8, 0xffff0098, 0x14bc, 0xffff009b, 0x14cc, 0xffff009c, 0x14d8, 0xffff009f, 0x14e8, 0x322e7370, 0xa0d302e, 0x206c6364, 0x782e3074, 0x640a0d79, 0x325f6c63, 0x30732064, 0x63640a0d, 0x64325f6c, 0xd317320, 0x2f0a0d0a, 0x7865742f, 0x7220646c, 0x74202c30, 0x73202c30, 0x2f0a0d31, 0x766f6d2f, 0x30436f20, 0x3072202c, 0xa0d0a0d, 0x46202f2f, 0x68637465, 0x64696d20, 0x20656c64, 0x706d6173, 0xa0d656c, 0x6c786574, 0x30722064, 0x3074202c, 0x3073202c, 0x65740a0d, 0x20646c78, 0x202c3172, 0x202c3074, 0xa0d3173, 0x2f2f0a0d, 0x6d6f4320, 0x65747570, 0x436f4320, 0x7a697320, 0x61622065, 0x20646573, 0x62206e6f, 0x7272756c, 0x73656e69, 0x6d0a0d73, 0x72206c75, 0x2c772e31, 0x2e317220, 0x63202c79, 0x782e3632, 0xa0d0a0d, 0x54202f2f, 0x75747865, 0x63206572, 0x64726f6f, 0x6d0a0d73, 0x72206461, 0x79782e33, 0x3063202c, 0x3172202c, 0x202c772e, 0xa0d3074, 0x2064616d, 0x782e3572, 0x63202c79, 0x72202c31, 0x2c772e31, 0xd307420, 0x64616d0a, 0x2e377220, 0x202c7978, 0x202c3263, 0x772e3172, 0x3074202c, 0x616d0a0d, 0x39722064, 0x2c79782e, 0x2c336320, 0x2e317220, 0x74202c77, 0x6d0a0d30, 0x72206461, 0x782e3131, 0x63202c79, 0x72202c34, 0x2c772e31, 0xd307420, 0x2f0a0d0a, 0x6153202f, 0x656c706d, 0x66203120, 0x68637465, 0x65740a0d, 0x20646c78, 0x202c3272, 0x202c3372, 0xa0d3073, 0x6c786574, 0x33722064, 0x3372202c, 0x3173202c, 0xa0d0a0d, 0x53202f2f, 0x6c706d61, 0x20322065, 0x63746566, 0x740a0d68, 0x646c7865, 0x2c347220, 0x2c357220, 0xd307320, 0x7865740a, 0x7220646c, 0x72202c35, 0x73202c35, 0xd0a0d31, 0x202f2f0a, 0x706d6153, 0x3320656c, 0x74656620, 0xa0d6863, 0x6c786574, 0x36722064, 0x3772202c, 0x3073202c, 0x65740a0d, 0x20646c78, 0x202c3772, 0x202c3772, 0xa0d3173, 0x2f2f0a0d, 0x6d615320, 0x20656c70, 0x65662034, 0xd686374, 0x7865740a, 0x7220646c, 0x72202c38, 0x73202c39, 0x740a0d30, 0x646c7865, 0x2c397220, 0x2c397220, 0xd317320, 0x2f0a0d0a, 0x6153202f, 0x656c706d, 0x66203520, 0x68637465, 0x65740a0d, 0x20646c78, 0x2c303172, 0x31317220, 0x3073202c, 0x65740a0d, 0x20646c78, 0x2c313172, 0x31317220, 0x3173202c, 0xa0d0a0d, 0x53202f2f, 0x6c706d61, 0x20312065, 0x746e6f63, 0x75626972, 0x6e6f6974, 0x75730a0d, 0x33722062, 0x202c772e, 0x782e3372, 0x3172202c, 0xa0d782e, 0x20706d63, 0x782e3372, 0x3372202c, 0x202c772e, 0x2e363263, 0x72202c7a, 0xd792e33, 0x64616d0a, 0x2e307220, 0x2c626772, 0x2c327220, 0x2e337220, 0x72202c78, 0x610a0d30, 0x72206464, 0x2c7a2e31, 0x36326320, 0x202c7a2e, 0x782e3372, 0xa0d0a0d, 0x53202f2f, 0x6c706d61, 0x20322065, 0x746e6f63, 0x75626972, 0x6e6f6974, 0x75730a0d, 0x35722062, 0x202c772e, 0x782e3572, 0x3172202c, 0xa0d782e, 0x20706d63, 0x782e3572, 0x3572202c, 0x202c772e, 0x2e363263, 0x72202c7a, 0xd792e35, 0x64616d0a, 0x2e307220, 0x2c626772, 0x2c347220, 0x2e357220, 0x72202c78, 0x610a0d30, 0x72206464, 0x2c7a2e31, 0x2e317220, 0x72202c7a, 0xd782e35, 0x2f0a0d0a, 0x6153202f, 0x656c706d, 0x63203320, 0x72746e6f, 0x74756269, 0xd6e6f69, 0x6275730a, 0x2e377220, 0x72202c77, 0x2c782e37, 0x2e317220, 0x630a0d78, 0x7220706d, 0x2c782e37, 0x2e377220, 0x63202c77, 0x7a2e3632, 0x3772202c, 0xa0d792e, 0x2064616d, 0x722e3072, 0x202c6267, 0x202c3672, 0x782e3772, 0x3072202c, 0x64610a0d, 0x31722064, 0x202c7a2e, 0x7a2e3172, 0x3772202c, 0xa0d782e, 0x2f2f0a0d, 0x6d615320, 0x20656c70, 0x6f632034, 0x6972746e, 0x69747562, 0xa0d6e6f, 0x20627573, 0x772e3972, 0x3972202c, 0x202c782e, 0x782e3172, 0x6d630a0d, 0x39722070, 0x202c782e, 0x772e3972, 0x3263202c, 0x2c7a2e36, 0x2e397220, 0x6d0a0d79, 0x72206461, 0x67722e30, 0x72202c62, 0x72202c38, 0x2c782e39, 0xd307220, 0x6464610a, 0x2e317220, 0x72202c7a, 0x2c7a2e31, 0x2e397220, 0xd0a0d78, 0x202f2f0a, 0x706d6153, 0x3520656c, 0x6e6f6320, 0x62697274, 0x6f697475, 0x730a0d6e, 0x72206275, 0x772e3131, 0x3172202c, 0x2c782e31, 0x2e317220, 0x630a0d78, 0x7220706d, 0x782e3131, 0x3172202c, 0x2c772e31, 0x36326320, 0x202c7a2e, 0x2e313172, 0x6d0a0d79, 0x72206461, 0x67722e30, 0x72202c62, 0x202c3031, 0x2e313172, 0x72202c78, 0x610a0d30, 0x72206464, 0x2c7a2e31, 0x2e317220, 0x72202c7a, 0x782e3131, 0xa0d0a0d, 0x54202f2f, 0x75747865, 0x63206572, 0x64726f6f, 0x6d0a0d73, 0x72206461, 0x79782e33, 0x3563202c, 0x3172202c, 0x202c772e, 0xa0d3074, 0x2064616d, 0x782e3572, 0x63202c79, 0x72202c36, 0x2c772e31, 0xd307420, 0x64616d0a, 0x2e377220, 0x202c7978, 0x202c3763, 0x772e3172, 0x3074202c, 0x616d0a0d, 0x39722064, 0x2c79782e, 0x2c386320, 0x2e317220, 0x74202c77, 0x6d0a0d30, 0x72206461, 0x782e3131, 0x63202c79, 0x72202c39, 0x2c772e31, 0xd307420, 0x2f0a0d0a, 0x6153202f, 0x656c706d, 0x66203620, 0x68637465, 0x65740a0d, 0x20646c78, 0x202c3272, 0x202c3372, 0xa0d3073, 0x6c786574, 0x33722064, 0x3372202c, 0x3173202c, 0xa0d0a0d, 0x53202f2f, 0x6c706d61, 0x20372065, 0x63746566, 0x740a0d68, 0x646c7865, 0x2c347220, 0x2c357220, 0xd307320, 0x7865740a, 0x7220646c, 0x72202c35, 0x73202c35, 0xd0a0d31, 0x202f2f0a, 0x706d6153, 0x3820656c, 0x74656620, 0xa0d6863, 0x6c786574, 0x36722064, 0x3772202c, 0x3073202c, 0x65740a0d, 0x20646c78, 0x202c3772, 0x202c3772, 0xa0d3173, 0x2f2f0a0d, 0x6d615320, 0x20656c70, 0x65662039, 0xd686374, 0x7865740a, 0x7220646c, 0x72202c38, 0x73202c39, 0x740a0d30, 0x646c7865, 0x2c397220, 0x2c397220, 0xd317320, 0x2f0a0d0a, 0x6153202f, 0x656c706d, 0x20303120, 0x63746566, 0x740a0d68, 0x646c7865, 0x30317220, 0x3172202c, 0x73202c31, 0x740a0d30, 0x646c7865, 0x31317220, 0x3172202c, 0x73202c31, 0xd0a0d31, 0x202f2f0a, 0x706d6153, 0x3620656c, 0x6e6f6320, 0x62697274, 0x6f697475, 0x730a0d6e, 0x72206275, 0x2c772e33, 0x2e337220, 0x72202c78, 0xd782e31, 0x706d630a, 0x2e337220, 0x72202c78, 0x2c772e33, 0x36326320, 0x202c7a2e, 0x792e3372, 0x616d0a0d, 0x30722064, 0x6267722e, 0x3272202c, 0x3372202c, 0x202c782e, 0xa0d3072, 0x20646461, 0x7a2e3172, 0x3172202c, 0x202c7a2e, 0x782e3372, 0xa0d0a0d, 0x53202f2f, 0x6c706d61, 0x20372065, 0x746e6f63, 0x75626972, 0x6e6f6974, 0x75730a0d, 0x35722062, 0x202c772e, 0x782e3572, 0x3172202c, 0xa0d782e, 0x20706d63, 0x782e3572, 0x3572202c, 0x202c772e, 0x2e363263, 0x72202c7a, 0xd792e35, 0x64616d0a, 0x2e307220, 0x2c626772, 0x2c347220, 0x2e357220, 0x72202c78, 0x610a0d30, 0x72206464, 0x2c7a2e31, 0x2e317220, 0x72202c7a, 0xd782e35, 0x2f0a0d0a, 0x6153202f, 0x656c706d, 0x63203820, 0x72746e6f, 0x74756269, 0xd6e6f69, 0x6275730a, 0x2e377220, 0x72202c77, 0x2c782e37, 0x2e317220, 0x630a0d78, 0x7220706d, 0x2c782e37, 0x2e377220, 0x63202c77, 0x7a2e3632, 0x3772202c, 0xa0d792e, 0x2064616d, 0x722e3072, 0x202c6267, 0x202c3672, 0x782e3772, 0x3072202c, 0x64610a0d, 0x31722064, 0x202c7a2e, 0x7a2e3172, 0x3772202c, 0xa0d782e, 0x2f2f0a0d, 0x6d615320, 0x20656c70, 0x6f632039, 0x6972746e, 0x69747562, 0xa0d6e6f, 0x20627573, 0x772e3972, 0x3972202c, 0x202c782e, 0x782e3172, 0x6d630a0d, 0x39722070, 0x202c782e, 0x772e3972, 0x3263202c, 0x2c7a2e36, 0x2e397220, 0x6d0a0d79, 0x72206461, 0x67722e30, 0x72202c62, 0x72202c38, 0x2c782e39, 0xd307220, 0x6464610a, 0x2e317220, 0x72202c7a, 0x2c7a2e31, 0x2e397220, 0xd0a0d78, 0x202f2f0a, 0x706d6153, 0x3120656c, 0x6f632030, 0x6972746e, 0x69747562, 0xa0d6e6f, 0x20627573, 0x2e313172, 0x72202c77, 0x782e3131, 0x3172202c, 0xa0d782e, 0x20706d63, 0x2e313172, 0x72202c78, 0x772e3131, 0x3263202c, 0x2c7a2e36, 0x31317220, 0xa0d792e, 0x2064616d, 0x722e3072, 0x202c6267, 0x2c303172, 0x31317220, 0x202c782e, 0xa0d3072, 0x20646461, 0x7a2e3172, 0x3172202c, 0x202c7a2e, 0x2e313172, 0xd0a0d78, 0x202f2f0a, 0x74786554, 0x20657275, 0x726f6f63, 0xa0d7364, 0x2064616d, 0x782e3372, 0x63202c79, 0x202c3031, 0x772e3172, 0x3074202c, 0x616d0a0d, 0x35722064, 0x2c79782e, 0x31316320, 0x3172202c, 0x202c772e, 0xa0d3074, 0x2f2f0a0d, 0x6d615320, 0x20656c70, 0x66203131, 0x68637465, 0x65740a0d, 0x20646c78, 0x202c3272, 0x202c3372, 0xa0d3073, 0x6c786574, 0x33722064, 0x3372202c, 0x3173202c, 0xa0d0a0d, 0x53202f2f, 0x6c706d61, 0x32312065, 0x74656620, 0xa0d6863, 0x6c786574, 0x34722064, 0x3572202c, 0x3073202c, 0x65740a0d, 0x20646c78, 0x202c3572, 0x202c3572, 0xa0d3173, 0x2f2f0a0d, 0x6d615320, 0x20656c70, 0x63203131, 0x72746e6f, 0x74756269, 0xd6e6f69, 0x6275730a, 0x2e337220, 0x72202c77, 0x2c782e33, 0x2e317220, 0x630a0d78, 0x7220706d, 0x2c782e33, 0x2e337220, 0x63202c77, 0x7a2e3632, 0x3372202c, 0xa0d792e, 0x2064616d, 0x722e3072, 0x202c6267, 0x202c3272, 0x782e3372, 0x3072202c, 0x64610a0d, 0x31722064, 0x202c7a2e, 0x7a2e3172, 0x3372202c, 0xa0d782e, 0x2f2f0a0d, 0x6d615320, 0x20656c70, 0x63203231, 0x72746e6f, 0x74756269, 0xd6e6f69, 0x6275730a, 0x2e357220, 0x72202c77, 0x2c782e35, 0x2e317220, 0x630a0d78, 0x7220706d, 0x2c782e35, 0x2e357220, 0x63202c77, 0x7a2e3632, 0x3572202c, 0xa0d792e, 0x2064616d, 0x722e3072, 0x202c6267, 0x202c3472, 0x782e3572, 0x3072202c, 0x64610a0d, 0x31722064, 0x202c7a2e, 0x7a2e3172, 0x3572202c, 0xa0d782e, 0x2f2f0a0d, 0x61635320, 0x7320656c, 0x6c706d61, 0x75732065, 0x720a0d6d, 0x72207063, 0x2c772e31, 0x2e317220, 0x6d0a0d7a, 0x72206c75, 0x67722e30, 0x72202c62, 0x72202c30, 0xd772e31, 0x2f0a0d0a, 0x754f202f, 0x74757074, 0x6c6f6320, 0xa0d726f, 0x20766f6d, 0x2c30436f, 0xd307220, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x3000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 0x3000042, 0x800f0001, 0xb0e40000, 0xa0e40801, 0x3000005, 0x80080001, 0x80550001, 0xa000001a, 0x4000004, 0x80030003, 0xa0e40000, 0x80ff0001, 0xb0e40000, 0x4000004, 0x80030005, 0xa0e40001, 0x80ff0001, 0xb0e40000, 0x4000004, 0x80030007, 0xa0e40002, 0x80ff0001, 0xb0e40000, 0x4000004, 0x80030009, 0xa0e40003, 0x80ff0001, 0xb0e40000, 0x4000004, 0x8003000b, 0xa0e40004, 0x80ff0001, 0xb0e40000, 0x3000042, 0x800f0002, 0x80e40003, 0xa0e40800, 0x3000042, 0x800f0003, 0x80e40003, 0xa0e40801, 0x3000042, 0x800f0004, 0x80e40005, 0xa0e40800, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40007, 0xa0e40800, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000042, 0x800f0008, 0x80e40009, 0xa0e40800, 0x3000042, 0x800f0009, 0x80e40009, 0xa0e40801, 0x3000042, 0x800f000a, 0x80e4000b, 0xa0e40800, 0x3000042, 0x800f000b, 0x80e4000b, 0xa0e40801, 0x3000002, 0x80080003, 0x80000003, 0x81000001, 0x4000058, 0x80010003, 0x80ff0003, 0xa0aa001a, 0x80550003, 0x4000004, 0x80070000, 0x80e40002, 0x80000003, 0x80e40000, 0x3000002, 0x80040001, 0xa0aa001a, 0x80000003, 0x3000002, 0x80080005, 0x80000005, 0x81000001, 0x4000058, 0x80010005, 0x80ff0005, 0xa0aa001a, 0x80550005, 0x4000004, 0x80070000, 0x80e40004, 0x80000005, 0x80e40000, 0x3000002, 0x80040001, 0x80aa0001, 0x80000005, 0x3000002, 0x80080007, 0x80000007, 0x81000001, 0x4000058, 0x80010007, 0x80ff0007, 0xa0aa001a, 0x80550007, 0x4000004, 0x80070000, 0x80e40006, 0x80000007, 0x80e40000, 0x3000002, 0x80040001, 0x80aa0001, 0x80000007, 0x3000002, 0x80080009, 0x80000009, 0x81000001, 0x4000058, 0x80010009, 0x80ff0009, 0xa0aa001a, 0x80550009, 0x4000004, 0x80070000, 0x80e40008, 0x80000009, 0x80e40000, 0x3000002, 0x80040001, 0x80aa0001, 0x80000009, 0x3000002, 0x8008000b, 0x8000000b, 0x81000001, 0x4000058, 0x8001000b, 0x80ff000b, 0xa0aa001a, 0x8055000b, 0x4000004, 0x80070000, 0x80e4000a, 0x8000000b, 0x80e40000, 0x3000002, 0x80040001, 0x80aa0001, 0x8000000b, 0x4000004, 0x80030003, 0xa0e40005, 0x80ff0001, 0xb0e40000, 0x4000004, 0x80030005, 0xa0e40006, 0x80ff0001, 0xb0e40000, 0x4000004, 0x80030007, 0xa0e40007, 0x80ff0001, 0xb0e40000, 0x4000004, 0x80030009, 0xa0e40008, 0x80ff0001, 0xb0e40000, 0x4000004, 0x8003000b, 0xa0e40009, 0x80ff0001, 0xb0e40000, 0x3000042, 0x800f0002, 0x80e40003, 0xa0e40800, 0x3000042, 0x800f0003, 0x80e40003, 0xa0e40801, 0x3000042, 0x800f0004, 0x80e40005, 0xa0e40800, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40007, 0xa0e40800, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000042, 0x800f0008, 0x80e40009, 0xa0e40800, 0x3000042, 0x800f0009, 0x80e40009, 0xa0e40801, 0x3000042, 0x800f000a, 0x80e4000b, 0xa0e40800, 0x3000042, 0x800f000b, 0x80e4000b, 0xa0e40801, 0x3000002, 0x80080003, 0x80000003, 0x81000001, 0x4000058, 0x80010003, 0x80ff0003, 0xa0aa001a, 0x80550003, 0x4000004, 0x80070000, 0x80e40002, 0x80000003, 0x80e40000, 0x3000002, 0x80040001, 0x80aa0001, 0x80000003, 0x3000002, 0x80080005, 0x80000005, 0x81000001, 0x4000058, 0x80010005, 0x80ff0005, 0xa0aa001a, 0x80550005, 0x4000004, 0x80070000, 0x80e40004, 0x80000005, 0x80e40000, 0x3000002, 0x80040001, 0x80aa0001, 0x80000005, 0x3000002, 0x80080007, 0x80000007, 0x81000001, 0x4000058, 0x80010007, 0x80ff0007, 0xa0aa001a, 0x80550007, 0x4000004, 0x80070000, 0x80e40006, 0x80000007, 0x80e40000, 0x3000002, 0x80040001, 0x80aa0001, 0x80000007, 0x3000002, 0x80080009, 0x80000009, 0x81000001, 0x4000058, 0x80010009, 0x80ff0009, 0xa0aa001a, 0x80550009, 0x4000004, 0x80070000, 0x80e40008, 0x80000009, 0x80e40000, 0x3000002, 0x80040001, 0x80aa0001, 0x80000009, 0x3000002, 0x8008000b, 0x8000000b, 0x81000001, 0x4000058, 0x8001000b, 0x80ff000b, 0xa0aa001a, 0x8055000b, 0x4000004, 0x80070000, 0x80e4000a, 0x8000000b, 0x80e40000, 0x3000002, 0x80040001, 0x80aa0001, 0x8000000b, 0x4000004, 0x80030003, 0xa0e4000a, 0x80ff0001, 0xb0e40000, 0x4000004, 0x80030005, 0xa0e4000b, 0x80ff0001, 0xb0e40000, 0x3000042, 0x800f0002, 0x80e40003, 0xa0e40800, 0x3000042, 0x800f0003, 0x80e40003, 0xa0e40801, 0x3000042, 0x800f0004, 0x80e40005, 0xa0e40800, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000002, 0x80080003, 0x80000003, 0x81000001, 0x4000058, 0x80010003, 0x80ff0003, 0xa0aa001a, 0x80550003, 0x4000004, 0x80070000, 0x80e40002, 0x80000003, 0x80e40000, 0x3000002, 0x80040001, 0x80aa0001, 0x80000003, 0x3000002, 0x80080005, 0x80000005, 0x81000001, 0x4000058, 0x80010005, 0x80ff0005, 0xa0aa001a, 0x80550005, 0x4000004, 0x80070000, 0x80e40004, 0x80000005, 0x80e40000, 0x3000002, 0x80040001, 0x80aa0001, 0x80000005, 0x2000006, 0x80080001, 0x80aa0001, 0x3000005, 0x80070000, 0x80e40000, 0x80ff0001, 0x2000001, 0x800f0800, 0x80e40000, 0xffff };
static SRenderState rsshaG3DepthOfField[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3DepthOfField[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3DepthOfField[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3DepthOfField[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3DepthOfField( 2 , dwps11G3DepthOfField,0,0,0, rsshaG3DepthOfField, tssshaG3DepthOfField, rsstateG3DepthOfField, tssstateG3DepthOfField );
static DWORD dwps11Dp3[] ={ 0xffff0101, 0x2cfffe, 0x47554244, 0x28, 0x77, 0x40, 0x0, 0x0, 0x3, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xb8, 0xffff0003, 0xc0, 0xffff0004, 0xd0, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20337064, 0x202c3072, 0x202c3074, 0xa0d3063, 0x20646461, 0x722e3072, 0x202c6267, 0x202c3072, 0x30722d31, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x42, 0xb00f0000, 0x8, 0x800f0000, 0xb0e40000, 0xa0e40000, 0x2, 0x80070000, 0x80e40000, 0x86e40000, 0xffff };
static SRenderState rsshaDp3[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaDp3[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateDp3[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateDp3[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psDp3( 3 , dwps11Dp3,0,0,0, rsshaDp3, tssshaDp3, rsstateDp3, tssstateDp3 );
static DWORD dwps11AlphaTestTexturePerVertexTransp[] ={ 0xffff0101, 0x2cfffe, 0x47554244, 0x28, 0x77, 0x40, 0x0, 0x0, 0x3, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xb8, 0xffff0003, 0xc0, 0xffff0004, 0xcc, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20766f6d, 0x722e3072, 0x202c6267, 0xa0d3074, 0x206c756d, 0x612e3072, 0x3074202c, 0x202c612e, 0x612e3076, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x42, 0xb00f0000, 0x1, 0x80070000, 0xb0e40000, 0x5, 0x80080000, 0xb0ff0000, 0x90ff0000, 0xffff };
static SRenderState rsshaAlphaTestTexturePerVertexTransp[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaAlphaTestTexturePerVertexTransp[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateAlphaTestTexturePerVertexTransp[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAREF, 120}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATER}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateAlphaTestTexturePerVertexTransp[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psAlphaTestTexturePerVertexTransp( 4 , dwps11AlphaTestTexturePerVertexTransp,0,0,0, rsshaAlphaTestTexturePerVertexTransp, tssshaAlphaTestTexturePerVertexTransp, rsstateAlphaTestTexturePerVertexTransp, tssstateAlphaTestTexturePerVertexTransp );
static DWORD dwps11G3DiffuseTex[] ={ 0xffff0101, 0x62fffe, 0x47554244, 0x28, 0x151, 0x78, 0x0, 0x0, 0xa, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x190, 0xffff0003, 0x198, 0xffff0004, 0x1a0, 0xffff0005, 0x1a8, 0xffff0006, 0x1b8, 0xffff0007, 0x1c8, 0xffff0008, 0x1d8, 0xffff0009, 0x1e8, 0xffff000a, 0x1fc, 0xffff000b, 0x210, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x63786574, 0x64726f6f, 0xd327420, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3072, 0x202c6267, 0x202c3076, 0xa0d3074, 0x6464612b, 0x5f34785f, 0x20746173, 0x612e3072, 0x3174202c, 0x742d202c, 0xd7a2e32, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3172, 0x202c6267, 0x202c3176, 0xa0d3074, 0x6464612b, 0x2e307220, 0x63202c61, 0x72202c34, 0x6c0a0d30, 0x72207072, 0x67722e31, 0x74202c62, 0x72202c31, 0x72202c31, 0x630a0d30, 0x7220646e, 0x67722e30, 0x72202c62, 0x2c612e30, 0x2c307220, 0xd317220, 0x756d2b0a, 0x3072206c, 0x202c612e, 0x612e3074, 0x3076202c, 0xa0d612e, 0xa0d0a0d, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x40, 0xb00f0002, 0x5, 0x82170000, 0x90e40000, 0xb0e40000, 0x40000002, 0x82180000, 0xb0e40001, 0xb1aa0002, 0x5, 0x82170001, 0x90e40001, 0xb0e40000, 0x40000002, 0x80080000, 0xa0e40004, 0x80e40000, 0x12, 0x80070001, 0xb0e40001, 0x80e40001, 0x80e40000, 0x50, 0x80070000, 0x80ff0000, 0x80e40000, 0x80e40001, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0xffff };
static SRenderState rsshaG3DiffuseTex[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3DiffuseTex[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3DiffuseTex[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3DiffuseTex[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3DiffuseTex( 5 , dwps11G3DiffuseTex,0,0,0, rsshaG3DiffuseTex, tssshaG3DiffuseTex, rsstateG3DiffuseTex, tssstateG3DiffuseTex );
static DWORD dwps11G3DiffuseTexNoAlpha[] ={ 0xffff0101, 0x44fffe, 0x47554244, 0x28, 0xda, 0x58, 0x0, 0x0, 0x6, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x118, 0xffff0003, 0x120, 0xffff0004, 0x128, 0xffff0005, 0x138, 0xffff0006, 0x148, 0xffff0007, 0x15c, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x5f6c756d, 0x735f3478, 0x72207461, 0x67722e30, 0x76202c62, 0x74202c30, 0x6d0a0d30, 0x785f6c75, 0x61735f34, 0x31722074, 0x6267722e, 0x3176202c, 0x3074202c, 0x726c0a0d, 0x30722070, 0x6267722e, 0x3174202c, 0x3172202c, 0x3072202c, 0x6d2b0a0d, 0x72206c75, 0x2c612e30, 0x2e307420, 0x76202c61, 0xd612e30, 0xd0a0d0a, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x5, 0x82170000, 0x90e40000, 0xb0e40000, 0x5, 0x82170001, 0x90e40001, 0xb0e40000, 0x12, 0x80070000, 0xb0e40001, 0x80e40001, 0x80e40000, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0xffff };
static SRenderState rsshaG3DiffuseTexNoAlpha[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3DiffuseTexNoAlpha[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3DiffuseTexNoAlpha[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3DiffuseTexNoAlpha[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3DiffuseTexNoAlpha( 6 , dwps11G3DiffuseTexNoAlpha,0,0,0, rsshaG3DiffuseTexNoAlpha, tssshaG3DiffuseTexNoAlpha, rsstateG3DiffuseTexNoAlpha, tssstateG3DiffuseTexNoAlpha );
static DWORD dwps11G3DiffuseTexNoShadows[] ={ 0xffff0101, 0x30fffe, 0x47554244, 0x28, 0x87, 0x40, 0x0, 0x0, 0x3, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xc8, 0xffff0003, 0xd0, 0xffff0004, 0xe0, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x5f6c756d, 0x735f3478, 0x72207461, 0x67722e30, 0x76202c62, 0x74202c31, 0x2b0a0d30, 0x206c756d, 0x612e3072, 0x3074202c, 0x202c612e, 0x612e3076, 0xa0d0a0d, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x42, 0xb00f0000, 0x5, 0x82170000, 0x90e40001, 0xb0e40000, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0xffff };
static SRenderState rsshaG3DiffuseTexNoShadows[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3DiffuseTexNoShadows[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3DiffuseTexNoShadows[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3DiffuseTexNoShadows[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3DiffuseTexNoShadows( 7 , dwps11G3DiffuseTexNoShadows,0,0,0, rsshaG3DiffuseTexNoShadows, tssshaG3DiffuseTexNoShadows, rsstateG3DiffuseTexNoShadows, tssstateG3DiffuseTexNoShadows );
static DWORD dwps11G3TransparentGeomNoLM[] ={ 0xffff0101, 0x2ffffe, 0x47554244, 0x28, 0x83, 0x40, 0x0, 0x0, 0x3, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xc4, 0xffff0003, 0xcc, 0xffff0004, 0xdc, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x5f6c756d, 0x735f3478, 0x72207461, 0x67722e30, 0x76202c62, 0x74202c31, 0x2b0a0d30, 0x206c756d, 0x612e3072, 0x3074202c, 0x202c612e, 0x612e3076, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x42, 0xb00f0000, 0x5, 0x82170000, 0x90e40001, 0xb0e40000, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0xffff };
static SRenderState rsshaG3TransparentGeomNoLM[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3TransparentGeomNoLM[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3TransparentGeomNoLM[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3TransparentGeomNoLM[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3TransparentGeomNoLM( 8 , dwps11G3TransparentGeomNoLM,0,0,0, rsshaG3TransparentGeomNoLM, tssshaG3TransparentGeomNoLM, rsstateG3TransparentGeomNoLM, tssstateG3TransparentGeomNoLM );
static DWORD dwps11G3TransparentGeom[] ={ 0xffff0101, 0x65fffe, 0x47554244, 0x28, 0x15c, 0x78, 0x0, 0x0, 0xa, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x19c, 0xffff0003, 0x1a4, 0xffff0004, 0x1ac, 0xffff0006, 0x1b4, 0xffff0007, 0x1c4, 0xffff0008, 0x1d4, 0xffff0009, 0x1e4, 0xffff000a, 0x1f4, 0xffff000b, 0x208, 0xffff000c, 0x21c, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x63786574, 0x64726f6f, 0xd327420, 0x742f2f0a, 0x6f637865, 0x2064726f, 0xa0d3374, 0x5f6c756d, 0x735f3478, 0x72207461, 0x67722e30, 0x76202c62, 0x74202c30, 0x2b0a0d30, 0x5f646461, 0x735f3478, 0x72207461, 0x2c612e30, 0x2c317420, 0x32742d20, 0xa0d7a2e, 0x5f6c756d, 0x735f3478, 0x72207461, 0x67722e31, 0x76202c62, 0x74202c31, 0x2b0a0d30, 0x20646461, 0x612e3072, 0x3463202c, 0x3072202c, 0x726c0a0d, 0x31722070, 0x6267722e, 0x3174202c, 0x3172202c, 0x3072202c, 0x6e630a0d, 0x30722064, 0x6267722e, 0x3072202c, 0x202c612e, 0x202c3072, 0xa0d3172, 0x6c756d2b, 0x2e307220, 0x74202c61, 0x2c612e30, 0x2e307620, 0xa0d61, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x40, 0xb00f0002, 0x5, 0x82170000, 0x90e40000, 0xb0e40000, 0x40000002, 0x82180000, 0xb0e40001, 0xb1aa0002, 0x5, 0x82170001, 0x90e40001, 0xb0e40000, 0x40000002, 0x80080000, 0xa0e40004, 0x80e40000, 0x12, 0x80070001, 0xb0e40001, 0x80e40001, 0x80e40000, 0x50, 0x80070000, 0x80ff0000, 0x80e40000, 0x80e40001, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0xffff };
static SRenderState rsshaG3TransparentGeom[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3TransparentGeom[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3TransparentGeom[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3TransparentGeom[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3TransparentGeom( 9 , dwps11G3TransparentGeom,0,0,0, rsshaG3TransparentGeom, tssshaG3TransparentGeom, rsstateG3TransparentGeom, tssstateG3TransparentGeom );
static DWORD dwps11G3DiffuseTexMirror[] ={ 0xffff0101, 0x62fffe, 0x47554244, 0x28, 0x151, 0x78, 0x0, 0x0, 0xa, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x190, 0xffff0003, 0x198, 0xffff0004, 0x1a0, 0xffff0005, 0x1a8, 0xffff0006, 0x1b8, 0xffff0007, 0x1c8, 0xffff0008, 0x1d8, 0xffff0009, 0x1e8, 0xffff000a, 0x1fc, 0xffff000b, 0x210, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x63786574, 0x64726f6f, 0xd327420, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3072, 0x202c6267, 0x202c3076, 0xa0d3074, 0x6464612b, 0x5f34785f, 0x20746173, 0x612e3072, 0x3174202c, 0x742d202c, 0xd7a2e32, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3172, 0x202c6267, 0x202c3176, 0xa0d3074, 0x6464612b, 0x2e307220, 0x63202c61, 0x72202c34, 0x6c0a0d30, 0x72207072, 0x67722e31, 0x74202c62, 0x72202c31, 0x72202c31, 0x630a0d30, 0x7220646e, 0x67722e30, 0x72202c62, 0x2c612e30, 0x2c307220, 0xd317220, 0x756d2b0a, 0x3072206c, 0x202c612e, 0x612e3074, 0x3076202c, 0xa0d612e, 0xa0d0a0d, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x40, 0xb00f0002, 0x5, 0x82170000, 0x90e40000, 0xb0e40000, 0x40000002, 0x82180000, 0xb0e40001, 0xb1aa0002, 0x5, 0x82170001, 0x90e40001, 0xb0e40000, 0x40000002, 0x80080000, 0xa0e40004, 0x80e40000, 0x12, 0x80070001, 0xb0e40001, 0x80e40001, 0x80e40000, 0x50, 0x80070000, 0x80ff0000, 0x80e40000, 0x80e40001, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0xffff };
static DWORD dwps14G3DiffuseTexMirror[] ={ 0xffff0104, 0xa3fffe, 0x47554244, 0x28, 0x253, 0xb0, 0x0, 0x0, 0x11, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x294, 0xffff0003, 0x2a0, 0xffff0004, 0x2ac, 0xffff0005, 0x2b8, 0xffff0006, 0x2c4, 0xffff0007, 0x2d0, 0xffff0008, 0x2e0, 0xffff0009, 0x2f0, 0xffff000a, 0x300, 0xffff000b, 0x310, 0xffff000c, 0x324, 0xffff000d, 0x338, 0xffff000e, 0x348, 0xffff000f, 0x354, 0xffff0010, 0x364, 0xffff0012, 0x374, 0xffff0013, 0x388, 0x312e7370, 0xa0d342e, 0x6c786574, 0x30722064, 0x3074202c, 0x65740a0d, 0x20646c78, 0x202c3172, 0xa0d3174, 0x63786574, 0x72206472, 0x67722e32, 0x74202c62, 0x79782e32, 0x740a0d77, 0x646c7865, 0x2c337220, 0xd337420, 0x7865740a, 0x7220646c, 0x74202c34, 0x6d0a0d34, 0x785f6c75, 0x61735f34, 0x35722074, 0x6267722e, 0x3076202c, 0x3072202c, 0x612b0a0d, 0x785f6464, 0x61735f34, 0x35722074, 0x202c612e, 0x202c3172, 0x2e32722d, 0x6d0a0d62, 0x785f6c75, 0x61735f34, 0x32722074, 0x6267722e, 0x3176202c, 0x3072202c, 0x612b0a0d, 0x72206464, 0x2c612e35, 0x2c346320, 0xd357220, 0x70726c0a, 0x2e327220, 0x2c626772, 0x2c317220, 0x2c327220, 0xd357220, 0x646e630a, 0x2e357220, 0x2c626772, 0x2e357220, 0x72202c61, 0x72202c35, 0x2b0a0d32, 0x206c756d, 0x612e3572, 0x3072202c, 0x202c612e, 0xa0d3063, 0x20766f6d, 0x722e3272, 0x202c6267, 0xa0d3372, 0x6c756d2b, 0x2e327220, 0x76202c61, 0x2c612e30, 0x2e337220, 0x6d0a0d61, 0x72206c75, 0x72202c32, 0x72202c32, 0x3b0a0d34, 0x20357220, 0x6964203d, 0x73756666, 0x6f632065, 0x20726f6c, 0x32722020, 0x72203d20, 0x656c6665, 0x6f697463, 0x6f63206e, 0xd726f6c, 0x70726c0a, 0x2e307220, 0x2c626772, 0x2e327220, 0x72202c61, 0x72202c32, 0x2b0a0d35, 0x2064616d, 0x612e3072, 0x3272202c, 0x202c612e, 0x35722d31, 0x202c612e, 0x612e3572, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x42, 0x800f0000, 0xb0e40000, 0x42, 0x800f0001, 0xb0e40001, 0x40, 0x80070002, 0xb0f40002, 0x42, 0x800f0003, 0xb0e40003, 0x42, 0x800f0004, 0xb0e40004, 0x5, 0x82170005, 0x90e40000, 0x80e40000, 0x40000002, 0x82180005, 0x80e40001, 0x81aa0002, 0x5, 0x82170002, 0x90e40001, 0x80e40000, 0x40000002, 0x80080005, 0xa0e40004, 0x80e40005, 0x12, 0x80070002, 0x80e40001, 0x80e40002, 0x80e40005, 0x50, 0x80070005, 0x80ff0005, 0x80e40005, 0x80e40002, 0x40000005, 0x80080005, 0x80ff0000, 0xa0e40000, 0x1, 0x80070002, 0x80e40003, 0x40000005, 0x80080002, 0x90ff0000, 0x80ff0003, 0x5, 0x800f0002, 0x80e40002, 0x80e40004, 0x12, 0x80070000, 0x80ff0002, 0x80e40002, 0x80e40005, 0x40000004, 0x80080000, 0x80ff0002, 0x86ff0005, 0x80ff0005, 0xffff };
static SRenderState rsshaG3DiffuseTexMirror[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3DiffuseTexMirror[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3DiffuseTexMirror[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3DiffuseTexMirror[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3DiffuseTexMirror( 10 , dwps11G3DiffuseTexMirror,dwps14G3DiffuseTexMirror,0,0, rsshaG3DiffuseTexMirror, tssshaG3DiffuseTexMirror, rsstateG3DiffuseTexMirror, tssstateG3DiffuseTexMirror );
static DWORD dwps11G3DiffuseTexDetail[] ={ 0xffff0101, 0x6afffe, 0x47554244, 0x28, 0x170, 0x88, 0x0, 0x0, 0xc, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1b0, 0xffff0003, 0x1b8, 0xffff0004, 0x1c0, 0xffff0005, 0x1c8, 0xffff0006, 0x1d0, 0xffff0007, 0x1e0, 0xffff0008, 0x1f0, 0xffff0009, 0x200, 0xffff000a, 0x210, 0xffff000b, 0x224, 0xffff000c, 0x238, 0xffff000d, 0x248, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x63786574, 0x64726f6f, 0xd327420, 0x7865740a, 0xd337420, 0x6c756d0a, 0x2034785f, 0x722e3072, 0x202c6267, 0x202c3076, 0xa0d3074, 0x6464612b, 0x5f34785f, 0x20746173, 0x612e3072, 0x3174202c, 0x742d202c, 0xd7a2e32, 0x6c756d0a, 0x2034785f, 0x722e3172, 0x202c6267, 0x202c3176, 0xa0d3074, 0x6464612b, 0x2e307220, 0x63202c61, 0x72202c34, 0x6c0a0d30, 0x72207072, 0x67722e31, 0x74202c62, 0x72202c31, 0x72202c31, 0x630a0d30, 0x7220646e, 0x67722e30, 0x72202c62, 0x2c612e30, 0x2c307220, 0xd317220, 0x756d2b0a, 0x3072206c, 0x202c612e, 0x612e3074, 0x3076202c, 0xa0d612e, 0x5f6c756d, 0x72203278, 0x72202c30, 0x74202c30, 0xa0d33, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x40, 0xb00f0002, 0x42, 0xb00f0003, 0x5, 0x82070000, 0x90e40000, 0xb0e40000, 0x40000002, 0x82180000, 0xb0e40001, 0xb1aa0002, 0x5, 0x82070001, 0x90e40001, 0xb0e40000, 0x40000002, 0x80080000, 0xa0e40004, 0x80e40000, 0x12, 0x80070001, 0xb0e40001, 0x80e40001, 0x80e40000, 0x50, 0x80070000, 0x80ff0000, 0x80e40000, 0x80e40001, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0x5, 0x810f0000, 0x80e40000, 0xb0e40003, 0xffff };
static SRenderState rsshaG3DiffuseTexDetail[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3DiffuseTexDetail[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3DiffuseTexDetail[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3DiffuseTexDetail[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3DiffuseTexDetail( 11 , dwps11G3DiffuseTexDetail,0,0,0, rsshaG3DiffuseTexDetail, tssshaG3DiffuseTexDetail, rsstateG3DiffuseTexDetail, tssstateG3DiffuseTexDetail );
static DWORD dwps11G3DiffuseTex2[] ={ 0xffff0101, 0x7afffe, 0x47554244, 0x28, 0x1b1, 0x98, 0x0, 0x0, 0xe, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1f0, 0xffff0003, 0x1f8, 0xffff0004, 0x200, 0xffff0005, 0x208, 0xffff0006, 0x210, 0xffff0007, 0x220, 0xffff0008, 0x230, 0xffff0009, 0x240, 0xffff000a, 0x250, 0xffff000b, 0x260, 0xffff000c, 0x270, 0xffff000d, 0x284, 0xffff000e, 0x298, 0xffff000f, 0x2a8, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x63786574, 0x64726f6f, 0xd327420, 0x7865740a, 0xd337420, 0x6c756d0a, 0x2e307220, 0x2c626772, 0x2c307620, 0xd307420, 0x6c756d0a, 0x2e317220, 0x2c626772, 0x2c317620, 0xd307420, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3072, 0x202c6267, 0x202c3072, 0xa0d3374, 0x6464612b, 0x5f34785f, 0x20746173, 0x612e3072, 0x3174202c, 0x742d202c, 0xd7a2e32, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3172, 0x202c6267, 0x202c3172, 0xa0d3374, 0x6464612b, 0x2e307220, 0x63202c61, 0x72202c34, 0x6c0a0d30, 0x72207072, 0x67722e31, 0x74202c62, 0x72202c31, 0x72202c31, 0x630a0d30, 0x7220646e, 0x67722e30, 0x72202c62, 0x2c612e30, 0x2c307220, 0xd317220, 0x756d2b0a, 0x3072206c, 0x202c612e, 0x612e3074, 0x3076202c, 0xa0d612e, 0x206c756d, 0x612e3072, 0x3072202c, 0x202c612e, 0xa0d3374, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x40, 0xb00f0002, 0x42, 0xb00f0003, 0x5, 0x80070000, 0x90e40000, 0xb0e40000, 0x5, 0x80070001, 0x90e40001, 0xb0e40000, 0x5, 0x82170000, 0x80e40000, 0xb0e40003, 0x40000002, 0x82180000, 0xb0e40001, 0xb1aa0002, 0x5, 0x82170001, 0x80e40001, 0xb0e40003, 0x40000002, 0x80080000, 0xa0e40004, 0x80e40000, 0x12, 0x80070001, 0xb0e40001, 0x80e40001, 0x80e40000, 0x50, 0x80070000, 0x80ff0000, 0x80e40000, 0x80e40001, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0x5, 0x80080000, 0x80ff0000, 0xb0e40003, 0xffff };
static SRenderState rsshaG3DiffuseTex2[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3DiffuseTex2[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3DiffuseTex2[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3DiffuseTex2[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3DiffuseTex2( 12 , dwps11G3DiffuseTex2,0,0,0, rsshaG3DiffuseTex2, tssshaG3DiffuseTex2, rsstateG3DiffuseTex2, tssstateG3DiffuseTex2 );
static DWORD dwps11G3DiffuseTexLM[] ={ 0xffff0101, 0x82fffe, 0x47554244, 0x28, 0x1d1, 0xa0, 0x0, 0x0, 0xf, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x210, 0xffff0003, 0x218, 0xffff0004, 0x220, 0xffff0005, 0x228, 0xffff0006, 0x230, 0xffff0007, 0x240, 0xffff0008, 0x250, 0xffff0009, 0x260, 0xffff000a, 0x270, 0xffff000b, 0x280, 0xffff000c, 0x290, 0xffff000d, 0x2a0, 0xffff000e, 0x2b0, 0xffff000f, 0x2c4, 0xffff0010, 0x2d8, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x63786574, 0x64726f6f, 0xd327420, 0x7865740a, 0xd337420, 0x6c756d0a, 0x2e307220, 0x2c626772, 0x2c337420, 0xd326320, 0x6464610a, 0x2e307220, 0x2c626772, 0x2c307220, 0xd316320, 0x6464610a, 0x2e317220, 0x2c626772, 0x2c317620, 0xd307220, 0x6464610a, 0x2e307220, 0x2c626772, 0x2c307620, 0xd307220, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3072, 0x202c6267, 0x202c3072, 0xa0d3074, 0x6464612b, 0x5f34785f, 0x20746173, 0x612e3072, 0x3174202c, 0x742d202c, 0xd7a2e32, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3172, 0x202c6267, 0x202c3172, 0xa0d3074, 0x6464612b, 0x2e307220, 0x63202c61, 0x72202c34, 0x6c0a0d30, 0x72207072, 0x67722e31, 0x74202c62, 0x72202c31, 0x72202c31, 0x630a0d30, 0x7220646e, 0x67722e30, 0x72202c62, 0x2c612e30, 0x2c307220, 0xd317220, 0x756d2b0a, 0x3072206c, 0x202c612e, 0x612e3074, 0x3076202c, 0xa0d612e, 0xa0d0a0d, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x40, 0xb00f0002, 0x42, 0xb00f0003, 0x5, 0x80070000, 0xb0e40003, 0xa0e40002, 0x2, 0x80070000, 0x80e40000, 0xa0e40001, 0x2, 0x80070001, 0x90e40001, 0x80e40000, 0x2, 0x80070000, 0x90e40000, 0x80e40000, 0x5, 0x82170000, 0x80e40000, 0xb0e40000, 0x40000002, 0x82180000, 0xb0e40001, 0xb1aa0002, 0x5, 0x82170001, 0x80e40001, 0xb0e40000, 0x40000002, 0x80080000, 0xa0e40004, 0x80e40000, 0x12, 0x80070001, 0xb0e40001, 0x80e40001, 0x80e40000, 0x50, 0x80070000, 0x80ff0000, 0x80e40000, 0x80e40001, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0xffff };
static SRenderState rsshaG3DiffuseTexLM[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3DiffuseTexLM[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3DiffuseTexLM[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3DiffuseTexLM[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3DiffuseTexLM( 13 , dwps11G3DiffuseTexLM,0,0,0, rsshaG3DiffuseTexLM, tssshaG3DiffuseTexLM, rsstateG3DiffuseTexLM, tssstateG3DiffuseTexLM );
static DWORD dwps11G3DiffuseTexLMNoShadows[] ={ 0xffff0101, 0x2bfffe, 0x47554244, 0x28, 0x73, 0x40, 0x0, 0x0, 0x3, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xb4, 0xffff0003, 0xbc, 0xffff0004, 0xc4, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x5f6c756d, 0x72203478, 0x74202c30, 0x74202c31, 0xa0d3b30, 0xa0d0a0d, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x5, 0x820f0000, 0xb0e40001, 0xb0e40000, 0xffff };
static SRenderState rsshaG3DiffuseTexLMNoShadows[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3DiffuseTexLMNoShadows[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3DiffuseTexLMNoShadows[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3DiffuseTexLMNoShadows[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3DiffuseTexLMNoShadows( 14 , dwps11G3DiffuseTexLMNoShadows,0,0,0, rsshaG3DiffuseTexLMNoShadows, tssshaG3DiffuseTexLMNoShadows, rsstateG3DiffuseTexLMNoShadows, tssstateG3DiffuseTexLMNoShadows );
static DWORD dwps11G3DiffuseTexDetailLM[] ={ 0xffff0101, 0x82fffe, 0x47554244, 0x28, 0x1d1, 0xa0, 0x0, 0x0, 0xf, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x210, 0xffff0003, 0x218, 0xffff0004, 0x220, 0xffff0005, 0x228, 0xffff0006, 0x230, 0xffff0007, 0x240, 0xffff0008, 0x250, 0xffff0009, 0x260, 0xffff000a, 0x270, 0xffff000b, 0x280, 0xffff000c, 0x290, 0xffff000d, 0x2a0, 0xffff000e, 0x2b0, 0xffff000f, 0x2c4, 0xffff0010, 0x2d8, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x63786574, 0x64726f6f, 0xd327420, 0x7865740a, 0xd337420, 0x6c756d0a, 0x2e307220, 0x2c626772, 0x2c337420, 0xd326320, 0x6464610a, 0x2e307220, 0x2c626772, 0x2c307220, 0xd316320, 0x6464610a, 0x2e317220, 0x2c626772, 0x2c317620, 0xd307220, 0x6464610a, 0x2e307220, 0x2c626772, 0x2c307620, 0xd307220, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3072, 0x202c6267, 0x202c3072, 0xa0d3074, 0x6464612b, 0x5f34785f, 0x20746173, 0x612e3072, 0x3174202c, 0x742d202c, 0xd7a2e32, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3172, 0x202c6267, 0x202c3172, 0xa0d3074, 0x6464612b, 0x2e307220, 0x63202c61, 0x72202c34, 0x6c0a0d30, 0x72207072, 0x67722e31, 0x74202c62, 0x72202c31, 0x72202c31, 0x630a0d30, 0x7220646e, 0x67722e30, 0x72202c62, 0x2c612e30, 0x2c307220, 0xd317220, 0x756d2b0a, 0x3072206c, 0x202c612e, 0x612e3074, 0x3076202c, 0xa0d612e, 0xa0d0a0d, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x40, 0xb00f0002, 0x42, 0xb00f0003, 0x5, 0x80070000, 0xb0e40003, 0xa0e40002, 0x2, 0x80070000, 0x80e40000, 0xa0e40001, 0x2, 0x80070001, 0x90e40001, 0x80e40000, 0x2, 0x80070000, 0x90e40000, 0x80e40000, 0x5, 0x82170000, 0x80e40000, 0xb0e40000, 0x40000002, 0x82180000, 0xb0e40001, 0xb1aa0002, 0x5, 0x82170001, 0x80e40001, 0xb0e40000, 0x40000002, 0x80080000, 0xa0e40004, 0x80e40000, 0x12, 0x80070001, 0xb0e40001, 0x80e40001, 0x80e40000, 0x50, 0x80070000, 0x80ff0000, 0x80e40000, 0x80e40001, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0xffff };
static DWORD dwps14G3DiffuseTexDetailLM[] ={ 0xffff0104, 0x8cfffe, 0x47554244, 0x28, 0x1fa, 0xa8, 0x0, 0x0, 0x10, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x238, 0xffff0003, 0x244, 0xffff0004, 0x250, 0xffff0005, 0x25c, 0xffff0006, 0x268, 0xffff0007, 0x274, 0xffff0008, 0x288, 0xffff0009, 0x298, 0xffff000a, 0x2a8, 0xffff000b, 0x2b8, 0xffff000c, 0x2c8, 0xffff000d, 0x2d8, 0xffff000e, 0x2e8, 0xffff000f, 0x2fc, 0xffff0010, 0x310, 0xffff0011, 0x320, 0x312e7370, 0xa0d342e, 0x6c786574, 0x30722064, 0x3074202c, 0x65740a0d, 0x20646c78, 0x202c3172, 0xa0d3174, 0x63786574, 0x72206472, 0x67722e32, 0x74202c62, 0x79782e32, 0x740a0d77, 0x646c7865, 0x2c337220, 0xd337420, 0x7865740a, 0x7220646c, 0x74202c34, 0x6d0a0d34, 0x72206461, 0x67722e35, 0x72202c62, 0x63202c33, 0x63202c32, 0x2b0a0d31, 0x5f646461, 0x735f3478, 0x72207461, 0x2c612e35, 0x2c317220, 0x32722d20, 0xa0d622e, 0x20646461, 0x722e3272, 0x202c6267, 0x202c3176, 0xa0d3572, 0x20646461, 0x722e3572, 0x202c6267, 0x202c3076, 0xa0d3572, 0x5f6c756d, 0x72203478, 0x67722e35, 0x72202c62, 0x72202c35, 0x6d0a0d30, 0x785f6c75, 0x32722034, 0x6267722e, 0x3272202c, 0x3072202c, 0x612b0a0d, 0x72206464, 0x2c612e35, 0x2c346320, 0xd357220, 0x70726c0a, 0x2e327220, 0x2c626772, 0x2c317220, 0x2c327220, 0xd357220, 0x646e630a, 0x2e357220, 0x2c626772, 0x2e357220, 0x72202c61, 0x72202c35, 0x2b0a0d32, 0x206c756d, 0x612e3572, 0x3072202c, 0x202c612e, 0x612e3076, 0x756d0a0d, 0x32785f6c, 0x2c357220, 0x2c357220, 0xd347220, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x42, 0x800f0000, 0xb0e40000, 0x42, 0x800f0001, 0xb0e40001, 0x40, 0x80070002, 0xb0f40002, 0x42, 0x800f0003, 0xb0e40003, 0x42, 0x800f0004, 0xb0e40004, 0x4, 0x80070005, 0x80e40003, 0xa0e40002, 0xa0e40001, 0x40000002, 0x82180005, 0x80e40001, 0x81aa0002, 0x2, 0x80070002, 0x90e40001, 0x80e40005, 0x2, 0x80070005, 0x90e40000, 0x80e40005, 0x5, 0x82070005, 0x80e40005, 0x80e40000, 0x5, 0x82070002, 0x80e40002, 0x80e40000, 0x40000002, 0x80080005, 0xa0e40004, 0x80e40005, 0x12, 0x80070002, 0x80e40001, 0x80e40002, 0x80e40005, 0x50, 0x80070005, 0x80ff0005, 0x80e40005, 0x80e40002, 0x40000005, 0x80080005, 0x80ff0000, 0x90ff0000, 0x5, 0x810f0005, 0x80e40005, 0x80e40004, 0xffff };
static SRenderState rsshaG3DiffuseTexDetailLM[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3DiffuseTexDetailLM[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3DiffuseTexDetailLM[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3DiffuseTexDetailLM[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3DiffuseTexDetailLM( 15 , dwps11G3DiffuseTexDetailLM,dwps14G3DiffuseTexDetailLM,0,0, rsshaG3DiffuseTexDetailLM, tssshaG3DiffuseTexDetailLM, rsstateG3DiffuseTexDetailLM, tssstateG3DiffuseTexDetailLM );
static DWORD dwps11G3DiffuseTexTerrain[] ={ 0xffff0101, 0x69fffe, 0x47554244, 0x28, 0x16e, 0x80, 0x0, 0x0, 0xb, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1ac, 0xffff0003, 0x1b4, 0xffff0004, 0x1bc, 0xffff0005, 0x1c4, 0xffff0006, 0x1d4, 0xffff0007, 0x1e4, 0xffff0008, 0x1f4, 0xffff0009, 0x204, 0xffff000a, 0x218, 0xffff000b, 0x22c, 0xffff000c, 0x23c, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x63786574, 0x64726f6f, 0xd327420, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3072, 0x202c6267, 0x202c3076, 0xa0d3074, 0x6464612b, 0x5f34785f, 0x20746173, 0x612e3072, 0x3174202c, 0x742d202c, 0xd7a2e32, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3172, 0x202c6267, 0x202c3176, 0xa0d3074, 0x6464612b, 0x2e307220, 0x63202c61, 0x72202c34, 0x6c0a0d30, 0x72207072, 0x67722e31, 0x74202c62, 0x72202c31, 0x72202c31, 0x630a0d30, 0x7220646e, 0x67722e30, 0x72202c62, 0x2c612e30, 0x2c307220, 0xd317220, 0x64612b0a, 0x30722064, 0x202c612e, 0x202c3074, 0x625f3076, 0xa0d3278, 0x5f646461, 0x72203478, 0x2c612e30, 0x2e307220, 0x63202c61, 0xd612e33, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x40, 0xb00f0002, 0x5, 0x82170000, 0x90e40000, 0xb0e40000, 0x40000002, 0x82180000, 0xb0e40001, 0xb1aa0002, 0x5, 0x82170001, 0x90e40001, 0xb0e40000, 0x40000002, 0x80080000, 0xa0e40004, 0x80e40000, 0x12, 0x80070001, 0xb0e40001, 0x80e40001, 0x80e40000, 0x50, 0x80070000, 0x80ff0000, 0x80e40000, 0x80e40001, 0x40000002, 0x80080000, 0xb0e40000, 0x94e40000, 0x2, 0x82080000, 0x80ff0000, 0xa0ff0003, 0xffff };
static SRenderState rsshaG3DiffuseTexTerrain[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3DiffuseTexTerrain[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3DiffuseTexTerrain[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3DiffuseTexTerrain[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3DiffuseTexTerrain( 16 , dwps11G3DiffuseTexTerrain,0,0,0, rsshaG3DiffuseTexTerrain, tssshaG3DiffuseTexTerrain, rsstateG3DiffuseTexTerrain, tssstateG3DiffuseTexTerrain );
static DWORD dwps11G3DiffuseTex2Terrain[] ={ 0xffff0101, 0x73fffe, 0x47554244, 0x28, 0x196, 0x90, 0x0, 0x0, 0xd, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1d4, 0xffff0003, 0x1dc, 0xffff0004, 0x1e4, 0xffff0005, 0x1ec, 0xffff0006, 0x1f4, 0xffff0007, 0x204, 0xffff0008, 0x214, 0xffff0009, 0x224, 0xffff000a, 0x234, 0xffff000b, 0x248, 0xffff000c, 0x25c, 0xffff000d, 0x26c, 0xffff000e, 0x27c, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x63786574, 0x64726f6f, 0xd327420, 0x7865740a, 0xd337420, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3072, 0x202c6267, 0x202c3076, 0xa0d3074, 0x6464612b, 0x5f34785f, 0x20746173, 0x612e3072, 0x3174202c, 0x742d202c, 0xd7a2e32, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3172, 0x202c6267, 0x202c3176, 0xa0d3074, 0x6464612b, 0x2e307220, 0x63202c61, 0x72202c34, 0x6c0a0d30, 0x72207072, 0x67722e31, 0x74202c62, 0x72202c31, 0x72202c31, 0x630a0d30, 0x7220646e, 0x67722e30, 0x72202c62, 0x2c612e30, 0x2c307220, 0xd317220, 0x64612b0a, 0x30722064, 0x202c612e, 0x202c3074, 0x625f3076, 0xa0d3278, 0x5f646461, 0x72203478, 0x2c612e30, 0x2e307220, 0x63202c61, 0xd612e33, 0x6c756d0a, 0x2c307220, 0x2c307220, 0xd337420, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x40, 0xb00f0002, 0x42, 0xb00f0003, 0x5, 0x82170000, 0x90e40000, 0xb0e40000, 0x40000002, 0x82180000, 0xb0e40001, 0xb1aa0002, 0x5, 0x82170001, 0x90e40001, 0xb0e40000, 0x40000002, 0x80080000, 0xa0e40004, 0x80e40000, 0x12, 0x80070001, 0xb0e40001, 0x80e40001, 0x80e40000, 0x50, 0x80070000, 0x80ff0000, 0x80e40000, 0x80e40001, 0x40000002, 0x80080000, 0xb0e40000, 0x94e40000, 0x2, 0x82080000, 0x80ff0000, 0xa0ff0003, 0x5, 0x800f0000, 0x80e40000, 0xb0e40003, 0xffff };
static SRenderState rsshaG3DiffuseTex2Terrain[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3DiffuseTex2Terrain[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3DiffuseTex2Terrain[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3DiffuseTex2Terrain[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3DiffuseTex2Terrain( 17 , dwps11G3DiffuseTex2Terrain,0,0,0, rsshaG3DiffuseTex2Terrain, tssshaG3DiffuseTex2Terrain, rsstateG3DiffuseTex2Terrain, tssstateG3DiffuseTex2Terrain );
static DWORD dwps11G3DiffuseTexSpec[] ={ 0xffff0101, 0x62fffe, 0x47554244, 0x28, 0x151, 0x78, 0x0, 0x0, 0xa, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x190, 0xffff0003, 0x198, 0xffff0004, 0x1a0, 0xffff0005, 0x1a8, 0xffff0006, 0x1b8, 0xffff0007, 0x1c8, 0xffff0008, 0x1d8, 0xffff0009, 0x1e8, 0xffff000a, 0x1fc, 0xffff000b, 0x210, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x63786574, 0x64726f6f, 0xd327420, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3072, 0x202c6267, 0x202c3076, 0xa0d3074, 0x6464612b, 0x5f34785f, 0x20746173, 0x612e3072, 0x3174202c, 0x742d202c, 0xd7a2e32, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3172, 0x202c6267, 0x202c3176, 0xa0d3074, 0x6464612b, 0x2e307220, 0x63202c61, 0x72202c34, 0x6c0a0d30, 0x72207072, 0x67722e31, 0x74202c62, 0x72202c31, 0x72202c31, 0x630a0d30, 0x7220646e, 0x67722e30, 0x72202c62, 0x2c612e30, 0x2c307220, 0xd317220, 0x756d2b0a, 0x3072206c, 0x202c612e, 0x612e3074, 0x3076202c, 0xa0d612e, 0xa0d0a0d, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x40, 0xb00f0002, 0x5, 0x82170000, 0x90e40000, 0xb0e40000, 0x40000002, 0x82180000, 0xb0e40001, 0xb1aa0002, 0x5, 0x82170001, 0x90e40001, 0xb0e40000, 0x40000002, 0x80080000, 0xa0e40004, 0x80e40000, 0x12, 0x80070001, 0xb0e40001, 0x80e40001, 0x80e40000, 0x50, 0x80070000, 0x80ff0000, 0x80e40000, 0x80e40001, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0xffff };
static DWORD dwps14G3DiffuseTexSpec[] ={ 0xffff0104, 0xc7fffe, 0x47554244, 0x28, 0x2e4, 0xe0, 0x0, 0x0, 0x17, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x324, 0xffff0003, 0x330, 0xffff0004, 0x33c, 0xffff0005, 0x34c, 0xffff0006, 0x35c, 0xffff0007, 0x36c, 0xffff0008, 0x380, 0xffff0009, 0x390, 0xffff000a, 0x3a4, 0xffff000b, 0x3b4, 0xffff000c, 0x3b8, 0xffff000d, 0x3c4, 0xffff000e, 0x3d0, 0xffff000f, 0x3dc, 0xffff0010, 0x3ec, 0xffff0011, 0x3fc, 0xffff0012, 0x40c, 0xffff0013, 0x41c, 0xffff0014, 0x42c, 0xffff0015, 0x440, 0xffff0016, 0x454, 0xffff0017, 0x464, 0xffff0018, 0x474, 0x312e7370, 0xa0d342e, 0x6c786574, 0x33722064, 0x3374202c, 0x7a79782e, 0x65740a0d, 0x20646c78, 0x202c3472, 0x782e3474, 0xa0d7a79, 0x206c756d, 0x722e3572, 0x202c6267, 0x612e3472, 0x3472202c, 0xa0d612e, 0x6c756d2b, 0x2e357220, 0x72202c61, 0x2c612e34, 0xd306320, 0x6c756d0a, 0x2e357220, 0x2c626772, 0x2c357220, 0xd357220, 0x616d2b0a, 0x35722064, 0x202c612e, 0x622e3572, 0x3163202c, 0x3572202c, 0xa0d612e, 0x206c756d, 0x722e3572, 0x202c6267, 0x202c3372, 0xa0d3563, 0x64616d2b, 0x2e357220, 0x72202c61, 0x2c622e35, 0x2c326320, 0x2e357220, 0x6d0a0d61, 0x72206c75, 0x67722e33, 0x72202c62, 0x2c612e35, 0xd357220, 0x6168700a, 0xa0d6573, 0x6c786574, 0x30722064, 0x3074202c, 0x7a79782e, 0x65740a0d, 0x20646c78, 0x202c3172, 0x782e3174, 0xa0d7a79, 0x63786574, 0x72206472, 0x67722e32, 0x74202c62, 0x79782e32, 0x6d0a0d77, 0x785f6c75, 0x61735f34, 0x35722074, 0x6267722e, 0x3176202c, 0x3072202c, 0x612b0a0d, 0x785f6464, 0x61735f34, 0x35722074, 0x202c612e, 0x202c3172, 0x2e32722d, 0x610a0d62, 0x72206464, 0x67722e35, 0x72202c62, 0x72202c33, 0x6d0a0d35, 0x785f6c75, 0x61735f34, 0x32722074, 0x6267722e, 0x3076202c, 0x3072202c, 0x612b0a0d, 0x72206464, 0x2c612e35, 0x2c366320, 0xd357220, 0x70726c0a, 0x2e327220, 0x2c626772, 0x2c317220, 0x2c327220, 0xd357220, 0x646e630a, 0x2e307220, 0x2c626772, 0x2e357220, 0x72202c61, 0x72202c32, 0x2b0a0d35, 0x206c756d, 0x612e3072, 0x3072202c, 0x202c612e, 0x612e3076, 0x70640a0d, 0x34785f33, 0x7461735f, 0x2e317220, 0x76202c61, 0x63202c30, 0xd772e35, 0x6c756d0a, 0x2e307220, 0x2c626772, 0x2c307220, 0x2e317220, 0xa0d61, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x42, 0x800f0003, 0xb0a40003, 0x42, 0x800f0004, 0xb0a40004, 0x5, 0x80070005, 0x80ff0004, 0x80ff0004, 0x40000005, 0x80080005, 0x80ff0004, 0xa0e40000, 0x5, 0x80070005, 0x80e40005, 0x80e40005, 0x40000004, 0x80080005, 0x80aa0005, 0xa0e40001, 0x80ff0005, 0x5, 0x80070005, 0x80e40003, 0xa0e40005, 0x40000004, 0x80080005, 0x80aa0005, 0xa0e40002, 0x80ff0005, 0x5, 0x80070003, 0x80ff0005, 0x80e40005, 0xfffd, 0x42, 0x800f0000, 0xb0a40000, 0x42, 0x800f0001, 0xb0a40001, 0x40, 0x80070002, 0xb0f40002, 0x5, 0x82170005, 0x90e40001, 0x80e40000, 0x40000002, 0x82180005, 0x80e40001, 0x81aa0002, 0x2, 0x80070005, 0x80e40003, 0x80e40005, 0x5, 0x82170002, 0x90e40000, 0x80e40000, 0x40000002, 0x80080005, 0xa0e40006, 0x80e40005, 0x12, 0x80070002, 0x80e40001, 0x80e40002, 0x80e40005, 0x50, 0x80070000, 0x80ff0005, 0x80e40002, 0x80e40005, 0x40000005, 0x80080000, 0x80ff0000, 0x90ff0000, 0x8, 0x82180001, 0x90e40000, 0xa0ff0005, 0x5, 0x80070000, 0x80e40000, 0x80ff0001, 0xffff };
static SRenderState rsshaG3DiffuseTexSpec[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3DiffuseTexSpec[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3DiffuseTexSpec[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3DiffuseTexSpec[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3DiffuseTexSpec( 18 , dwps11G3DiffuseTexSpec,dwps14G3DiffuseTexSpec,0,0, rsshaG3DiffuseTexSpec, tssshaG3DiffuseTexSpec, rsstateG3DiffuseTexSpec, tssstateG3DiffuseTexSpec );
static DWORD dwps11G3DiffuseTexSpecLM[] ={ 0xffff0101, 0x62fffe, 0x47554244, 0x28, 0x151, 0x78, 0x0, 0x0, 0xa, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x190, 0xffff0003, 0x198, 0xffff0004, 0x1a0, 0xffff0005, 0x1a8, 0xffff0006, 0x1b8, 0xffff0007, 0x1c8, 0xffff0008, 0x1d8, 0xffff0009, 0x1e8, 0xffff000a, 0x1fc, 0xffff000b, 0x210, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x63786574, 0x64726f6f, 0xd327420, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3072, 0x202c6267, 0x202c3076, 0xa0d3074, 0x6464612b, 0x5f34785f, 0x20746173, 0x612e3072, 0x3174202c, 0x742d202c, 0xd7a2e32, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3172, 0x202c6267, 0x202c3176, 0xa0d3074, 0x6464612b, 0x2e307220, 0x63202c61, 0x72202c34, 0x6c0a0d30, 0x72207072, 0x67722e31, 0x74202c62, 0x72202c31, 0x72202c31, 0x630a0d30, 0x7220646e, 0x67722e30, 0x72202c62, 0x2c612e30, 0x2c307220, 0xd317220, 0x756d2b0a, 0x3072206c, 0x202c612e, 0x612e3074, 0x3076202c, 0xa0d612e, 0xa0d0a0d, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x40, 0xb00f0002, 0x5, 0x82170000, 0x90e40000, 0xb0e40000, 0x40000002, 0x82180000, 0xb0e40001, 0xb1aa0002, 0x5, 0x82170001, 0x90e40001, 0xb0e40000, 0x40000002, 0x80080000, 0xa0e40004, 0x80e40000, 0x12, 0x80070001, 0xb0e40001, 0x80e40001, 0x80e40000, 0x50, 0x80070000, 0x80ff0000, 0x80e40000, 0x80e40001, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0xffff };
static DWORD dwps14G3DiffuseTexSpecLM[] ={ 0xffff0104, 0xd3fffe, 0x47554244, 0x28, 0x315, 0xf0, 0x0, 0x0, 0x19, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x354, 0xffff0003, 0x360, 0xffff0004, 0x36c, 0xffff0005, 0x37c, 0xffff0006, 0x38c, 0xffff0007, 0x39c, 0xffff0008, 0x3b0, 0xffff0009, 0x3c0, 0xffff000a, 0x3d4, 0xffff000b, 0x3e4, 0xffff000c, 0x3e8, 0xffff000d, 0x3f4, 0xffff000e, 0x400, 0xffff000f, 0x40c, 0xffff0010, 0x418, 0xffff0011, 0x42c, 0xffff0012, 0x43c, 0xffff0013, 0x44c, 0xffff0014, 0x45c, 0xffff0015, 0x46c, 0xffff0016, 0x47c, 0xffff0017, 0x48c, 0xffff0018, 0x49c, 0xffff0019, 0x4b0, 0xffff001a, 0x4c4, 0x312e7370, 0xa0d342e, 0x6c786574, 0x33722064, 0x3374202c, 0x7a79782e, 0x65740a0d, 0x20646c78, 0x202c3472, 0x782e3474, 0xa0d7a79, 0x206c756d, 0x722e3572, 0x202c6267, 0x612e3472, 0x3472202c, 0xa0d612e, 0x6c756d2b, 0x2e357220, 0x72202c61, 0x2c612e34, 0xd306320, 0x6c756d0a, 0x2e357220, 0x2c626772, 0x2c357220, 0xd357220, 0x616d2b0a, 0x35722064, 0x202c612e, 0x622e3572, 0x3163202c, 0x3572202c, 0xa0d612e, 0x206c756d, 0x722e3572, 0x202c6267, 0x202c3372, 0xa0d3563, 0x64616d2b, 0x2e357220, 0x72202c61, 0x2c622e35, 0x2c326320, 0x2e357220, 0x6d0a0d61, 0x72206c75, 0x67722e33, 0x72202c62, 0x2c612e35, 0xd357220, 0x6168700a, 0xa0d6573, 0x6c786574, 0x30722064, 0x3074202c, 0x7a79782e, 0x65740a0d, 0x20646c78, 0x202c3172, 0x782e3174, 0xa0d7a79, 0x63786574, 0x72206472, 0x67722e32, 0x74202c62, 0x79782e32, 0x740a0d77, 0x646c7865, 0x2c357220, 0x2e357420, 0xd7a7978, 0x64616d0a, 0x2e357220, 0x2c626772, 0x2c357220, 0x2c336320, 0xd346320, 0x6464610a, 0x2e347220, 0x2c626772, 0x2c307620, 0xd357220, 0x6464610a, 0x2e357220, 0x2c626772, 0x2c317620, 0xd357220, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3572, 0x202c6267, 0x202c3572, 0xa0d3072, 0x6464612b, 0x5f34785f, 0x20746173, 0x612e3572, 0x3172202c, 0x722d202c, 0xd622e32, 0x6464610a, 0x2e357220, 0x2c626772, 0x2c337220, 0xd357220, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3472, 0x202c6267, 0x202c3472, 0xa0d3072, 0x6464612b, 0x2e357220, 0x63202c61, 0x72202c36, 0x6c0a0d35, 0x72207072, 0x67722e34, 0x72202c62, 0x72202c31, 0x72202c34, 0x630a0d35, 0x7220646e, 0x67722e30, 0x72202c62, 0x2c612e35, 0x2c347220, 0xd357220, 0x756d2b0a, 0x3072206c, 0x202c612e, 0x612e3072, 0x3076202c, 0xa0d612e, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0x800f0003, 0xb0a40003, 0x42, 0x800f0004, 0xb0a40004, 0x5, 0x80070005, 0x80ff0004, 0x80ff0004, 0x40000005, 0x80080005, 0x80ff0004, 0xa0e40000, 0x5, 0x80070005, 0x80e40005, 0x80e40005, 0x40000004, 0x80080005, 0x80aa0005, 0xa0e40001, 0x80ff0005, 0x5, 0x80070005, 0x80e40003, 0xa0e40005, 0x40000004, 0x80080005, 0x80aa0005, 0xa0e40002, 0x80ff0005, 0x5, 0x80070003, 0x80ff0005, 0x80e40005, 0xfffd, 0x42, 0x800f0000, 0xb0a40000, 0x42, 0x800f0001, 0xb0a40001, 0x40, 0x80070002, 0xb0f40002, 0x42, 0x800f0005, 0xb0a40005, 0x4, 0x80070005, 0x80e40005, 0xa0e40003, 0xa0e40004, 0x2, 0x80070004, 0x90e40000, 0x80e40005, 0x2, 0x80070005, 0x90e40001, 0x80e40005, 0x5, 0x82170005, 0x80e40005, 0x80e40000, 0x40000002, 0x82180005, 0x80e40001, 0x81aa0002, 0x2, 0x80070005, 0x80e40003, 0x80e40005, 0x5, 0x82170004, 0x80e40004, 0x80e40000, 0x40000002, 0x80080005, 0xa0e40006, 0x80e40005, 0x12, 0x80070004, 0x80e40001, 0x80e40004, 0x80e40005, 0x50, 0x80070000, 0x80ff0005, 0x80e40004, 0x80e40005, 0x40000005, 0x80080000, 0x80ff0000, 0x90ff0000, 0xffff };
static SRenderState rsshaG3DiffuseTexSpecLM[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3DiffuseTexSpecLM[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3DiffuseTexSpecLM[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3DiffuseTexSpecLM[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3DiffuseTexSpecLM( 19 , dwps11G3DiffuseTexSpecLM,dwps14G3DiffuseTexSpecLM,0,0, rsshaG3DiffuseTexSpecLM, tssshaG3DiffuseTexSpecLM, rsstateG3DiffuseTexSpecLM, tssstateG3DiffuseTexSpecLM );
static DWORD dwps11TFactor[] ={ 0xffff0101, 0x1ffffe, 0x47554244, 0x28, 0x45, 0x30, 0x0, 0x0, 0x1, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x84, 0x312e7370, 0xa0d312e, 0x20766f6d, 0x202c3072, 0xa0d3063, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1, 0x800f0000, 0xa0e40000, 0xffff };
static SRenderState rsshaTFactor[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaTFactor[] = { 
{ 0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 0, D3DTSS_COLOROP, D3DTOP_SELECTARG1}, 
{ 0, D3DTSS_COLORARG1, D3DTA_TFACTOR}, 
{ 0, D3DTSS_ALPHAOP, D3DTOP_SELECTARG1}, 
{ 0, D3DTSS_ALPHAARG1, D3DTA_TFACTOR}, 
{ 1, D3DTSS_ALPHAOP, D3DTOP_DISABLE}, 
{ 1, D3DTSS_COLOROP, D3DTOP_DISABLE}, 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateTFactor[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateTFactor[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psTFactor( 20 , dwps11TFactor,0,0,0, rsshaTFactor, tssshaTFactor, rsstateTFactor, tssstateTFactor );
static DWORD dwps11TextureCopyAlpha[] ={ 0xffff0101, 0x23fffe, 0x47554244, 0x28, 0x55, 0x38, 0x0, 0x0, 0x2, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x94, 0xffff0003, 0x9c, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20766f6d, 0x202c3072, 0xa0d3074, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x1, 0x800f0000, 0xb0e40000, 0xffff };
static SRenderState rsshaTextureCopyAlpha[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaTextureCopyAlpha[] = { 
{ 0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 0, D3DTSS_COLOROP, D3DTOP_SELECTARG1}, 
{ 0, D3DTSS_COLORARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_ALPHAOP, D3DTOP_SELECTARG1}, 
{ 0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE}, 
{ 1, D3DTSS_ALPHAOP, D3DTOP_DISABLE}, 
{ 1, D3DTSS_COLOROP, D3DTOP_DISABLE}, 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateTextureCopyAlpha[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateTextureCopyAlpha[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psTextureCopyAlpha( 21 , dwps11TextureCopyAlpha,0,0,0, rsshaTextureCopyAlpha, tssshaTextureCopyAlpha, rsstateTextureCopyAlpha, tssstateTextureCopyAlpha );
static DWORD dwps11TextureAlpha[] ={ 0xffff0101, 0x24fffe, 0x47554244, 0x28, 0x57, 0x38, 0x0, 0x0, 0x2, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x98, 0xffff0003, 0xa0, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20766f6d, 0x202c3072, 0x612e3074, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x42, 0xb00f0000, 0x1, 0x800f0000, 0xb0ff0000, 0xffff };
static SRenderState rsshaTextureAlpha[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaTextureAlpha[] = { 
{ 0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 0, D3DTSS_COLOROP, D3DTOP_SELECTARG1}, 
{ 0, D3DTSS_COLORARG1, D3DTA_TEXTURE|D3DTA_ALPHAREPLICATE}, 
{ 0, D3DTSS_ALPHAOP, D3DTOP_SELECTARG1}, 
{ 0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE}, 
{ 1, D3DTSS_ALPHAOP, D3DTOP_DISABLE}, 
{ 1, D3DTSS_COLOROP, D3DTOP_DISABLE}, 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateTextureAlpha[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateTextureAlpha[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psTextureAlpha( 22 , dwps11TextureAlpha,0,0,0, rsshaTextureAlpha, tssshaTextureAlpha, rsstateTextureAlpha, tssstateTextureAlpha );
static DWORD dwps11TextureTFactor[] ={ 0xffff0101, 0x24fffe, 0x47554244, 0x28, 0x59, 0x38, 0x0, 0x0, 0x2, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x98, 0xffff0003, 0xa0, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x206c756d, 0x202c3072, 0x202c3074, 0xa0d3063, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x5, 0x800f0000, 0xb0e40000, 0xa0e40000, 0xffff };
static SRenderState rsshaTextureTFactor[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaTextureTFactor[] = { 
{ 0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 0, D3DTSS_COLOROP, D3DTOP_MODULATE}, 
{ 0, D3DTSS_COLORARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_COLORARG2, D3DTA_TFACTOR}, 
{ 0, D3DTSS_ALPHAOP, D3DTOP_MODULATE}, 
{ 0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_ALPHAARG2, D3DTA_TFACTOR}, 
{ 1, D3DTSS_ALPHAOP, D3DTOP_DISABLE}, 
{ 1, D3DTSS_COLOROP, D3DTOP_DISABLE}, 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateTextureTFactor[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateTextureTFactor[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psTextureTFactor( 23 , dwps11TextureTFactor,0,0,0, rsshaTextureTFactor, tssshaTextureTFactor, rsstateTextureTFactor, tssstateTextureTFactor );
static DWORD dwps11Clouds[] ={ 0xffff0101, 0x41fffe, 0x47554244, 0x28, 0xcd, 0x40, 0x0, 0x0, 0x3, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x10c, 0xffff0004, 0x114, 0xffff0005, 0x124, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x65742f2f, 0x6f6f6378, 0x74206472, 0x6d0a0d31, 0x72206c75, 0x74202c30, 0x63202c30, 0x6d0a0d30, 0x72206c75, 0x67722e30, 0x72202c62, 0x76202c30, 0x2f0a0d30, 0x6c756d2f, 0x2e317220, 0x2c626772, 0x2c317420, 0x2e307220, 0x2f0a0d61, 0x756d2b2f, 0x3172206c, 0x202c612e, 0x612e3072, 0x3076202c, 0xa0d772e, 0x726c2f2f, 0x30722070, 0x3076202c, 0x202c772e, 0x202c3072, 0xa0d3172, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x5, 0x800f0000, 0xb0e40000, 0xa0e40000, 0x5, 0x80070000, 0x80e40000, 0x90e40000, 0xffff };
static SRenderState rsshaClouds[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaClouds[] = { 
{ 0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 0, D3DTSS_COLOROP, D3DTOP_MODULATE}, 
{ 0, D3DTSS_COLORARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_COLORARG2, D3DTA_TFACTOR}, 
{ 0, D3DTSS_ALPHAOP, D3DTOP_MODULATE}, 
{ 0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_ALPHAARG2, D3DTA_TFACTOR}, 
{ 1, D3DTSS_ALPHAOP, D3DTOP_DISABLE}, 
{ 1, D3DTSS_COLOROP, D3DTOP_DISABLE}, 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateClouds[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateClouds[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psClouds( 24 , dwps11Clouds,0,0,0, rsshaClouds, tssshaClouds, rsstateClouds, tssstateClouds );
static DWORD dwps11DiffuseTexture[] ={ 0xffff0101, 0x24fffe, 0x47554244, 0x28, 0x59, 0x38, 0x0, 0x0, 0x2, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x98, 0xffff0003, 0xa0, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x206c756d, 0x202c3072, 0x202c3074, 0xa0d3076, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x5, 0x800f0000, 0xb0e40000, 0x90e40000, 0xffff };
static SRenderState rsshaDiffuseTexture[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaDiffuseTexture[] = { 
{ 0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 0, D3DTSS_COLOROP, D3DTOP_MODULATE}, 
{ 0, D3DTSS_COLORARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_COLORARG2, D3DTA_DIFFUSE}, 
{ 0, D3DTSS_ALPHAOP, D3DTOP_MODULATE}, 
{ 0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE}, 
{ 1, D3DTSS_ALPHAOP, D3DTOP_DISABLE}, 
{ 1, D3DTSS_COLOROP, D3DTOP_DISABLE}, 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateDiffuseTexture[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateDiffuseTexture[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psDiffuseTexture( 25 , dwps11DiffuseTexture,0,0,0, rsshaDiffuseTexture, tssshaDiffuseTexture, rsstateDiffuseTexture, tssstateDiffuseTexture );
static DWORD dwps11TexturePlusDiffuse[] ={ 0xffff0101, 0x24fffe, 0x47554244, 0x28, 0x59, 0x38, 0x0, 0x0, 0x2, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x98, 0xffff0003, 0xa0, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20646461, 0x202c3072, 0x202c3074, 0xa0d3076, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x2, 0x800f0000, 0xb0e40000, 0x90e40000, 0xffff };
static SRenderState rsshaTexturePlusDiffuse[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaTexturePlusDiffuse[] = { 
{ 0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 0, D3DTSS_COLOROP, D3DTOP_ADD}, 
{ 0, D3DTSS_COLORARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_COLORARG2, D3DTA_DIFFUSE}, 
{ 0, D3DTSS_ALPHAOP, D3DTOP_ADD}, 
{ 0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE}, 
{ 1, D3DTSS_ALPHAOP, D3DTOP_DISABLE}, 
{ 1, D3DTSS_COLOROP, D3DTOP_DISABLE}, 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateTexturePlusDiffuse[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateTexturePlusDiffuse[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psTexturePlusDiffuse( 26 , dwps11TexturePlusDiffuse,0,0,0, rsshaTexturePlusDiffuse, tssshaTexturePlusDiffuse, rsstateTexturePlusDiffuse, tssstateTexturePlusDiffuse );
static DWORD dwps11TnLLitTexture[] ={ 0xffff0101, 0x2dfffe, 0x47554244, 0x28, 0x7b, 0x40, 0x0, 0x0, 0x3, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xbc, 0xffff0003, 0xc4, 0xffff0004, 0xd4, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x5f6c756d, 0x72203478, 0x67722e30, 0x74202c62, 0x76202c30, 0x2b0a0d30, 0x206c756d, 0x612e3072, 0x3074202c, 0x3076202c, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x42, 0xb00f0000, 0x5, 0x82070000, 0xb0e40000, 0x90e40000, 0x40000005, 0x80080000, 0xb0e40000, 0x90e40000, 0xffff };
static SRenderState rsshaTnLLitTexture[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaTnLLitTexture[] = { 
{ 0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 0, D3DTSS_COLOROP, D3DTOP_MODULATE4X}, 
{ 0, D3DTSS_COLORARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_COLORARG2, D3DTA_DIFFUSE}, 
{ 0, D3DTSS_ALPHAOP, D3DTOP_MODULATE}, 
{ 0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE}, 
{ 1, D3DTSS_ALPHAOP, D3DTOP_DISABLE}, 
{ 1, D3DTSS_COLOROP, D3DTOP_DISABLE}, 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateTnLLitTexture[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateTnLLitTexture[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psTnLLitTexture( 27 , dwps11TnLLitTexture,0,0,0, rsshaTnLLitTexture, tssshaTnLLitTexture, rsstateTnLLitTexture, tssstateTnLLitTexture );
static DWORD dwps11TnLLitTexture2[] ={ 0xffff0101, 0x37fffe, 0x47554244, 0x28, 0xa3, 0x50, 0x0, 0x0, 0x5, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xe4, 0xffff0003, 0xec, 0xffff0004, 0xf4, 0xffff0005, 0x104, 0xffff0006, 0x114, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x206c756d, 0x202c3072, 0x202c3074, 0xa0d3076, 0x5f6c756d, 0x72203478, 0x67722e30, 0x72202c62, 0x74202c30, 0x2b0a0d31, 0x206c756d, 0x612e3072, 0x3072202c, 0x3174202c, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x5, 0x800f0000, 0xb0e40000, 0x90e40000, 0x5, 0x82070000, 0x80e40000, 0xb0e40001, 0x40000005, 0x80080000, 0x80e40000, 0xb0e40001, 0xffff };
static SRenderState rsshaTnLLitTexture2[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaTnLLitTexture2[] = { 
{ 0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 0, D3DTSS_COLOROP, D3DTOP_MODULATE}, 
{ 0, D3DTSS_COLORARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_COLORARG2, D3DTA_DIFFUSE}, 
{ 0, D3DTSS_ALPHAOP, D3DTOP_MODULATE}, 
{ 0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE}, 
{ 1, D3DTSS_COLOROP, D3DTOP_MODULATE4X}, 
{ 1, D3DTSS_COLORARG1, D3DTA_CURRENT}, 
{ 1, D3DTSS_COLORARG2, D3DTA_TEXTURE}, 
{ 1, D3DTSS_ALPHAOP, D3DTOP_MODULATE}, 
{ 1, D3DTSS_ALPHAARG1, D3DTA_CURRENT}, 
{ 1, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE}, 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateTnLLitTexture2[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateTnLLitTexture2[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psTnLLitTexture2( 28 , dwps11TnLLitTexture2,0,0,0, rsshaTnLLitTexture2, tssshaTnLLitTexture2, rsstateTnLLitTexture2, tssstateTnLLitTexture2 );
static DWORD dwps11TnLLitTextureTerrain[] ={ 0xffff0101, 0x2dfffe, 0x47554244, 0x28, 0x7b, 0x40, 0x0, 0x0, 0x3, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xbc, 0xffff0003, 0xc4, 0xffff0004, 0xd4, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x5f6c756d, 0x72203478, 0x67722e30, 0x74202c62, 0x76202c30, 0x2b0a0d30, 0x20646461, 0x612e3072, 0x3074202c, 0x3076202c, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x42, 0xb00f0000, 0x5, 0x82070000, 0xb0e40000, 0x90e40000, 0x40000002, 0x80080000, 0xb0e40000, 0x90e40000, 0xffff };
static SRenderState rsshaTnLLitTextureTerrain[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaTnLLitTextureTerrain[] = { 
{ 0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 0, D3DTSS_COLOROP, D3DTOP_MODULATE4X}, 
{ 0, D3DTSS_COLORARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_COLORARG2, D3DTA_DIFFUSE}, 
{ 0, D3DTSS_ALPHAOP, D3DTOP_ADD}, 
{ 0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE}, 
{ 1, D3DTSS_ALPHAOP, D3DTOP_DISABLE}, 
{ 1, D3DTSS_COLOROP, D3DTOP_DISABLE}, 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateTnLLitTextureTerrain[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateTnLLitTextureTerrain[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psTnLLitTextureTerrain( 29 , dwps11TnLLitTextureTerrain,0,0,0, rsshaTnLLitTextureTerrain, tssshaTnLLitTextureTerrain, rsstateTnLLitTextureTerrain, tssstateTnLLitTextureTerrain );
static DWORD dwps11TnLLitTexture2Terrain[] ={ 0xffff0101, 0x37fffe, 0x47554244, 0x28, 0xa3, 0x50, 0x0, 0x0, 0x5, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xe4, 0xffff0003, 0xec, 0xffff0004, 0xf4, 0xffff0005, 0x104, 0xffff0006, 0x114, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x5f6c756d, 0x72203478, 0x67722e30, 0x74202c62, 0x76202c30, 0x2b0a0d30, 0x20646461, 0x612e3072, 0x3074202c, 0x3076202c, 0x756d0a0d, 0x3072206c, 0x3072202c, 0x3174202c, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x5, 0x82070000, 0xb0e40000, 0x90e40000, 0x40000002, 0x80080000, 0xb0e40000, 0x90e40000, 0x5, 0x800f0000, 0x80e40000, 0xb0e40001, 0xffff };
static SRenderState rsshaTnLLitTexture2Terrain[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaTnLLitTexture2Terrain[] = { 
{ 0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 0, D3DTSS_COLOROP, D3DTOP_MODULATE4X}, 
{ 0, D3DTSS_COLORARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_COLORARG2, D3DTA_DIFFUSE}, 
{ 0, D3DTSS_ALPHAOP, D3DTOP_ADD}, 
{ 0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE}, 
{ 1, D3DTSS_COLOROP, D3DTOP_MODULATE}, 
{ 1, D3DTSS_COLORARG1, D3DTA_CURRENT}, 
{ 1, D3DTSS_COLORARG2, D3DTA_TEXTURE}, 
{ 1, D3DTSS_ALPHAOP, D3DTOP_MODULATE}, 
{ 1, D3DTSS_ALPHAARG1, D3DTA_CURRENT}, 
{ 1, D3DTSS_ALPHAARG2, D3DTA_TEXTURE}, 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateTnLLitTexture2Terrain[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateTnLLitTexture2Terrain[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psTnLLitTexture2Terrain( 30 , dwps11TnLLitTexture2Terrain,0,0,0, rsshaTnLLitTexture2Terrain, tssshaTnLLitTexture2Terrain, rsstateTnLLitTexture2Terrain, tssstateTnLLitTexture2Terrain );
static DWORD dwps11SoftShadowTest[] ={ 0xffff0101, 0x3dfffe, 0x47554244, 0x28, 0xbd, 0x50, 0x0, 0x0, 0x5, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xfc, 0xffff0003, 0x104, 0xffff0004, 0x114, 0xffff0005, 0x128, 0xffff0006, 0x138, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x5f646461, 0x20746173, 0x612e3072, 0x3074202c, 0x762d202c, 0x6c0a0d30, 0x72207072, 0x67722e30, 0x74202c62, 0x63202c30, 0x63202c31, 0x2b0a0d32, 0x5f646461, 0x735f3478, 0x72207461, 0x2c612e30, 0x2c307220, 0xd307220, 0x766f6d0a, 0x2032785f, 0x612e3072, 0x2d31202c, 0xa0d3072, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x2, 0x80180000, 0xb0e40000, 0x91e40000, 0x12, 0x80070000, 0xb0e40000, 0xa0e40001, 0xa0e40002, 0x40000002, 0x82180000, 0x80e40000, 0x80e40000, 0x1, 0x81080000, 0x86e40000, 0xffff };
static SRenderState rsshaSoftShadowTest[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaSoftShadowTest[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateSoftShadowTest[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateSoftShadowTest[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psSoftShadowTest( 31 , dwps11SoftShadowTest,0,0,0, rsshaSoftShadowTest, tssshaSoftShadowTest, rsstateSoftShadowTest, tssstateSoftShadowTest );
static DWORD dwps11DepthATTexture[] ={ 0xffff0101, 0x33fffe, 0x47554244, 0x28, 0x96, 0x48, 0x0, 0x0, 0x4, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xd4, 0xffff0003, 0xdc, 0xffff0004, 0xec, 0xffff0005, 0xf8, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20646461, 0x722e3072, 0x202c6267, 0x202c3074, 0x30742d31, 0x6d2b0a0d, 0x7220766f, 0x2c612e30, 0xd307420, 0x646e630a, 0x2e307220, 0x72202c61, 0x2c612e30, 0x2c307620, 0xd306320, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x42, 0xb00f0000, 0x2, 0x80070000, 0xb0e40000, 0xb6e40000, 0x40000001, 0x80080000, 0xb0e40000, 0x50, 0x80080000, 0x80ff0000, 0x90e40000, 0xa0e40000, 0xffff };
static SRenderState rsshaDepthATTexture[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaDepthATTexture[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateDepthATTexture[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAREF, 1}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateDepthATTexture[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psDepthATTexture( 32 , dwps11DepthATTexture,0,0,0, rsshaDepthATTexture, tssshaDepthATTexture, rsstateDepthATTexture, tssstateDepthATTexture );
static DWORD dwps11CloudShadows[] ={ 0xffff0101, 0x2ffffe, 0x47554244, 0x28, 0x86, 0x48, 0x0, 0x0, 0x4, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xc4, 0xffff0003, 0xcc, 0xffff0004, 0xd4, 0xffff0005, 0xe4, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x206c756d, 0x722e3072, 0x202c6267, 0x202c3174, 0xa0d3074, 0x766f6d2b, 0x2e307220, 0x74202c61, 0xd612e30, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x5, 0x80070000, 0xb0e40001, 0xb0e40000, 0x40000001, 0x80080000, 0xb0ff0000, 0xffff };
static SRenderState rsshaCloudShadows[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaCloudShadows[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateCloudShadows[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateCloudShadows[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psCloudShadows( 33 , dwps11CloudShadows,0,0,0, rsshaCloudShadows, tssshaCloudShadows, rsstateCloudShadows, tssstateCloudShadows );
static DWORD dwps11Depth16ATTexture[] ={ 0xffff0101, 0x2ffffe, 0x47554244, 0x28, 0x85, 0x48, 0x0, 0x0, 0x4, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xc4, 0xffff0003, 0xcc, 0xffff0004, 0xd4, 0xffff0005, 0xe0, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x20766f6d, 0x612e3072, 0x3174202c, 0x6e630a0d, 0x30722064, 0x3072202c, 0x202c612e, 0x202c3074, 0xa0d3063, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x1, 0x80080000, 0xb0e40001, 0x50, 0x800f0000, 0x80ff0000, 0xb0e40000, 0xa0e40000, 0xffff };
static SRenderState rsshaDepth16ATTexture[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaDepth16ATTexture[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateDepth16ATTexture[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAREF, 1}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateDepth16ATTexture[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psDepth16ATTexture( 34 , dwps11Depth16ATTexture,0,0,0, rsshaDepth16ATTexture, tssshaDepth16ATTexture, rsstateDepth16ATTexture, tssstateDepth16ATTexture );
static DWORD dwps11Constant[] ={ 0xffff0101, 0x24fffe, 0x47554244, 0x28, 0x59, 0x38, 0x0, 0x0, 0x2, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x98, 0xffff0003, 0xa0, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x206c756d, 0x202c3072, 0x202c3074, 0xa0d3063, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x5, 0x800f0000, 0xb0e40000, 0xa0e40000, 0xffff };
static SRenderState rsshaConstant[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaConstant[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateConstant[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAREF, 120}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateConstant[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psConstant( 35 , dwps11Constant,0,0,0, rsshaConstant, tssshaConstant, rsstateConstant, tssstateConstant );
static DWORD dwps11Diffuse[] ={ 0xffff0101, 0x1ffffe, 0x47554244, 0x28, 0x45, 0x30, 0x0, 0x0, 0x1, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x84, 0x312e7370, 0xa0d312e, 0x20766f6d, 0x202c3072, 0xa0d3076, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x1, 0x800f0000, 0x90e40000, 0xffff };
static SRenderState rsshaDiffuse[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaDiffuse[] = { 
{ 0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 0, D3DTSS_COLOROP, D3DTOP_SELECTARG1}, 
{ 0, D3DTSS_COLORARG1, D3DTA_DIFFUSE}, 
{ 0, D3DTSS_ALPHAOP, D3DTOP_SELECTARG1}, 
{ 0, D3DTSS_ALPHAARG1, D3DTA_DIFFUSE}, 
{ 1, D3DTSS_ALPHAOP, D3DTOP_DISABLE}, 
{ 1, D3DTSS_COLOROP, D3DTOP_DISABLE}, 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateDiffuse[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateDiffuse[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psDiffuse( 36 , dwps11Diffuse,0,0,0, rsshaDiffuse, tssshaDiffuse, rsstateDiffuse, tssstateDiffuse );
static DWORD dwps11DiffuseAlpha[] ={ 0xffff0101, 0x20fffe, 0x47554244, 0x28, 0x47, 0x30, 0x0, 0x0, 0x1, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x88, 0x312e7370, 0xa0d312e, 0x20766f6d, 0x202c3072, 0x612e3076, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x1, 0x800f0000, 0x90ff0000, 0xffff };
static SRenderState rsshaDiffuseAlpha[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaDiffuseAlpha[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateDiffuseAlpha[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateDiffuseAlpha[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psDiffuseAlpha( 37 , dwps11DiffuseAlpha,0,0,0, rsshaDiffuseAlpha, tssshaDiffuseAlpha, rsstateDiffuseAlpha, tssstateDiffuseAlpha );
static DWORD dwps11TransparentDifTex4[] ={ 0xffff0101, 0x2efffe, 0x47554244, 0x28, 0x7f, 0x40, 0x0, 0x0, 0x3, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xc0, 0xffff0003, 0xc8, 0xffff0004, 0xd8, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x5f6c756d, 0x72203478, 0x67722e30, 0x74202c62, 0x76202c30, 0x2b0a0d30, 0x206c756d, 0x612e3072, 0x3074202c, 0x202c612e, 0x612e3076, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x42, 0xb00f0000, 0x5, 0x82070000, 0xb0e40000, 0x90e40000, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0xffff };
static SRenderState rsshaTransparentDifTex4[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaTransparentDifTex4[] = { 
{ 0, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 1, D3DTSS_TEXTURETRANSFORMFLAGS, D3DTTFF_DISABLE}, 
{ 0, D3DTSS_COLOROP, D3DTOP_MODULATE4X}, 
{ 0, D3DTSS_COLORARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_COLORARG2, D3DTA_DIFFUSE}, 
{ 0, D3DTSS_ALPHAOP, D3DTOP_MODULATE}, 
{ 0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE}, 
{ 0, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE}, 
{ 1, D3DTSS_COLOROP, D3DTOP_DISABLE}, 
{ 1, D3DTSS_ALPHAOP, D3DTOP_DISABLE}, 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateTransparentDifTex4[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateTransparentDifTex4[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psTransparentDifTex4( 38 , dwps11TransparentDifTex4,0,0,0, rsshaTransparentDifTex4, tssshaTransparentDifTex4, rsstateTransparentDifTex4, tssstateTransparentDifTex4 );
static DWORD dwps11G3Particles[] ={ 0xffff0101, 0x4ffffe, 0x47554244, 0x28, 0x106, 0x68, 0x0, 0x0, 0x8, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x144, 0xffff0003, 0x14c, 0xffff0004, 0x154, 0xffff0005, 0x164, 0xffff0006, 0x174, 0xffff0007, 0x184, 0xffff0008, 0x194, 0xffff0009, 0x1a4, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x206c756d, 0x722e3072, 0x202c6267, 0x202c3074, 0xa0d3076, 0x6c756d2b, 0x2e307220, 0x74202c61, 0x2c612e30, 0x2e307620, 0x6d0a0d61, 0x785f6c75, 0x30722034, 0x6267722e, 0x3072202c, 0x3174202c, 0x756d0a0d, 0x3172206c, 0x6267722e, 0x3176202c, 0x3072202c, 0xa0d612e, 0x6c756d2b, 0x2e317220, 0x72202c61, 0x2c612e30, 0x2e317620, 0x6c0a0d77, 0x72207072, 0x76202c30, 0x2c772e31, 0x2c307220, 0xd317220, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x5, 0x80070000, 0xb0e40000, 0x90e40000, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0x5, 0x82070000, 0x80e40000, 0xb0e40001, 0x5, 0x80070001, 0x90e40001, 0x80ff0000, 0x40000005, 0x80080001, 0x80ff0000, 0x90ff0001, 0x12, 0x800f0000, 0x90ff0001, 0x80e40000, 0x80e40001, 0xffff };
static SRenderState rsshaG3Particles[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3Particles[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3Particles[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3Particles[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3Particles( 39 , dwps11G3Particles,0,0,0, rsshaG3Particles, tssshaG3Particles, rsstateG3Particles, tssstateG3Particles );
static DWORD dwps11G3SimpleParticles[] ={ 0xffff0101, 0x44fffe, 0x47554244, 0x28, 0xd7, 0x58, 0x0, 0x0, 0x6, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x118, 0xffff0003, 0x120, 0xffff0004, 0x130, 0xffff0005, 0x140, 0xffff0006, 0x150, 0xffff0007, 0x160, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x206c756d, 0x722e3072, 0x202c6267, 0x202c3074, 0xa0d3076, 0x6c756d2b, 0x2e307220, 0x74202c61, 0x2c612e30, 0x2e307620, 0x6d0a0d61, 0x72206c75, 0x67722e31, 0x76202c62, 0x72202c31, 0xd612e30, 0x756d2b0a, 0x3172206c, 0x202c612e, 0x612e3072, 0x3176202c, 0xa0d772e, 0x2070726c, 0x202c3072, 0x772e3176, 0x3072202c, 0x3172202c, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x42, 0xb00f0000, 0x5, 0x80070000, 0xb0e40000, 0x90e40000, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0x5, 0x80070001, 0x90e40001, 0x80ff0000, 0x40000005, 0x80080001, 0x80ff0000, 0x90ff0001, 0x12, 0x800f0000, 0x90ff0001, 0x80e40000, 0x80e40001, 0xffff };
static SRenderState rsshaG3SimpleParticles[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3SimpleParticles[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3SimpleParticles[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3SimpleParticles[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3SimpleParticles( 40 , dwps11G3SimpleParticles,0,0,0, rsshaG3SimpleParticles, tssshaG3SimpleParticles, rsstateG3SimpleParticles, tssstateG3SimpleParticles );
static DWORD dwps11GlossedMirror[] ={ 0xffff0101, 0x36fffe, 0x47554244, 0x28, 0xa0, 0x50, 0x0, 0x0, 0x5, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xe0, 0xffff0003, 0xe8, 0xffff0004, 0xf0, 0xffff0005, 0xfc, 0xffff0006, 0x10c, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x20766f6d, 0x722e3072, 0x202c6267, 0xa0d3074, 0x6c756d2b, 0x2e307220, 0x76202c61, 0x2c612e30, 0x2e307420, 0x6d0a0d61, 0x72206c75, 0x72202c30, 0x74202c30, 0xa0d31, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x1, 0x80070000, 0xb0e40000, 0x40000005, 0x80080000, 0x90ff0000, 0xb0ff0000, 0x5, 0x800f0000, 0x80e40000, 0xb0e40001, 0xffff };
static SRenderState rsshaGlossedMirror[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaGlossedMirror[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateGlossedMirror[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateGlossedMirror[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psGlossedMirror( 41 , dwps11GlossedMirror,0,0,0, rsshaGlossedMirror, tssshaGlossedMirror, rsstateGlossedMirror, tssstateGlossedMirror );
static DWORD dwps11Blend2TexColor[] ={ 0xffff0101, 0x55fffe, 0x47554244, 0x28, 0x11d, 0x68, 0x0, 0x0, 0x8, 0x28, 0x0, 0x0, 0x0, 0xffff0003, 0x15c, 0xffff0004, 0x164, 0xffff0005, 0x16c, 0xffff0006, 0x174, 0xffff0007, 0x184, 0xffff0008, 0x194, 0xffff0009, 0x1a8, 0xffff000a, 0x1b8, 0x312e7370, 0xa0d312e, 0x65740a0d, 0x30742078, 0x65740a0d, 0x31742078, 0x65740a0d, 0x6f6f6378, 0x74206472, 0x6d0a0d32, 0x72206c75, 0x67722e31, 0x74202c62, 0x76202c30, 0x2b0a0d30, 0x206c756d, 0x612e3172, 0x3076202c, 0x202c612e, 0x612e3174, 0x726c0a0d, 0x30722070, 0x6267722e, 0x3172202c, 0x202c612e, 0x202c3174, 0xa0d3172, 0x206c756d, 0x722e3072, 0x202c6267, 0x202c3072, 0xa0d3176, 0x6c756d2b, 0x2e307220, 0x74202c61, 0x2c7a2e32, 0x2e307420, 0x2f0a0d61, 0x756d2b2f, 0x3072206c, 0x202c612e, 0x612e3176, 0x3074202c, 0xa0d612e, 0xa0d0a0d, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x40, 0xb00f0002, 0x5, 0x80070001, 0xb0e40000, 0x90e40000, 0x40000005, 0x80080001, 0x90ff0000, 0xb0ff0001, 0x12, 0x80070000, 0x80ff0001, 0xb0e40001, 0x80e40001, 0x5, 0x80070000, 0x80e40000, 0x90e40001, 0x40000005, 0x80080000, 0xb0aa0002, 0xb0ff0000, 0xffff };
static SRenderState rsshaBlend2TexColor[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaBlend2TexColor[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateBlend2TexColor[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateBlend2TexColor[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psBlend2TexColor( 42 , dwps11Blend2TexColor,0,0,0, rsshaBlend2TexColor, tssshaBlend2TexColor, rsstateBlend2TexColor, tssstateBlend2TexColor );
static DWORD dwps11ReflectionWaterCube[] ={ 0xffff0101, 0x4cfffe, 0x47554244, 0x28, 0xf9, 0x58, 0x0, 0x0, 0x6, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x138, 0xffff0003, 0x140, 0xffff0004, 0x14c, 0xffff0005, 0x158, 0xffff0006, 0x164, 0xffff0007, 0x170, 0x20202020, 0x315f7370, 0xa0d315f, 0x20202020, 0x20786574, 0xa0d3074, 0x20202020, 0x6d786574, 0x70337833, 0x74206461, 0x74202c31, 0x78625f30, 0x200a0d32, 0x74202020, 0x336d7865, 0x61703378, 0x32742064, 0x3074202c, 0x3278625f, 0x20200a0d, 0x65742020, 0x78336d78, 0x70737633, 0x74206365, 0x74202c33, 0x78625f30, 0x200a0d32, 0x6d202020, 0x7220766f, 0x67722e30, 0x74202c62, 0x200a0d33, 0x2b202020, 0x206c756d, 0x612e3072, 0x3076202c, 0x202c612e, 0x612e3374, 0xa0d0a0d, 0xa0d0a0d, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x49, 0xb00f0001, 0xb4e40000, 0x49, 0xb00f0002, 0xb4e40000, 0x4d, 0xb00f0003, 0xb4e40000, 0x1, 0x80070000, 0xb0e40003, 0x40000005, 0x80080000, 0x90ff0000, 0xb0ff0003, 0xffff };
static SRenderState rsshaReflectionWaterCube[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaReflectionWaterCube[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateReflectionWaterCube[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateReflectionWaterCube[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psReflectionWaterCube( 43 , dwps11ReflectionWaterCube,0,0,0, rsshaReflectionWaterCube, tssshaReflectionWaterCube, rsstateReflectionWaterCube, tssstateReflectionWaterCube );
static DWORD dwps11ReflectionWater[] ={ 0xffff0101, 0x69fffe, 0x47554244, 0x28, 0x16c, 0x58, 0x0, 0x0, 0x6, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x1ac, 0xffff0003, 0x1b4, 0xffff0004, 0x1c0, 0xffff0005, 0x1cc, 0xffff0007, 0x1d4, 0xffff0008, 0x1e8, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x6d786574, 0x70327833, 0x74206461, 0x74202c31, 0x78625f30, 0x740a0d32, 0x336d7865, 0x65743278, 0x32742078, 0x3074202c, 0x3278625f, 0xa0d2020, 0x20786574, 0xa0d3374, 0x65742f2f, 0x31742078, 0x726c0a0d, 0x30722070, 0x6267722e, 0x3374202c, 0x202c612e, 0x202c3274, 0xa0d3374, 0x766f6d2b, 0x2e307220, 0x76202c61, 0xd612e30, 0xd0a0d0a, 0x5b2f2f0a, 0x34315350, 0x2f0a0d5d, 0x2e73702f, 0xd342e31, 0x742f2f0a, 0x646c7865, 0x2c307220, 0xd307420, 0x742f2f0a, 0x646c7865, 0x2c317220, 0x5f317420, 0x782e7764, 0xa0d7779, 0x2f2f0a0d, 0x2070726c, 0x722e3072, 0x202c6267, 0x612e3176, 0x3172202c, 0x3072202c, 0x2f2f0a0d, 0x70726c2b, 0x2e307220, 0x76202c61, 0x2c612e31, 0x2e317620, 0x72202c61, 0xd612e30, 0x6d2f2f0a, 0x72206c75, 0x2c612e30, 0x2e307620, 0x72202c61, 0xd612e30, 0xa0d0a, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x42, 0xb00f0000, 0x47, 0xb00f0001, 0xb4e40000, 0x48, 0xb00f0002, 0xb4e40000, 0x42, 0xb00f0003, 0x12, 0x80070000, 0xb0ff0003, 0xb0e40002, 0xb0e40003, 0x40000001, 0x80080000, 0x90ff0000, 0xffff };
static SRenderState rsshaReflectionWater[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaReflectionWater[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateReflectionWater[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateReflectionWater[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psReflectionWater( 44 , dwps11ReflectionWater,0,0,0, rsshaReflectionWater, tssshaReflectionWater, rsstateReflectionWater, tssstateReflectionWater );
static DWORD dwps11G3AnimWater[] ={ 0xffff0101, 0x55fffe, 0x47554244, 0x28, 0x11d, 0x70, 0x0, 0x0, 0x9, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x15c, 0xffff0003, 0x164, 0xffff0004, 0x16c, 0xffff0005, 0x174, 0xffff0006, 0x17c, 0xffff0007, 0x18c, 0xffff0008, 0x19c, 0xffff0009, 0x1ac, 0xffff000a, 0x1c0, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x63786574, 0x64726f6f, 0xd327420, 0x7865740a, 0x726f6f63, 0x33742064, 0x756d0a0d, 0x34785f6c, 0x7461735f, 0x2e307220, 0x2c626772, 0x2c307620, 0xd307420, 0x64612b0a, 0x30722064, 0x202c612e, 0x202c3463, 0x2e32742d, 0x6d0a0d7a, 0x72206c75, 0x2c612e31, 0x2e317420, 0x74202c61, 0xd7a2e33, 0x70726c0a, 0x2e307220, 0x2c626772, 0x2e317220, 0x74202c61, 0x72202c31, 0x2b0a0d30, 0x206c756d, 0x612e3072, 0x3074202c, 0x202c612e, 0x612e3076, 0xa0d0a0d, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x40, 0xb00f0002, 0x40, 0xb00f0003, 0x5, 0x82170000, 0x90e40000, 0xb0e40000, 0x40000002, 0x80080000, 0xa0e40004, 0xb1aa0002, 0x5, 0x80080001, 0xb0ff0001, 0xb0aa0003, 0x12, 0x80070000, 0x80ff0001, 0xb0e40001, 0x80e40000, 0x40000005, 0x80080000, 0xb0ff0000, 0x90ff0000, 0xffff };
static SRenderState rsshaG3AnimWater[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3AnimWater[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3AnimWater[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3AnimWater[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3AnimWater( 45 , dwps11G3AnimWater,0,0,0, rsshaG3AnimWater, tssshaG3AnimWater, rsstateG3AnimWater, tssstateG3AnimWater );
static DWORD dwps11G3AnimWaterWithoutHorse[] ={ 0xffff0101, 0x3ffffe, 0x47554244, 0x28, 0xc5, 0x58, 0x0, 0x0, 0x6, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x104, 0xffff0003, 0x10c, 0xffff0004, 0x114, 0xffff0005, 0x11c, 0xffff0006, 0x12c, 0xffff0007, 0x13c, 0x312e7370, 0xa0d312e, 0x20786574, 0xa0d3074, 0x20786574, 0xa0d3174, 0x63786574, 0x64726f6f, 0xd327420, 0x6c756d0a, 0x5f34785f, 0x20746173, 0x722e3072, 0x202c6267, 0x202c3176, 0xa0d3074, 0x6464612b, 0x2e307220, 0x63202c61, 0x2d202c34, 0x7a2e3274, 0x756d0a0d, 0x3072206c, 0x202c612e, 0x612e3074, 0x3076202c, 0xa0d612e, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x40, 0xb00f0002, 0x5, 0x82170000, 0x90e40001, 0xb0e40000, 0x40000002, 0x80080000, 0xa0e40004, 0xb1aa0002, 0x5, 0x80080000, 0xb0ff0000, 0x90ff0000, 0xffff };
static SRenderState rsshaG3AnimWaterWithoutHorse[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG3AnimWaterWithoutHorse[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG3AnimWaterWithoutHorse[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG3AnimWaterWithoutHorse[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG3AnimWaterWithoutHorse( 46 , dwps11G3AnimWaterWithoutHorse,0,0,0, rsshaG3AnimWaterWithoutHorse, tssshaG3AnimWaterWithoutHorse, rsstateG3AnimWaterWithoutHorse, tssstateG3AnimWaterWithoutHorse );
static DWORD dwps11CLSkyLight3[] ={ 0xffff0200, 0xe2fffe, 0x47554244, 0x28, 0x351, 0x110, 0x0, 0x0, 0x1d, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x390, 0xffff0003, 0x39c, 0xffff0004, 0x3a8, 0xffff0005, 0x3b4, 0xffff0006, 0x3c0, 0xffff0007, 0x3cc, 0xffff0008, 0x3d8, 0xffff0009, 0x3e4, 0xffff000a, 0x3f0, 0xffff000c, 0x3fc, 0xffff000d, 0x40c, 0xffff000e, 0x41c, 0xffff000f, 0x42c, 0xffff0010, 0x43c, 0xffff0011, 0x44c, 0xffff0012, 0x45c, 0xffff0013, 0x470, 0xffff0014, 0x484, 0xffff0016, 0x498, 0xffff0017, 0x4a8, 0xffff0018, 0x4bc, 0xffff0019, 0x4cc, 0xffff001a, 0x4dc, 0xffff001c, 0x4ec, 0xffff001d, 0x500, 0xffff001e, 0x510, 0xffff001f, 0x520, 0xffff0020, 0x534, 0xffff0021, 0x540, 0x322e7370, 0xa0d302e, 0x5f6c6364, 0x73206432, 0x640a0d30, 0x325f6c63, 0x31732064, 0x63640a0d, 0x75635f6c, 0x73206562, 0x640a0d32, 0x74206c63, 0x79782e30, 0x63640a0d, 0x3174206c, 0xd79782e, 0x6c63640a, 0x2e327420, 0xa0d7978, 0x206c6364, 0xa0d3374, 0x206c6364, 0xa0d3474, 0x206c6364, 0xa0d3076, 0x2020203b, 0x70656420, 0x63206874, 0x6b636568, 0x65740a0d, 0x20646c78, 0x202c3072, 0x202c3074, 0xa0d3073, 0x6c786574, 0x31722064, 0x3174202c, 0x3073202c, 0x65740a0d, 0x20646c78, 0x202c3272, 0x202c3274, 0xa0d3073, 0x5f646461, 0x20746173, 0x722e3072, 0x202c6267, 0x202c3072, 0xd30762d, 0x6464610a, 0x7461735f, 0x2e317220, 0x2c626772, 0x2c317220, 0x30762d20, 0x64610a0d, 0x61735f64, 0x32722074, 0x6267722e, 0x3272202c, 0x762d202c, 0x6d0a0d30, 0x72206461, 0x67722e30, 0x72202c62, 0x63202c30, 0x63202c30, 0xd612e30, 0x64616d0a, 0x2e307220, 0x2c626772, 0x2c317220, 0x2c316320, 0xd307220, 0x64616d0a, 0x2e307220, 0x2c626772, 0x2c327220, 0x2c326320, 0xd307220, 0x20203b0a, 0x6c616320, 0x696c2063, 0xd746867, 0x7865740a, 0x7220646c, 0x74202c34, 0x73202c34, 0x6d0a0d32, 0x72206461, 0x72202c34, 0x63202c34, 0x2c782e39, 0x2e396320, 0x640a0d79, 0x735f3370, 0x72207461, 0x2c722e33, 0x2c347220, 0xd366320, 0x3370640a, 0x7461735f, 0x2e337220, 0x72202c67, 0x63202c34, 0x640a0d37, 0x735f3370, 0x72207461, 0x2c622e33, 0x2c347220, 0xd386320, 0x20203b0a, 0x64646120, 0x206f7420, 0x76657270, 0x6d630a0d, 0x30722070, 0x6267722e, 0x3072202c, 0x3363202c, 0x3372202c, 0x70640a0d, 0x30722033, 0x6267722e, 0x3072202c, 0x3463202c, 0x65740a0d, 0x70646c78, 0x2c317220, 0x2c337420, 0xd317320, 0x64616d0a, 0x2e307220, 0x2c626772, 0x2c307220, 0x2c356320, 0xd317220, 0x766f6d0a, 0x2e307220, 0x63202c61, 0x6d0a0d34, 0x6f20766f, 0x202c3043, 0xa0d3072, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x200001f, 0x98000000, 0xa00f0802, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x80000000, 0xb0030002, 0x200001f, 0x80000000, 0xb00f0003, 0x200001f, 0x80000000, 0xb00f0004, 0x200001f, 0x80000000, 0x900f0000, 0x3000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 0x3000042, 0x800f0001, 0xb0e40001, 0xa0e40800, 0x3000042, 0x800f0002, 0xb0e40002, 0xa0e40800, 0x3000002, 0x80170000, 0x80e40000, 0x91e40000, 0x3000002, 0x80170001, 0x80e40001, 0x91e40000, 0x3000002, 0x80170002, 0x80e40002, 0x91e40000, 0x4000004, 0x80070000, 0x80e40000, 0xa0e40000, 0xa0ff0000, 0x4000004, 0x80070000, 0x80e40001, 0xa0e40001, 0x80e40000, 0x4000004, 0x80070000, 0x80e40002, 0xa0e40002, 0x80e40000, 0x3000042, 0x800f0004, 0xb0e40004, 0xa0e40802, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000009, 0xa0550009, 0x3000008, 0x80110003, 0x80e40004, 0xa0e40006, 0x3000008, 0x80120003, 0x80e40004, 0xa0e40007, 0x3000008, 0x80140003, 0x80e40004, 0xa0e40008, 0x4000058, 0x80070000, 0x80e40000, 0xa0e40003, 0x80e40003, 0x3000008, 0x80070000, 0x80e40000, 0xa0e40004, 0x3010042, 0x800f0001, 0xb0e40003, 0xa0e40801, 0x4000004, 0x80070000, 0x80e40000, 0xa0e40005, 0x80e40001, 0x2000001, 0x80080000, 0xa0e40004, 0x2000001, 0x800f0800, 0x80e40000, 0xffff };
static SRenderState rsshaCLSkyLight3[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaCLSkyLight3[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateCLSkyLight3[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateCLSkyLight3[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psCLSkyLight3( 47 , dwps11CLSkyLight3,0,0,0, rsshaCLSkyLight3, tssshaCLSkyLight3, rsstateCLSkyLight3, tssstateCLSkyLight3 );
static DWORD dwps11CLSkyLight3Translucent[] ={ 0xffff0200, 0x111fffe, 0x47554244, 0x28, 0x40b, 0x140, 0x0, 0x0, 0x23, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x44c, 0xffff0003, 0x458, 0xffff0004, 0x464, 0xffff0005, 0x470, 0xffff0006, 0x47c, 0xffff0007, 0x488, 0xffff0008, 0x494, 0xffff0009, 0x4a0, 0xffff000a, 0x4ac, 0xffff000c, 0x4b8, 0xffff000d, 0x4c8, 0xffff000e, 0x4d8, 0xffff000f, 0x4e8, 0xffff0010, 0x4f8, 0xffff0011, 0x508, 0xffff0012, 0x518, 0xffff0013, 0x52c, 0xffff0014, 0x540, 0xffff0016, 0x554, 0xffff0017, 0x564, 0xffff0018, 0x578, 0xffff0019, 0x588, 0xffff001a, 0x598, 0xffff001b, 0x5a8, 0xffff001c, 0x5b8, 0xffff001d, 0x5c8, 0xffff001f, 0x5d8, 0xffff0020, 0x5ec, 0xffff0021, 0x600, 0xffff0022, 0x610, 0xffff0023, 0x620, 0xffff0024, 0x634, 0xffff0025, 0x644, 0xffff0026, 0x658, 0xffff0027, 0x664, 0x322e7370, 0xa0d302e, 0x5f6c6364, 0x73206432, 0x640a0d30, 0x325f6c63, 0x31732064, 0x63640a0d, 0x75635f6c, 0x73206562, 0x640a0d32, 0x74206c63, 0x79782e30, 0x63640a0d, 0x3174206c, 0xd79782e, 0x6c63640a, 0x2e327420, 0xa0d7978, 0x206c6364, 0xa0d3374, 0x206c6364, 0xa0d3474, 0x206c6364, 0xa0d3076, 0x2020203b, 0x70656420, 0x63206874, 0x6b636568, 0x65740a0d, 0x20646c78, 0x202c3072, 0x202c3074, 0xa0d3073, 0x6c786574, 0x31722064, 0x3174202c, 0x3073202c, 0x65740a0d, 0x20646c78, 0x202c3272, 0x202c3274, 0xa0d3073, 0x5f646461, 0x20746173, 0x722e3072, 0x202c6267, 0x202c3072, 0xd30762d, 0x6464610a, 0x7461735f, 0x2e317220, 0x2c626772, 0x2c317220, 0x30762d20, 0x64610a0d, 0x61735f64, 0x32722074, 0x6267722e, 0x3272202c, 0x762d202c, 0x6d0a0d30, 0x72206461, 0x67722e30, 0x72202c62, 0x63202c30, 0x63202c30, 0xd612e30, 0x64616d0a, 0x2e307220, 0x2c626772, 0x2c317220, 0x2c316320, 0xd307220, 0x64616d0a, 0x2e307220, 0x2c626772, 0x2c327220, 0x2c326320, 0xd307220, 0x20203b0a, 0x6c616320, 0x696c2063, 0xd746867, 0x7865740a, 0x7220646c, 0x74202c34, 0x73202c34, 0x6d0a0d32, 0x72206461, 0x72202c34, 0x63202c34, 0x2c782e39, 0x2e396320, 0x640a0d79, 0x735f3370, 0x72207461, 0x2c722e33, 0x2c347220, 0xd366320, 0x3370640a, 0x7461735f, 0x2e337220, 0x72202c67, 0x63202c34, 0x640a0d37, 0x735f3370, 0x72207461, 0x2c622e33, 0x2c347220, 0xd386320, 0x3370640a, 0x7461735f, 0x2e357220, 0x2d202c72, 0x202c3472, 0xa0d3663, 0x5f337064, 0x20746173, 0x672e3572, 0x722d202c, 0x63202c34, 0x640a0d37, 0x735f3370, 0x72207461, 0x2c622e35, 0x34722d20, 0x3863202c, 0x203b0a0d, 0x64612020, 0x6f742064, 0x65727020, 0x630a0d76, 0x7220706d, 0x67722e35, 0x72202c62, 0x63202c30, 0x72202c33, 0x630a0d35, 0x7220706d, 0x67722e30, 0x72202c62, 0x63202c30, 0x72202c33, 0x640a0d33, 0x72203370, 0x67722e30, 0x72202c62, 0x63202c30, 0x640a0d34, 0x72203370, 0x67722e35, 0x72202c62, 0x63202c35, 0x6d0a0d34, 0x72206461, 0x67722e30, 0x72202c62, 0x63202c35, 0x202c3031, 0xa0d3072, 0x6c786574, 0x72207064, 0x74202c31, 0x73202c33, 0x6d0a0d31, 0x72206461, 0x67722e30, 0x72202c62, 0x63202c30, 0x72202c35, 0x6d0a0d31, 0x7220766f, 0x2c612e30, 0xd346320, 0x766f6d0a, 0x30436f20, 0x3072202c, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x200001f, 0x98000000, 0xa00f0802, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x80000000, 0xb0030002, 0x200001f, 0x80000000, 0xb00f0003, 0x200001f, 0x80000000, 0xb00f0004, 0x200001f, 0x80000000, 0x900f0000, 0x3000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 0x3000042, 0x800f0001, 0xb0e40001, 0xa0e40800, 0x3000042, 0x800f0002, 0xb0e40002, 0xa0e40800, 0x3000002, 0x80170000, 0x80e40000, 0x91e40000, 0x3000002, 0x80170001, 0x80e40001, 0x91e40000, 0x3000002, 0x80170002, 0x80e40002, 0x91e40000, 0x4000004, 0x80070000, 0x80e40000, 0xa0e40000, 0xa0ff0000, 0x4000004, 0x80070000, 0x80e40001, 0xa0e40001, 0x80e40000, 0x4000004, 0x80070000, 0x80e40002, 0xa0e40002, 0x80e40000, 0x3000042, 0x800f0004, 0xb0e40004, 0xa0e40802, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000009, 0xa0550009, 0x3000008, 0x80110003, 0x80e40004, 0xa0e40006, 0x3000008, 0x80120003, 0x80e40004, 0xa0e40007, 0x3000008, 0x80140003, 0x80e40004, 0xa0e40008, 0x3000008, 0x80110005, 0x81e40004, 0xa0e40006, 0x3000008, 0x80120005, 0x81e40004, 0xa0e40007, 0x3000008, 0x80140005, 0x81e40004, 0xa0e40008, 0x4000058, 0x80070005, 0x80e40000, 0xa0e40003, 0x80e40005, 0x4000058, 0x80070000, 0x80e40000, 0xa0e40003, 0x80e40003, 0x3000008, 0x80070000, 0x80e40000, 0xa0e40004, 0x3000008, 0x80070005, 0x80e40005, 0xa0e40004, 0x4000004, 0x80070000, 0x80e40005, 0xa0e4000a, 0x80e40000, 0x3010042, 0x800f0001, 0xb0e40003, 0xa0e40801, 0x4000004, 0x80070000, 0x80e40000, 0xa0e40005, 0x80e40001, 0x2000001, 0x80080000, 0xa0e40004, 0x2000001, 0x800f0800, 0x80e40000, 0xffff };
static SRenderState rsshaCLSkyLight3Translucent[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaCLSkyLight3Translucent[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateCLSkyLight3Translucent[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateCLSkyLight3Translucent[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psCLSkyLight3Translucent( 48 , dwps11CLSkyLight3Translucent,0,0,0, rsshaCLSkyLight3Translucent, tssshaCLSkyLight3Translucent, rsstateCLSkyLight3Translucent, tssstateCLSkyLight3Translucent );
static DWORD dwps11LinearToGamma[] ={ 0xffff0200, 0x46fffe, 0x47554244, 0x28, 0xe0, 0x60, 0x0, 0x0, 0x7, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x120, 0xffff0003, 0x12c, 0xffff0004, 0x138, 0xffff0005, 0x148, 0xffff0006, 0x158, 0xffff0007, 0x168, 0xffff0008, 0x178, 0x322e7370, 0xa0d302e, 0x5f6c6364, 0x73206432, 0x640a0d30, 0x74206c63, 0x79782e30, 0x65740a0d, 0x20646c78, 0x202c3072, 0x202c3074, 0xa0d3073, 0x20776f70, 0x722e3072, 0x3072202c, 0x202c722e, 0x722e3063, 0x6f700a0d, 0x30722077, 0x202c672e, 0x672e3072, 0x3063202c, 0xa0d722e, 0x20776f70, 0x622e3072, 0x3072202c, 0x202c622e, 0x722e3063, 0x6f6d0a0d, 0x436f2076, 0x72202c30, 0xa0d30, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x80000000, 0xb0030000, 0x3000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 0x3000020, 0x80010000, 0x80000000, 0xa0000000, 0x3000020, 0x80020000, 0x80550000, 0xa0000000, 0x3000020, 0x80040000, 0x80aa0000, 0xa0000000, 0x2000001, 0x800f0800, 0x80e40000, 0xffff };
static SRenderState rsshaLinearToGamma[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaLinearToGamma[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateLinearToGamma[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateLinearToGamma[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psLinearToGamma( 49 , dwps11LinearToGamma,0,0,0, rsshaLinearToGamma, tssshaLinearToGamma, rsstateLinearToGamma, tssstateLinearToGamma );
static DWORD dwps11PointCubeMapDepth[] ={ 0xffff0200, 0x38fffe, 0x47554244, 0x28, 0xaa, 0x50, 0x0, 0x0, 0x5, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xe8, 0xffff0003, 0xf4, 0xffff0004, 0x104, 0xffff0005, 0x110, 0xffff0006, 0x120, 0x322e7370, 0xa0d302e, 0x206c6364, 0x782e3074, 0xa0d7a79, 0x5f337064, 0x20746173, 0x202c3072, 0x202c3074, 0xa0d3074, 0x20717372, 0x772e3172, 0x3072202c, 0xa0d772e, 0x206c756d, 0x202c3072, 0x772e3172, 0x3072202c, 0xa0d772e, 0x20766f6d, 0x2c30436f, 0xd307220, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x200001f, 0x80000000, 0xb0070000, 0x3000008, 0x801f0000, 0xb0e40000, 0xb0e40000, 0x2000007, 0x80080001, 0x80ff0000, 0x3000005, 0x800f0000, 0x80ff0001, 0x80ff0000, 0x2000001, 0x800f0800, 0x80e40000, 0xffff };
static SRenderState rsshaPointCubeMapDepth[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaPointCubeMapDepth[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstatePointCubeMapDepth[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstatePointCubeMapDepth[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psPointCubeMapDepth( 50 , dwps11PointCubeMapDepth,0,0,0, rsshaPointCubeMapDepth, tssshaPointCubeMapDepth, rsstatePointCubeMapDepth, tssstatePointCubeMapDepth );
static DWORD dwps11CLPointLightShadowed[] ={ 0xffff0200, 0x129fffe, 0x47554244, 0x28, 0x46e, 0x110, 0x0, 0x0, 0x1d, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0x4ac, 0xffff0003, 0x4b8, 0xffff0004, 0x4c4, 0xffff0005, 0x4d0, 0xffff0006, 0x4dc, 0xffff0007, 0x4e8, 0xffff0008, 0x4f4, 0xffff000a, 0x504, 0xffff000b, 0x514, 0xffff000c, 0x524, 0xffff000d, 0x538, 0xffff000e, 0x544, 0xffff0010, 0x554, 0xffff0011, 0x560, 0xffff0012, 0x570, 0xffff0013, 0x580, 0xffff0014, 0x594, 0xffff0015, 0x5a4, 0xffff0016, 0x5b4, 0xffff0018, 0x5c8, 0xffff0019, 0x5d8, 0xffff001b, 0x5e8, 0xffff001c, 0x5f8, 0xffff001d, 0x608, 0xffff001e, 0x618, 0xffff001f, 0x628, 0xffff0021, 0x63c, 0xffff0022, 0x64c, 0xffff0023, 0x65c, 0x322e7370, 0xa0d302e, 0x5f6c6364, 0x65627563, 0x20307320, 0x6564203b, 0x20687470, 0xd70616d, 0x6c63640a, 0x2064325f, 0x3b203173, 0x65727020, 0x756f6976, 0x61642073, 0xa0d6174, 0x5f6c6364, 0x65627563, 0x20327320, 0x6f6e203b, 0x6c616d72, 0x74617369, 0x206e6f69, 0xd70616d, 0x6c63640a, 0x2e307420, 0x207a7978, 0x76203b20, 0x6867694c, 0x640a0d74, 0x74206c63, 0x20202031, 0x3b202020, 0x65727020, 0x616d2076, 0x6e697070, 0x640a0d67, 0x74206c63, 0x79782e32, 0x3b20207a, 0x6f4e7620, 0x6c616d72, 0x70640a0d, 0x61735f33, 0x30722074, 0x202c772e, 0x202c3074, 0x3b203074, 0x2e307220, 0x203d2077, 0x74736964, 0x65636e61, 0x206f7420, 0x6e696f70, 0x696c2074, 0x2c746867, 0x6c657220, 0x76697461, 0x6f742065, 0x64617220, 0x20737569, 0x2d203128, 0x206e6f20, 0x69646172, 0xd297375, 0x20203b0a, 0x6c616320, 0x74612063, 0x756e6574, 0x6f697461, 0x6c61206e, 0xd616870, 0x6464610a, 0x2e327220, 0x2d202c77, 0x772e3072, 0x632d202c, 0xd792e30, 0x78616d0a, 0x2e327220, 0x72202c77, 0x2c772e32, 0x2e306320, 0x3b20207a, 0x2e327220, 0x203d2077, 0x74754366, 0x616d0a0d, 0x31722064, 0x202c772e, 0x772e3072, 0x3463202c, 0x202c782e, 0x792e3463, 0x63720a0d, 0x31722070, 0x202c772e, 0x772e3172, 0x756d0a0d, 0x3172206c, 0x202c772e, 0x772e3172, 0x3272202c, 0x3b20772e, 0x74746120, 0x61756e65, 0x6e6f6974, 0x203b0a0d, 0x61632020, 0x2820636c, 0x6f64204e, 0x294c2074, 0x73720a0d, 0x34722071, 0x202c772e, 0x772e3072, 0x756d0a0d, 0x3372206c, 0x7a79782e, 0x3074202c, 0x3472202c, 0x3b20772e, 0x694c7620, 0xd746867, 0x7865740a, 0x7220646c, 0x74202c32, 0x73202c32, 0x6d0a0d32, 0x72206461, 0x72202c32, 0x63202c32, 0x2c782e30, 0x2e306320, 0x640a0d79, 0x735f3370, 0x72207461, 0x72202c33, 0x2d202c33, 0xa0d3272, 0x5f337064, 0x20746173, 0x202c3272, 0x202c3372, 0xa0d3272, 0x2064616d, 0x202c3372, 0x202c3272, 0x202c3563, 0xa0d3372, 0x2020203b, 0x6f636361, 0x20746e75, 0x65747461, 0x7461756e, 0x206e6f69, 0x696c2026, 0x20746867, 0x6f6c6f63, 0x6d0a0d72, 0x72206c75, 0x72202c31, 0x2c772e31, 0xd336320, 0x6c756d0a, 0x2c337220, 0x2c337220, 0xd317220, 0x20203b0a, 0x63636120, 0x746e756f, 0x61687320, 0xd776f64, 0x6c756d0a, 0x2e307220, 0x72202c77, 0x2c772e34, 0x2e307220, 0x740a0d77, 0x646c7865, 0x2c327220, 0x2c307420, 0xd307320, 0x6464610a, 0x2e307220, 0x72202c77, 0x2d202c32, 0xa0d3072, 0x20646461, 0x772e3072, 0x3072202c, 0x202c772e, 0x772e3263, 0x6d630a0d, 0x30722070, 0x3072202c, 0x202c772e, 0x202c3372, 0xa0d3163, 0x2020203b, 0x20646461, 0x70206f74, 0x69766572, 0xd73756f, 0x7865740a, 0x2070646c, 0x202c3172, 0x202c3174, 0xa0d3173, 0x20646461, 0x202c3072, 0x202c3072, 0xa0d3172, 0x20766f6d, 0x2c30436f, 0xd307220, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x200001f, 0x98000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x200001f, 0x98000000, 0xa00f0802, 0x200001f, 0x80000000, 0xb0070000, 0x200001f, 0x80000000, 0xb00f0001, 0x200001f, 0x80000000, 0xb0070002, 0x3000008, 0x80180000, 0xb0e40000, 0xb0e40000, 0x3000002, 0x80080002, 0x81ff0000, 0xa1550000, 0x300000b, 0x80080002, 0x80ff0002, 0xa0aa0000, 0x4000004, 0x80080001, 0x80ff0000, 0xa0000004, 0xa0550004, 0x2000006, 0x80080001, 0x80ff0001, 0x3000005, 0x80080001, 0x80ff0001, 0x80ff0002, 0x2000007, 0x80080004, 0x80ff0000, 0x3000005, 0x80070003, 0xb0e40000, 0x80ff0004, 0x3000042, 0x800f0002, 0xb0e40002, 0xa0e40802, 0x4000004, 0x800f0002, 0x80e40002, 0xa0000000, 0xa0550000, 0x3000008, 0x801f0003, 0x80e40003, 0x81e40002, 0x3000008, 0x801f0002, 0x80e40003, 0x80e40002, 0x4000004, 0x800f0003, 0x80e40002, 0xa0e40005, 0x80e40003, 0x3000005, 0x800f0001, 0x80ff0001, 0xa0e40003, 0x3000005, 0x800f0003, 0x80e40003, 0x80e40001, 0x3000005, 0x80080000, 0x80ff0004, 0x80ff0000, 0x3000042, 0x800f0002, 0xb0e40000, 0xa0e40800, 0x3000002, 0x80080000, 0x80e40002, 0x81e40000, 0x3000002, 0x80080000, 0x80ff0000, 0xa0ff0002, 0x4000058, 0x800f0000, 0x80ff0000, 0x80e40003, 0xa0e40001, 0x3010042, 0x800f0001, 0xb0e40001, 0xa0e40801, 0x3000002, 0x800f0000, 0x80e40000, 0x80e40001, 0x2000001, 0x800f0800, 0x80e40000, 0xffff };
static SRenderState rsshaCLPointLightShadowed[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaCLPointLightShadowed[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateCLPointLightShadowed[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateCLPointLightShadowed[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psCLPointLightShadowed( 51 , dwps11CLPointLightShadowed,0,0,0, rsshaCLPointLightShadowed, tssshaCLPointLightShadowed, rsstateCLPointLightShadowed, tssstateCLPointLightShadowed );
static DWORD dwps11G5DiffuseTex[] ={ 0xffff0200, 0x289fffe, 0x47554244, 0x28, 0x9eb, 0x240, 0x0, 0x0, 0x43, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xa2c, 0xffff0003, 0xa38, 0xffff0004, 0xa44, 0xffff0005, 0xa50, 0xffff0006, 0xa5c, 0xffff0007, 0xa68, 0xffff0008, 0xa74, 0xffff000c, 0xa80, 0xffff000d, 0xa90, 0xffff000e, 0xaa0, 0xffff000f, 0xab0, 0xffff0010, 0xac0, 0xffff0013, 0xad0, 0xffff0014, 0xae0, 0xffff0017, 0xaf4, 0xffff0018, 0xb04, 0xffff0019, 0xb18, 0xffff001c, 0xb2c, 0xffff001d, 0xb3c, 0xffff001e, 0xb4c, 0xffff001f, 0xb5c, 0xffff0021, 0xb6c, 0xffff0022, 0xb7c, 0xffff0023, 0xb8c, 0xffff0024, 0xb9c, 0xffff0027, 0xbac, 0xffff0028, 0xbbc, 0xffff0029, 0xbd0, 0xffff002a, 0xbe4, 0xffff002d, 0xbf4, 0xffff002e, 0xc04, 0xffff002f, 0xc18, 0xffff0030, 0xc2c, 0xffff0033, 0xc3c, 0xffff0034, 0xc4c, 0xffff0035, 0xc60, 0xffff0036, 0xc74, 0xffff0039, 0xc84, 0xffff003a, 0xc94, 0xffff003b, 0xca8, 0xffff003c, 0xcbc, 0xffff003f, 0xccc, 0xffff0040, 0xcdc, 0xffff0041, 0xcec, 0xffff0042, 0xcfc, 0xffff0044, 0xd0c, 0xffff0045, 0xd1c, 0xffff0046, 0xd2c, 0xffff0047, 0xd3c, 0xffff004a, 0xd4c, 0xffff004b, 0xd5c, 0xffff004c, 0xd70, 0xffff004d, 0xd84, 0xffff0050, 0xd94, 0xffff0051, 0xda4, 0xffff0052, 0xdb8, 0xffff0053, 0xdcc, 0xffff0056, 0xddc, 0xffff0057, 0xdec, 0xffff0058, 0xe00, 0xffff0059, 0xe14, 0xffff005c, 0xe24, 0xffff005d, 0xe34, 0xffff005e, 0xe48, 0xffff005f, 0xe5c, 0xffff0062, 0xe6c, 0xffff0066, 0xe7c, 0x322e7370, 0xa0d302e, 0x5f6c6364, 0x73206432, 0x640a0d30, 0x325f6c63, 0x31732064, 0x63640a0d, 0x3074206c, 0xd79782e, 0x6c63640a, 0x2e317420, 0xa0d7978, 0x206c6364, 0x782e3274, 0xd777a79, 0x6c63640a, 0x2e307620, 0x777a7978, 0x63640a0d, 0x3176206c, 0x7a79782e, 0x2f2f0a0d, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d2f2f, 0xa0d0a0d, 0x6c786574, 0x32722064, 0x3074202c, 0x3073202c, 0x756d0a0d, 0x3372206c, 0x3076202c, 0x3272202c, 0x756d0a0d, 0x61735f6c, 0x30722074, 0x3372202c, 0x3763202c, 0xa0d782e, 0x206c756d, 0x722e3172, 0x202c6267, 0x202c3176, 0xa0d3272, 0x5f6c756d, 0x20746173, 0x722e3172, 0x202c6267, 0x202c3172, 0x782e3763, 0x2f2f0a0d, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d2f2f, 0x65740a0d, 0x20646c78, 0x202c3472, 0x202c3174, 0xa0d3173, 0x2070726c, 0x722e3172, 0x202c6267, 0x202c3472, 0x202c3172, 0xa0d3072, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d0a0d, 0x20646461, 0x202c3472, 0x612e3472, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c347220, 0x2c347220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x33722070, 0x6267722e, 0x3472202c, 0x3072202c, 0x3172202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xa0d7365, 0x20646461, 0x782e3472, 0x63202c79, 0x202c3031, 0xa0d3174, 0x20646461, 0x782e3572, 0x63202c79, 0x202c3131, 0xa0d3174, 0x20646461, 0x782e3672, 0x63202c79, 0x202c3231, 0xa0d3174, 0x20646461, 0x782e3772, 0x63202c79, 0x202c3331, 0xa0d3174, 0x65740a0d, 0x20646c78, 0x202c3472, 0x202c3472, 0xa0d3173, 0x6c786574, 0x35722064, 0x3572202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3672, 0x202c3672, 0xa0d3173, 0x6c786574, 0x37722064, 0x3772202c, 0x3173202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd312065, 0x6464610a, 0x2c347220, 0x2e347220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x34722064, 0x3472202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e34, 0x72202c62, 0x72202c34, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d34, 0x202f2f0a, 0x706d6173, 0x3220656c, 0x64610a0d, 0x35722064, 0x3572202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c35, 0x63202c35, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3572, 0x202c6267, 0x202c3572, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3572, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d33, 0x72206464, 0x72202c36, 0x2c612e36, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3672, 0x202c3672, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e367220, 0x2c626772, 0x2c367220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd367220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3420, 0x20646461, 0x202c3772, 0x612e3772, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c377220, 0x2c377220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x37722070, 0x6267722e, 0x3772202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3772202c, 0xa0d0a0d, 0x6d202f2f, 0x2065726f, 0x706d6173, 0xd73656c, 0x6464610a, 0x2e347220, 0x202c7978, 0x2c343163, 0xd317420, 0x6464610a, 0x2e357220, 0x202c7978, 0x2c353163, 0xd317420, 0x6464610a, 0x2e367220, 0x202c7978, 0x2c363163, 0xd317420, 0x6464610a, 0x2e377220, 0x202c7978, 0x2c373163, 0xd317420, 0x740a0d0a, 0x646c7865, 0x2c347220, 0x2c347220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c35, 0x73202c35, 0x740a0d31, 0x646c7865, 0x2c367220, 0x2c367220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c37, 0x73202c37, 0xd0a0d31, 0x202f2f0a, 0x706d6173, 0x3120656c, 0x64610a0d, 0x34722064, 0x3472202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c34, 0x63202c34, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3472, 0x202c6267, 0x202c3472, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3472, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d32, 0x72206464, 0x72202c35, 0x2c612e35, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3572, 0x202c3572, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e357220, 0x2c626772, 0x2c357220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd357220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3320, 0x20646461, 0x202c3672, 0x612e3672, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c367220, 0x2c367220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x36722070, 0x6267722e, 0x3672202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3672202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd342065, 0x6464610a, 0x2c377220, 0x2e377220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x37722064, 0x3772202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e37, 0x72202c62, 0x72202c37, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d37, 0x202f2f0a, 0x6d726f6e, 0x7a696c61, 0x6f632065, 0xd726f6c, 0x6c756d0a, 0x2e337220, 0x2c626772, 0x2c337220, 0x2e386320, 0x2f0a0d78, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xd2f2f2f, 0xd0a0d0a, 0x766f6d0a, 0x30436f20, 0x3372202c, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x80000000, 0xb00f0002, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000000, 0x90070001, 0x3000042, 0x800f0002, 0xb0e40000, 0xa0e40800, 0x3000005, 0x800f0003, 0x90e40000, 0x80e40002, 0x3000005, 0x801f0000, 0x80e40003, 0xa0000007, 0x3000005, 0x80070001, 0x90e40001, 0x80e40002, 0x3000005, 0x80170001, 0x80e40001, 0xa0000007, 0x3000042, 0x800f0004, 0xb0e40001, 0xa0e40801, 0x4000012, 0x80070001, 0x80e40004, 0x80e40001, 0x80e40000, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070003, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80030004, 0xa0e4000a, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000b, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e4000c, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e4000d, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000002, 0x80030004, 0xa0e4000e, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000f, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e40010, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e40011, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000005, 0x80070003, 0x80e40003, 0xa0000008, 0x2000001, 0x800f0800, 0x80e40003, 0xffff };
static SRenderState rsshaG5DiffuseTex[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG5DiffuseTex[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG5DiffuseTex[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG5DiffuseTex[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG5DiffuseTex( 52 , dwps11G5DiffuseTex,0,0,0, rsshaG5DiffuseTex, tssshaG5DiffuseTex, rsstateG5DiffuseTex, tssstateG5DiffuseTex );
static DWORD dwps11G5TransparentGeom[] ={ 0xffff0200, 0x289fffe, 0x47554244, 0x28, 0x9eb, 0x240, 0x0, 0x0, 0x43, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xa2c, 0xffff0003, 0xa38, 0xffff0004, 0xa44, 0xffff0005, 0xa50, 0xffff0006, 0xa5c, 0xffff0007, 0xa68, 0xffff0008, 0xa74, 0xffff000c, 0xa80, 0xffff000d, 0xa90, 0xffff000e, 0xaa0, 0xffff000f, 0xab0, 0xffff0010, 0xac0, 0xffff0013, 0xad0, 0xffff0014, 0xae0, 0xffff0017, 0xaf4, 0xffff0018, 0xb04, 0xffff0019, 0xb18, 0xffff001c, 0xb2c, 0xffff001d, 0xb3c, 0xffff001e, 0xb4c, 0xffff001f, 0xb5c, 0xffff0021, 0xb6c, 0xffff0022, 0xb7c, 0xffff0023, 0xb8c, 0xffff0024, 0xb9c, 0xffff0027, 0xbac, 0xffff0028, 0xbbc, 0xffff0029, 0xbd0, 0xffff002a, 0xbe4, 0xffff002d, 0xbf4, 0xffff002e, 0xc04, 0xffff002f, 0xc18, 0xffff0030, 0xc2c, 0xffff0033, 0xc3c, 0xffff0034, 0xc4c, 0xffff0035, 0xc60, 0xffff0036, 0xc74, 0xffff0039, 0xc84, 0xffff003a, 0xc94, 0xffff003b, 0xca8, 0xffff003c, 0xcbc, 0xffff003f, 0xccc, 0xffff0040, 0xcdc, 0xffff0041, 0xcec, 0xffff0042, 0xcfc, 0xffff0044, 0xd0c, 0xffff0045, 0xd1c, 0xffff0046, 0xd2c, 0xffff0047, 0xd3c, 0xffff004a, 0xd4c, 0xffff004b, 0xd5c, 0xffff004c, 0xd70, 0xffff004d, 0xd84, 0xffff0050, 0xd94, 0xffff0051, 0xda4, 0xffff0052, 0xdb8, 0xffff0053, 0xdcc, 0xffff0056, 0xddc, 0xffff0057, 0xdec, 0xffff0058, 0xe00, 0xffff0059, 0xe14, 0xffff005c, 0xe24, 0xffff005d, 0xe34, 0xffff005e, 0xe48, 0xffff005f, 0xe5c, 0xffff0062, 0xe6c, 0xffff0066, 0xe7c, 0x322e7370, 0xa0d302e, 0x5f6c6364, 0x73206432, 0x640a0d30, 0x325f6c63, 0x31732064, 0x63640a0d, 0x3074206c, 0xd79782e, 0x6c63640a, 0x2e317420, 0xa0d7978, 0x206c6364, 0x782e3274, 0xd777a79, 0x6c63640a, 0x2e307620, 0x777a7978, 0x63640a0d, 0x3176206c, 0x7a79782e, 0x2f2f0a0d, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d2f2f, 0xa0d0a0d, 0x6c786574, 0x32722064, 0x3074202c, 0x3073202c, 0x756d0a0d, 0x3372206c, 0x3076202c, 0x3272202c, 0x756d0a0d, 0x61735f6c, 0x30722074, 0x3372202c, 0x3763202c, 0xa0d782e, 0x206c756d, 0x722e3172, 0x202c6267, 0x202c3176, 0xa0d3272, 0x5f6c756d, 0x20746173, 0x722e3172, 0x202c6267, 0x202c3172, 0x782e3763, 0x2f2f0a0d, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d2f2f, 0x65740a0d, 0x20646c78, 0x202c3472, 0x202c3174, 0xa0d3173, 0x2070726c, 0x722e3172, 0x202c6267, 0x202c3472, 0x202c3172, 0xa0d3072, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d0a0d, 0x20646461, 0x202c3472, 0x612e3472, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c347220, 0x2c347220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x33722070, 0x6267722e, 0x3472202c, 0x3072202c, 0x3172202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xa0d7365, 0x20646461, 0x782e3472, 0x63202c79, 0x202c3031, 0xa0d3174, 0x20646461, 0x782e3572, 0x63202c79, 0x202c3131, 0xa0d3174, 0x20646461, 0x782e3672, 0x63202c79, 0x202c3231, 0xa0d3174, 0x20646461, 0x782e3772, 0x63202c79, 0x202c3331, 0xa0d3174, 0x65740a0d, 0x20646c78, 0x202c3472, 0x202c3472, 0xa0d3173, 0x6c786574, 0x35722064, 0x3572202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3672, 0x202c3672, 0xa0d3173, 0x6c786574, 0x37722064, 0x3772202c, 0x3173202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd312065, 0x6464610a, 0x2c347220, 0x2e347220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x34722064, 0x3472202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e34, 0x72202c62, 0x72202c34, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d34, 0x202f2f0a, 0x706d6173, 0x3220656c, 0x64610a0d, 0x35722064, 0x3572202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c35, 0x63202c35, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3572, 0x202c6267, 0x202c3572, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3572, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d33, 0x72206464, 0x72202c36, 0x2c612e36, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3672, 0x202c3672, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e367220, 0x2c626772, 0x2c367220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd367220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3420, 0x20646461, 0x202c3772, 0x612e3772, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c377220, 0x2c377220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x37722070, 0x6267722e, 0x3772202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3772202c, 0xa0d0a0d, 0x6d202f2f, 0x2065726f, 0x706d6173, 0xd73656c, 0x6464610a, 0x2e347220, 0x202c7978, 0x2c343163, 0xd317420, 0x6464610a, 0x2e357220, 0x202c7978, 0x2c353163, 0xd317420, 0x6464610a, 0x2e367220, 0x202c7978, 0x2c363163, 0xd317420, 0x6464610a, 0x2e377220, 0x202c7978, 0x2c373163, 0xd317420, 0x740a0d0a, 0x646c7865, 0x2c347220, 0x2c347220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c35, 0x73202c35, 0x740a0d31, 0x646c7865, 0x2c367220, 0x2c367220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c37, 0x73202c37, 0xd0a0d31, 0x202f2f0a, 0x706d6173, 0x3120656c, 0x64610a0d, 0x34722064, 0x3472202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c34, 0x63202c34, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3472, 0x202c6267, 0x202c3472, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3472, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d32, 0x72206464, 0x72202c35, 0x2c612e35, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3572, 0x202c3572, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e357220, 0x2c626772, 0x2c357220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd357220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3320, 0x20646461, 0x202c3672, 0x612e3672, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c367220, 0x2c367220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x36722070, 0x6267722e, 0x3672202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3672202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd342065, 0x6464610a, 0x2c377220, 0x2e377220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x37722064, 0x3772202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e37, 0x72202c62, 0x72202c37, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d37, 0x202f2f0a, 0x6d726f6e, 0x7a696c61, 0x6f632065, 0xd726f6c, 0x6c756d0a, 0x2e337220, 0x2c626772, 0x2c337220, 0x2e386320, 0x2f0a0d78, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xd2f2f2f, 0xd0a0d0a, 0x766f6d0a, 0x30436f20, 0x3372202c, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x80000000, 0xb00f0002, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000000, 0x90070001, 0x3000042, 0x800f0002, 0xb0e40000, 0xa0e40800, 0x3000005, 0x800f0003, 0x90e40000, 0x80e40002, 0x3000005, 0x801f0000, 0x80e40003, 0xa0000007, 0x3000005, 0x80070001, 0x90e40001, 0x80e40002, 0x3000005, 0x80170001, 0x80e40001, 0xa0000007, 0x3000042, 0x800f0004, 0xb0e40001, 0xa0e40801, 0x4000012, 0x80070001, 0x80e40004, 0x80e40001, 0x80e40000, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070003, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80030004, 0xa0e4000a, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000b, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e4000c, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e4000d, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000002, 0x80030004, 0xa0e4000e, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000f, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e40010, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e40011, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000005, 0x80070003, 0x80e40003, 0xa0000008, 0x2000001, 0x800f0800, 0x80e40003, 0xffff };
static SRenderState rsshaG5TransparentGeom[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG5TransparentGeom[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG5TransparentGeom[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG5TransparentGeom[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG5TransparentGeom( 53 , dwps11G5TransparentGeom,0,0,0, rsshaG5TransparentGeom, tssshaG5TransparentGeom, rsstateG5TransparentGeom, tssstateG5TransparentGeom );
static DWORD dwps11G5DiffuseTexMirror[] ={ 0xffff0200, 0x2e3fffe, 0x47554244, 0x28, 0xb56, 0x2a0, 0x0, 0x0, 0x4f, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xb94, 0xffff0003, 0xba0, 0xffff0004, 0xbac, 0xffff0005, 0xbb8, 0xffff0006, 0xbc4, 0xffff0007, 0xbd0, 0xffff0008, 0xbdc, 0xffff0009, 0xbe8, 0xffff000a, 0xbf4, 0xffff000b, 0xc00, 0xffff000c, 0xc0c, 0xffff0010, 0xc18, 0xffff0011, 0xc28, 0xffff0012, 0xc38, 0xffff0013, 0xc48, 0xffff0014, 0xc58, 0xffff0017, 0xc68, 0xffff0018, 0xc78, 0xffff001b, 0xc8c, 0xffff001c, 0xc9c, 0xffff001d, 0xcb0, 0xffff0020, 0xcc4, 0xffff0021, 0xcd4, 0xffff0022, 0xce4, 0xffff0023, 0xcf4, 0xffff0025, 0xd04, 0xffff0026, 0xd14, 0xffff0027, 0xd24, 0xffff0028, 0xd34, 0xffff002b, 0xd44, 0xffff002c, 0xd54, 0xffff002d, 0xd68, 0xffff002e, 0xd7c, 0xffff0031, 0xd8c, 0xffff0032, 0xd9c, 0xffff0033, 0xdb0, 0xffff0034, 0xdc4, 0xffff0037, 0xdd4, 0xffff0038, 0xde4, 0xffff0039, 0xdf8, 0xffff003a, 0xe0c, 0xffff003d, 0xe1c, 0xffff003e, 0xe2c, 0xffff003f, 0xe40, 0xffff0040, 0xe54, 0xffff0043, 0xe64, 0xffff0044, 0xe74, 0xffff0045, 0xe84, 0xffff0046, 0xe94, 0xffff0048, 0xea4, 0xffff0049, 0xeb4, 0xffff004a, 0xec4, 0xffff004b, 0xed4, 0xffff004e, 0xee4, 0xffff004f, 0xef4, 0xffff0050, 0xf08, 0xffff0051, 0xf1c, 0xffff0054, 0xf2c, 0xffff0055, 0xf3c, 0xffff0056, 0xf50, 0xffff0057, 0xf64, 0xffff005a, 0xf74, 0xffff005b, 0xf84, 0xffff005c, 0xf98, 0xffff005d, 0xfac, 0xffff0060, 0xfbc, 0xffff0061, 0xfcc, 0xffff0062, 0xfe0, 0xffff0063, 0xff4, 0xffff0066, 0x1004, 0xffff006a, 0x1014, 0xffff006b, 0x1024, 0xffff006c, 0x1034, 0xffff006d, 0x1044, 0xffff006e, 0x1054, 0xffff0070, 0x1064, 0xffff0071, 0x1078, 0xffff0072, 0x1088, 0xffff0074, 0x109c, 0x322e7370, 0xa0d302e, 0x5f6c6364, 0x73206432, 0x640a0d30, 0x325f6c63, 0x31732064, 0x63640a0d, 0x75635f6c, 0x73206562, 0x640a0d33, 0x325f6c63, 0x34732064, 0x63640a0d, 0x3074206c, 0xd79782e, 0x6c63640a, 0x2e317420, 0xa0d7978, 0x206c6364, 0x782e3274, 0xd777a79, 0x6c63640a, 0x2e337420, 0xd7a7978, 0x6c63640a, 0x2e347420, 0xa0d7978, 0x206c6364, 0x782e3076, 0xd777a79, 0x6c63640a, 0x2e317620, 0xd7a7978, 0x2f2f2f0a, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xd0a0d2f, 0x740a0d0a, 0x646c7865, 0x2c327220, 0x2c307420, 0xd307320, 0x6c756d0a, 0x2c337220, 0x2c307620, 0xd327220, 0x6c756d0a, 0x7461735f, 0x2c307220, 0x2c337220, 0x2e376320, 0x6d0a0d78, 0x72206c75, 0x67722e31, 0x76202c62, 0x72202c31, 0x6d0a0d32, 0x735f6c75, 0x72207461, 0x67722e31, 0x72202c62, 0x63202c31, 0xd782e37, 0x2f2f2f0a, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xd0a0d2f, 0x7865740a, 0x7220646c, 0x74202c34, 0x73202c31, 0x6c0a0d31, 0x72207072, 0x67722e31, 0x72202c62, 0x72202c34, 0x72202c31, 0x2f0a0d30, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xd2f2f2f, 0x610a0d0a, 0x72206464, 0x72202c34, 0x2c612e34, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3472, 0x202c3472, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e337220, 0x2c626772, 0x2c347220, 0x2c307220, 0xd317220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0x610a0d73, 0x72206464, 0x79782e34, 0x3163202c, 0x74202c30, 0x610a0d31, 0x72206464, 0x79782e35, 0x3163202c, 0x74202c31, 0x610a0d31, 0x72206464, 0x79782e36, 0x3163202c, 0x74202c32, 0x610a0d31, 0x72206464, 0x79782e37, 0x3163202c, 0x74202c33, 0xd0a0d31, 0x7865740a, 0x7220646c, 0x72202c34, 0x73202c34, 0x740a0d31, 0x646c7865, 0x2c357220, 0x2c357220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c36, 0x73202c36, 0x740a0d31, 0x646c7865, 0x2c377220, 0x2c377220, 0xd317320, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3120, 0x20646461, 0x202c3472, 0x612e3472, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c347220, 0x2c347220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x34722070, 0x6267722e, 0x3472202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3472202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd322065, 0x6464610a, 0x2c357220, 0x2e357220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x35722064, 0x3572202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e35, 0x72202c62, 0x72202c35, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d35, 0x202f2f0a, 0x706d6173, 0x3320656c, 0x64610a0d, 0x36722064, 0x3672202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c36, 0x63202c36, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3672, 0x202c6267, 0x202c3672, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3672, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d34, 0x72206464, 0x72202c37, 0x2c612e37, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3772, 0x202c3772, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e377220, 0x2c626772, 0x2c377220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd377220, 0x2f0a0d0a, 0x6f6d202f, 0x73206572, 0x6c706d61, 0xa0d7365, 0x20646461, 0x782e3472, 0x63202c79, 0x202c3431, 0xa0d3174, 0x20646461, 0x782e3572, 0x63202c79, 0x202c3531, 0xa0d3174, 0x20646461, 0x782e3672, 0x63202c79, 0x202c3631, 0xa0d3174, 0x20646461, 0x782e3772, 0x63202c79, 0x202c3731, 0xa0d3174, 0x65740a0d, 0x20646c78, 0x202c3472, 0x202c3472, 0xa0d3173, 0x6c786574, 0x35722064, 0x3572202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3672, 0x202c3672, 0xa0d3173, 0x6c786574, 0x37722064, 0x3772202c, 0x3173202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd312065, 0x6464610a, 0x2c347220, 0x2e347220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x34722064, 0x3472202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e34, 0x72202c62, 0x72202c34, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d34, 0x202f2f0a, 0x706d6173, 0x3220656c, 0x64610a0d, 0x35722064, 0x3572202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c35, 0x63202c35, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3572, 0x202c6267, 0x202c3572, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3572, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d33, 0x72206464, 0x72202c36, 0x2c612e36, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3672, 0x202c3672, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e367220, 0x2c626772, 0x2c367220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd367220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3420, 0x20646461, 0x202c3772, 0x612e3772, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c377220, 0x2c377220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x37722070, 0x6267722e, 0x3772202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3772202c, 0xa0d0a0d, 0x6e202f2f, 0x616d726f, 0x657a696c, 0x6c6f6320, 0xa0d726f, 0x206c756d, 0x722e3372, 0x202c6267, 0x202c3372, 0x782e3863, 0x2f2f0a0d, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d2f2f, 0xa0d0a0d, 0x206c756d, 0x612e3372, 0x3272202c, 0x202c612e, 0xa0d3063, 0x6c786574, 0x31722064, 0x3374202c, 0x3373202c, 0x756d0a0d, 0x3172206c, 0x202c612e, 0x612e3076, 0x3172202c, 0xa0d612e, 0x6c786574, 0x30722064, 0x3474202c, 0x3473202c, 0x756d0a0d, 0x3172206c, 0x3172202c, 0x3072202c, 0x203b0a0d, 0x2d203372, 0x66696420, 0x65737566, 0x6c6f6320, 0x202c726f, 0x2d203172, 0x66657220, 0x7463656c, 0x206e6f69, 0x6f6c6f63, 0x6c0a0d72, 0x72207072, 0x67722e34, 0x72202c62, 0x2c612e31, 0x2c317220, 0xd337220, 0x6464610a, 0x2e347220, 0x63202c61, 0x2c7a2e37, 0x33722d20, 0xa0d612e, 0x2064616d, 0x612e3472, 0x3172202c, 0x202c612e, 0x612e3472, 0x3372202c, 0xa0d612e, 0x6f6d0a0d, 0x436f2076, 0x72202c30, 0xd0a0d34, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x200001f, 0x98000000, 0xa00f0803, 0x200001f, 0x90000000, 0xa00f0804, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x80000000, 0xb00f0002, 0x200001f, 0x80000000, 0xb0070003, 0x200001f, 0x80000000, 0xb0030004, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000000, 0x90070001, 0x3000042, 0x800f0002, 0xb0e40000, 0xa0e40800, 0x3000005, 0x800f0003, 0x90e40000, 0x80e40002, 0x3000005, 0x801f0000, 0x80e40003, 0xa0000007, 0x3000005, 0x80070001, 0x90e40001, 0x80e40002, 0x3000005, 0x80170001, 0x80e40001, 0xa0000007, 0x3000042, 0x800f0004, 0xb0e40001, 0xa0e40801, 0x4000012, 0x80070001, 0x80e40004, 0x80e40001, 0x80e40000, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070003, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80030004, 0xa0e4000a, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000b, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e4000c, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e4000d, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000002, 0x80030004, 0xa0e4000e, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000f, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e40010, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e40011, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000005, 0x80070003, 0x80e40003, 0xa0000008, 0x3000005, 0x80080003, 0x80ff0002, 0xa0e40000, 0x3000042, 0x800f0001, 0xb0e40003, 0xa0e40803, 0x3000005, 0x80080001, 0x90ff0000, 0x80ff0001, 0x3000042, 0x800f0000, 0xb0e40004, 0xa0e40804, 0x3000005, 0x800f0001, 0x80e40001, 0x80e40000, 0x4000012, 0x80070004, 0x80ff0001, 0x80e40001, 0x80e40003, 0x3000002, 0x80080004, 0xa0aa0007, 0x81ff0003, 0x4000004, 0x80080004, 0x80ff0001, 0x80ff0004, 0x80ff0003, 0x2000001, 0x800f0800, 0x80e40004, 0xffff };
static SRenderState rsshaG5DiffuseTexMirror[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG5DiffuseTexMirror[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG5DiffuseTexMirror[] = { 
{ D3DRS_ALPHATESTENABLE, FALSE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG5DiffuseTexMirror[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG5DiffuseTexMirror( 54 , dwps11G5DiffuseTexMirror,0,0,0, rsshaG5DiffuseTexMirror, tssshaG5DiffuseTexMirror, rsstateG5DiffuseTexMirror, tssstateG5DiffuseTexMirror );
static DWORD dwps11G5DiffuseTexDetail[] ={ 0xffff0200, 0x2a6fffe, 0x47554244, 0x28, 0xa61, 0x268, 0x0, 0x0, 0x48, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xaa0, 0xffff0003, 0xaac, 0xffff0004, 0xab8, 0xffff0005, 0xac4, 0xffff0006, 0xad0, 0xffff0007, 0xadc, 0xffff0008, 0xae8, 0xffff0009, 0xaf4, 0xffff000a, 0xb00, 0xffff000e, 0xb0c, 0xffff000f, 0xb1c, 0xffff0010, 0xb2c, 0xffff0011, 0xb3c, 0xffff0012, 0xb4c, 0xffff0015, 0xb5c, 0xffff0016, 0xb6c, 0xffff0019, 0xb80, 0xffff001a, 0xb90, 0xffff001b, 0xba4, 0xffff001e, 0xbb8, 0xffff001f, 0xbc8, 0xffff0020, 0xbd8, 0xffff0021, 0xbe8, 0xffff0023, 0xbf8, 0xffff0024, 0xc08, 0xffff0025, 0xc18, 0xffff0026, 0xc28, 0xffff0029, 0xc38, 0xffff002a, 0xc48, 0xffff002b, 0xc5c, 0xffff002c, 0xc70, 0xffff002f, 0xc80, 0xffff0030, 0xc90, 0xffff0031, 0xca4, 0xffff0032, 0xcb8, 0xffff0035, 0xcc8, 0xffff0036, 0xcd8, 0xffff0037, 0xcec, 0xffff0038, 0xd00, 0xffff003b, 0xd10, 0xffff003c, 0xd20, 0xffff003d, 0xd34, 0xffff003e, 0xd48, 0xffff0041, 0xd58, 0xffff0042, 0xd68, 0xffff0043, 0xd78, 0xffff0044, 0xd88, 0xffff0046, 0xd98, 0xffff0047, 0xda8, 0xffff0048, 0xdb8, 0xffff0049, 0xdc8, 0xffff004c, 0xdd8, 0xffff004d, 0xde8, 0xffff004e, 0xdfc, 0xffff004f, 0xe10, 0xffff0052, 0xe20, 0xffff0053, 0xe30, 0xffff0054, 0xe44, 0xffff0055, 0xe58, 0xffff0058, 0xe68, 0xffff0059, 0xe78, 0xffff005a, 0xe8c, 0xffff005b, 0xea0, 0xffff005e, 0xeb0, 0xffff005f, 0xec0, 0xffff0060, 0xed4, 0xffff0061, 0xee8, 0xffff0064, 0xef8, 0xffff0068, 0xf08, 0xffff0069, 0xf18, 0xffff006a, 0xf28, 0xffff006c, 0xf38, 0x322e7370, 0xa0d302e, 0x5f6c6364, 0x73206432, 0x640a0d30, 0x325f6c63, 0x31732064, 0x63640a0d, 0x64325f6c, 0xd337320, 0x6c63640a, 0x2e307420, 0xa0d7978, 0x206c6364, 0x782e3174, 0x640a0d79, 0x74206c63, 0x79782e32, 0xa0d777a, 0x206c6364, 0x782e3374, 0x640a0d79, 0x76206c63, 0x79782e30, 0xa0d777a, 0x206c6364, 0x782e3176, 0xa0d7a79, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d0a0d, 0x65740a0d, 0x20646c78, 0x202c3272, 0x202c3074, 0xa0d3073, 0x206c756d, 0x202c3372, 0x202c3076, 0xa0d3272, 0x5f6c756d, 0x20746173, 0x202c3072, 0x202c3372, 0x782e3763, 0x756d0a0d, 0x3172206c, 0x6267722e, 0x3176202c, 0x3272202c, 0x756d0a0d, 0x61735f6c, 0x31722074, 0x6267722e, 0x3172202c, 0x3763202c, 0xa0d782e, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d0a0d, 0x6c786574, 0x34722064, 0x3174202c, 0x3173202c, 0x726c0a0d, 0x31722070, 0x6267722e, 0x3472202c, 0x3172202c, 0x3072202c, 0x2f2f0a0d, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d2f2f, 0x64610a0d, 0x34722064, 0x3472202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c34, 0x63202c34, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3372, 0x202c6267, 0x202c3472, 0x202c3072, 0xa0d3172, 0x2f2f0a0d, 0x6d617320, 0x73656c70, 0x64610a0d, 0x34722064, 0x2c79782e, 0x30316320, 0x3174202c, 0x64610a0d, 0x35722064, 0x2c79782e, 0x31316320, 0x3174202c, 0x64610a0d, 0x36722064, 0x2c79782e, 0x32316320, 0x3174202c, 0x64610a0d, 0x37722064, 0x2c79782e, 0x33316320, 0x3174202c, 0xa0d0a0d, 0x6c786574, 0x34722064, 0x3472202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3572, 0x202c3572, 0xa0d3173, 0x6c786574, 0x36722064, 0x3672202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3772, 0x202c3772, 0xa0d3173, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d31, 0x72206464, 0x72202c34, 0x2c612e34, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3472, 0x202c3472, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e347220, 0x2c626772, 0x2c347220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd347220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3220, 0x20646461, 0x202c3572, 0x612e3572, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c357220, 0x2c357220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x35722070, 0x6267722e, 0x3572202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3572202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd332065, 0x6464610a, 0x2c367220, 0x2e367220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x36722064, 0x3672202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e36, 0x72202c62, 0x72202c36, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d36, 0x202f2f0a, 0x706d6173, 0x3420656c, 0x64610a0d, 0x37722064, 0x3772202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c37, 0x63202c37, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3772, 0x202c6267, 0x202c3772, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3772, 0x2f2f0a0d, 0x726f6d20, 0x61732065, 0x656c706d, 0x610a0d73, 0x72206464, 0x79782e34, 0x3163202c, 0x74202c34, 0x610a0d31, 0x72206464, 0x79782e35, 0x3163202c, 0x74202c35, 0x610a0d31, 0x72206464, 0x79782e36, 0x3163202c, 0x74202c36, 0x610a0d31, 0x72206464, 0x79782e37, 0x3163202c, 0x74202c37, 0xd0a0d31, 0x7865740a, 0x7220646c, 0x72202c34, 0x73202c34, 0x740a0d31, 0x646c7865, 0x2c357220, 0x2c357220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c36, 0x73202c36, 0x740a0d31, 0x646c7865, 0x2c377220, 0x2c377220, 0xd317320, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3120, 0x20646461, 0x202c3472, 0x612e3472, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c347220, 0x2c347220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x34722070, 0x6267722e, 0x3472202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3472202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd322065, 0x6464610a, 0x2c357220, 0x2e357220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x35722064, 0x3572202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e35, 0x72202c62, 0x72202c35, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d35, 0x202f2f0a, 0x706d6173, 0x3320656c, 0x64610a0d, 0x36722064, 0x3672202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c36, 0x63202c36, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3672, 0x202c6267, 0x202c3672, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3672, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d34, 0x72206464, 0x72202c37, 0x2c612e37, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3772, 0x202c3772, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e377220, 0x2c626772, 0x2c377220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd377220, 0x2f0a0d0a, 0x6f6e202f, 0x6c616d72, 0x20657a69, 0x6f6c6f63, 0x6d0a0d72, 0x72206c75, 0x67722e33, 0x72202c62, 0x63202c33, 0xd782e38, 0x2f2f2f0a, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xd0a0d2f, 0x740a0d0a, 0x646c7865, 0x2c307220, 0x2c337420, 0xd337320, 0x6c756d0a, 0x2c337220, 0x2c337220, 0xd307220, 0x6c756d0a, 0x2c337220, 0x2c337220, 0x2e376320, 0xd0a0d79, 0x766f6d0a, 0x30436f20, 0x3372202c, 0xa0d0a0d, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x200001f, 0x90000000, 0xa00f0803, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x80000000, 0xb00f0002, 0x200001f, 0x80000000, 0xb0030003, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000000, 0x90070001, 0x3000042, 0x800f0002, 0xb0e40000, 0xa0e40800, 0x3000005, 0x800f0003, 0x90e40000, 0x80e40002, 0x3000005, 0x801f0000, 0x80e40003, 0xa0000007, 0x3000005, 0x80070001, 0x90e40001, 0x80e40002, 0x3000005, 0x80170001, 0x80e40001, 0xa0000007, 0x3000042, 0x800f0004, 0xb0e40001, 0xa0e40801, 0x4000012, 0x80070001, 0x80e40004, 0x80e40001, 0x80e40000, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070003, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80030004, 0xa0e4000a, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000b, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e4000c, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e4000d, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000002, 0x80030004, 0xa0e4000e, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000f, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e40010, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e40011, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000005, 0x80070003, 0x80e40003, 0xa0000008, 0x3000042, 0x800f0000, 0xb0e40003, 0xa0e40803, 0x3000005, 0x800f0003, 0x80e40003, 0x80e40000, 0x3000005, 0x800f0003, 0x80e40003, 0xa0550007, 0x2000001, 0x800f0800, 0x80e40003, 0xffff };
static SRenderState rsshaG5DiffuseTexDetail[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG5DiffuseTexDetail[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG5DiffuseTexDetail[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG5DiffuseTexDetail[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG5DiffuseTexDetail( 55 , dwps11G5DiffuseTexDetail,0,0,0, rsshaG5DiffuseTexDetail, tssshaG5DiffuseTexDetail, rsstateG5DiffuseTexDetail, tssstateG5DiffuseTexDetail );
static DWORD dwps11G5DiffuseTex2[] ={ 0xffff0200, 0x29ffffe, 0x47554244, 0x28, 0xa45, 0x260, 0x0, 0x0, 0x47, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xa84, 0xffff0003, 0xa90, 0xffff0004, 0xa9c, 0xffff0005, 0xaa8, 0xffff0006, 0xab4, 0xffff0007, 0xac0, 0xffff0008, 0xacc, 0xffff0009, 0xad8, 0xffff000a, 0xae4, 0xffff000e, 0xaf0, 0xffff000f, 0xb00, 0xffff0010, 0xb10, 0xffff0011, 0xb20, 0xffff0012, 0xb30, 0xffff0015, 0xb40, 0xffff0016, 0xb50, 0xffff0019, 0xb64, 0xffff001a, 0xb74, 0xffff001b, 0xb88, 0xffff001e, 0xb9c, 0xffff001f, 0xbac, 0xffff0020, 0xbbc, 0xffff0021, 0xbcc, 0xffff0023, 0xbdc, 0xffff0024, 0xbec, 0xffff0025, 0xbfc, 0xffff0026, 0xc0c, 0xffff0029, 0xc1c, 0xffff002a, 0xc2c, 0xffff002b, 0xc40, 0xffff002c, 0xc54, 0xffff002f, 0xc64, 0xffff0030, 0xc74, 0xffff0031, 0xc88, 0xffff0032, 0xc9c, 0xffff0035, 0xcac, 0xffff0036, 0xcbc, 0xffff0037, 0xcd0, 0xffff0038, 0xce4, 0xffff003b, 0xcf4, 0xffff003c, 0xd04, 0xffff003d, 0xd18, 0xffff003e, 0xd2c, 0xffff0041, 0xd3c, 0xffff0042, 0xd4c, 0xffff0043, 0xd5c, 0xffff0044, 0xd6c, 0xffff0046, 0xd7c, 0xffff0047, 0xd8c, 0xffff0048, 0xd9c, 0xffff0049, 0xdac, 0xffff004c, 0xdbc, 0xffff004d, 0xdcc, 0xffff004e, 0xde0, 0xffff004f, 0xdf4, 0xffff0052, 0xe04, 0xffff0053, 0xe14, 0xffff0054, 0xe28, 0xffff0055, 0xe3c, 0xffff0058, 0xe4c, 0xffff0059, 0xe5c, 0xffff005a, 0xe70, 0xffff005b, 0xe84, 0xffff005e, 0xe94, 0xffff005f, 0xea4, 0xffff0060, 0xeb8, 0xffff0061, 0xecc, 0xffff0064, 0xedc, 0xffff0068, 0xeec, 0xffff0069, 0xefc, 0xffff006b, 0xf0c, 0x322e7370, 0xa0d302e, 0x5f6c6364, 0x73206432, 0x640a0d30, 0x325f6c63, 0x31732064, 0x63640a0d, 0x64325f6c, 0xd337320, 0x6c63640a, 0x2e307420, 0xa0d7978, 0x206c6364, 0x782e3174, 0x640a0d79, 0x74206c63, 0x79782e32, 0xa0d777a, 0x206c6364, 0x782e3374, 0x640a0d79, 0x76206c63, 0x79782e30, 0xa0d777a, 0x206c6364, 0x782e3176, 0xa0d7a79, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d0a0d, 0x65740a0d, 0x20646c78, 0x202c3272, 0x202c3074, 0xa0d3073, 0x206c756d, 0x202c3372, 0x202c3076, 0xa0d3272, 0x5f6c756d, 0x20746173, 0x202c3072, 0x202c3372, 0x782e3763, 0x756d0a0d, 0x3172206c, 0x6267722e, 0x3176202c, 0x3272202c, 0x756d0a0d, 0x61735f6c, 0x31722074, 0x6267722e, 0x3172202c, 0x3763202c, 0xa0d782e, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d0a0d, 0x6c786574, 0x34722064, 0x3174202c, 0x3173202c, 0x726c0a0d, 0x31722070, 0x6267722e, 0x3472202c, 0x3172202c, 0x3072202c, 0x2f2f0a0d, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d2f2f, 0x64610a0d, 0x34722064, 0x3472202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c34, 0x63202c34, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3372, 0x202c6267, 0x202c3472, 0x202c3072, 0xa0d3172, 0x2f2f0a0d, 0x6d617320, 0x73656c70, 0x64610a0d, 0x34722064, 0x2c79782e, 0x30316320, 0x3174202c, 0x64610a0d, 0x35722064, 0x2c79782e, 0x31316320, 0x3174202c, 0x64610a0d, 0x36722064, 0x2c79782e, 0x32316320, 0x3174202c, 0x64610a0d, 0x37722064, 0x2c79782e, 0x33316320, 0x3174202c, 0xa0d0a0d, 0x6c786574, 0x34722064, 0x3472202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3572, 0x202c3572, 0xa0d3173, 0x6c786574, 0x36722064, 0x3672202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3772, 0x202c3772, 0xa0d3173, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d31, 0x72206464, 0x72202c34, 0x2c612e34, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3472, 0x202c3472, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e347220, 0x2c626772, 0x2c347220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd347220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3220, 0x20646461, 0x202c3572, 0x612e3572, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c357220, 0x2c357220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x35722070, 0x6267722e, 0x3572202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3572202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd332065, 0x6464610a, 0x2c367220, 0x2e367220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x36722064, 0x3672202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e36, 0x72202c62, 0x72202c36, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d36, 0x202f2f0a, 0x706d6173, 0x3420656c, 0x64610a0d, 0x37722064, 0x3772202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c37, 0x63202c37, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3772, 0x202c6267, 0x202c3772, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3772, 0x2f2f0a0d, 0x726f6d20, 0x61732065, 0x656c706d, 0x610a0d73, 0x72206464, 0x79782e34, 0x3163202c, 0x74202c34, 0x610a0d31, 0x72206464, 0x79782e35, 0x3163202c, 0x74202c35, 0x610a0d31, 0x72206464, 0x79782e36, 0x3163202c, 0x74202c36, 0x610a0d31, 0x72206464, 0x79782e37, 0x3163202c, 0x74202c37, 0xd0a0d31, 0x7865740a, 0x7220646c, 0x72202c34, 0x73202c34, 0x740a0d31, 0x646c7865, 0x2c357220, 0x2c357220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c36, 0x73202c36, 0x740a0d31, 0x646c7865, 0x2c377220, 0x2c377220, 0xd317320, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3120, 0x20646461, 0x202c3472, 0x612e3472, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c347220, 0x2c347220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x34722070, 0x6267722e, 0x3472202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3472202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd322065, 0x6464610a, 0x2c357220, 0x2e357220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x35722064, 0x3572202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e35, 0x72202c62, 0x72202c35, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d35, 0x202f2f0a, 0x706d6173, 0x3320656c, 0x64610a0d, 0x36722064, 0x3672202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c36, 0x63202c36, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3672, 0x202c6267, 0x202c3672, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3672, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d34, 0x72206464, 0x72202c37, 0x2c612e37, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3772, 0x202c3772, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e377220, 0x2c626772, 0x2c377220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd377220, 0x2f0a0d0a, 0x6f6e202f, 0x6c616d72, 0x20657a69, 0x6f6c6f63, 0x6d0a0d72, 0x72206c75, 0x67722e33, 0x72202c62, 0x63202c33, 0xd782e38, 0x2f2f2f0a, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xd0a0d2f, 0x740a0d0a, 0x646c7865, 0x2c307220, 0x2c337420, 0xd337320, 0x6c756d0a, 0x2c337220, 0x2c337220, 0xd307220, 0x6d0a0d0a, 0x6f20766f, 0x202c3043, 0xa0d3372, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x200001f, 0x90000000, 0xa00f0803, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x80000000, 0xb00f0002, 0x200001f, 0x80000000, 0xb0030003, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000000, 0x90070001, 0x3000042, 0x800f0002, 0xb0e40000, 0xa0e40800, 0x3000005, 0x800f0003, 0x90e40000, 0x80e40002, 0x3000005, 0x801f0000, 0x80e40003, 0xa0000007, 0x3000005, 0x80070001, 0x90e40001, 0x80e40002, 0x3000005, 0x80170001, 0x80e40001, 0xa0000007, 0x3000042, 0x800f0004, 0xb0e40001, 0xa0e40801, 0x4000012, 0x80070001, 0x80e40004, 0x80e40001, 0x80e40000, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070003, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80030004, 0xa0e4000a, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000b, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e4000c, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e4000d, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000002, 0x80030004, 0xa0e4000e, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000f, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e40010, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e40011, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000005, 0x80070003, 0x80e40003, 0xa0000008, 0x3000042, 0x800f0000, 0xb0e40003, 0xa0e40803, 0x3000005, 0x800f0003, 0x80e40003, 0x80e40000, 0x2000001, 0x800f0800, 0x80e40003, 0xffff };
static SRenderState rsshaG5DiffuseTex2[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG5DiffuseTex2[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG5DiffuseTex2[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG5DiffuseTex2[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG5DiffuseTex2( 56 , dwps11G5DiffuseTex2,0,0,0, rsshaG5DiffuseTex2, tssshaG5DiffuseTex2, rsstateG5DiffuseTex2, tssstateG5DiffuseTex2 );
static DWORD dwps11G5DiffuseTexLM[] ={ 0xffff0200, 0x2cffffe, 0x47554244, 0x28, 0xb03, 0x278, 0x0, 0x0, 0x4a, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xb44, 0xffff0003, 0xb50, 0xffff0004, 0xb5c, 0xffff0005, 0xb68, 0xffff0006, 0xb74, 0xffff0007, 0xb80, 0xffff0008, 0xb8c, 0xffff0009, 0xb98, 0xffff000a, 0xba4, 0xffff000e, 0xbb0, 0xffff000f, 0xbc0, 0xffff0010, 0xbd0, 0xffff0011, 0xbe0, 0xffff0012, 0xbf0, 0xffff0015, 0xc00, 0xffff0016, 0xc10, 0xffff0017, 0xc20, 0xffff0018, 0xc30, 0xffff0019, 0xc40, 0xffff001c, 0xc50, 0xffff001d, 0xc60, 0xffff0020, 0xc74, 0xffff0021, 0xc84, 0xffff0022, 0xc98, 0xffff0025, 0xcac, 0xffff0026, 0xcbc, 0xffff0027, 0xccc, 0xffff0028, 0xcdc, 0xffff002a, 0xcec, 0xffff002b, 0xcfc, 0xffff002c, 0xd0c, 0xffff002d, 0xd1c, 0xffff0030, 0xd2c, 0xffff0031, 0xd3c, 0xffff0032, 0xd50, 0xffff0033, 0xd64, 0xffff0036, 0xd74, 0xffff0037, 0xd84, 0xffff0038, 0xd98, 0xffff0039, 0xdac, 0xffff003c, 0xdbc, 0xffff003d, 0xdcc, 0xffff003e, 0xde0, 0xffff003f, 0xdf4, 0xffff0042, 0xe04, 0xffff0043, 0xe14, 0xffff0044, 0xe28, 0xffff0045, 0xe3c, 0xffff0048, 0xe4c, 0xffff0049, 0xe5c, 0xffff004a, 0xe6c, 0xffff004b, 0xe7c, 0xffff004d, 0xe8c, 0xffff004e, 0xe9c, 0xffff004f, 0xeac, 0xffff0050, 0xebc, 0xffff0053, 0xecc, 0xffff0054, 0xedc, 0xffff0055, 0xef0, 0xffff0056, 0xf04, 0xffff0059, 0xf14, 0xffff005a, 0xf24, 0xffff005b, 0xf38, 0xffff005c, 0xf4c, 0xffff005f, 0xf5c, 0xffff0060, 0xf6c, 0xffff0061, 0xf80, 0xffff0062, 0xf94, 0xffff0065, 0xfa4, 0xffff0066, 0xfb4, 0xffff0067, 0xfc8, 0xffff0068, 0xfdc, 0xffff006b, 0xfec, 0xffff006f, 0xffc, 0x322e7370, 0xa0d302e, 0x5f6c6364, 0x73206432, 0x640a0d30, 0x325f6c63, 0x31732064, 0x63640a0d, 0x64325f6c, 0xd337320, 0x6c63640a, 0x2e307420, 0xa0d7978, 0x206c6364, 0x782e3174, 0x640a0d79, 0x74206c63, 0x79782e32, 0xa0d777a, 0x206c6364, 0x782e3374, 0x640a0d79, 0x76206c63, 0x79782e30, 0xa0d777a, 0x206c6364, 0x782e3176, 0xa0d7a79, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d0a0d, 0x65740a0d, 0x20646c78, 0x202c3072, 0x202c3374, 0xa0d3373, 0x206c756d, 0x722e3072, 0x202c6267, 0x202c3072, 0xa0d3263, 0x20646461, 0x722e3072, 0x202c6267, 0x202c3072, 0xa0d3163, 0x20646461, 0x722e3172, 0x202c6267, 0x202c3176, 0xa0d3072, 0x20646461, 0x722e3072, 0x202c6267, 0x202c3076, 0xa0d3072, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d0a0d, 0x6c786574, 0x32722064, 0x3074202c, 0x3073202c, 0x756d0a0d, 0x3372206c, 0x3072202c, 0x3272202c, 0x756d0a0d, 0x61735f6c, 0x30722074, 0x3372202c, 0x3763202c, 0xa0d782e, 0x206c756d, 0x722e3172, 0x202c6267, 0x202c3172, 0xa0d3272, 0x5f6c756d, 0x20746173, 0x722e3172, 0x202c6267, 0x202c3172, 0x782e3763, 0x2f2f0a0d, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d2f2f, 0x65740a0d, 0x20646c78, 0x202c3472, 0x202c3174, 0xa0d3173, 0x2070726c, 0x722e3172, 0x202c6267, 0x202c3472, 0x202c3172, 0xa0d3072, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d0a0d, 0x20646461, 0x202c3472, 0x612e3472, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c347220, 0x2c347220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x33722070, 0x6267722e, 0x3472202c, 0x3072202c, 0x3172202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xa0d7365, 0x20646461, 0x782e3472, 0x63202c79, 0x202c3031, 0xa0d3174, 0x20646461, 0x782e3572, 0x63202c79, 0x202c3131, 0xa0d3174, 0x20646461, 0x782e3672, 0x63202c79, 0x202c3231, 0xa0d3174, 0x20646461, 0x782e3772, 0x63202c79, 0x202c3331, 0xa0d3174, 0x65740a0d, 0x20646c78, 0x202c3472, 0x202c3472, 0xa0d3173, 0x6c786574, 0x35722064, 0x3572202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3672, 0x202c3672, 0xa0d3173, 0x6c786574, 0x37722064, 0x3772202c, 0x3173202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd312065, 0x6464610a, 0x2c347220, 0x2e347220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x34722064, 0x3472202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e34, 0x72202c62, 0x72202c34, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d34, 0x202f2f0a, 0x706d6173, 0x3220656c, 0x64610a0d, 0x35722064, 0x3572202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c35, 0x63202c35, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3572, 0x202c6267, 0x202c3572, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3572, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d33, 0x72206464, 0x72202c36, 0x2c612e36, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3672, 0x202c3672, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e367220, 0x2c626772, 0x2c367220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd367220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3420, 0x20646461, 0x202c3772, 0x612e3772, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c377220, 0x2c377220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x37722070, 0x6267722e, 0x3772202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3772202c, 0xa0d0a0d, 0x6d202f2f, 0x2065726f, 0x706d6173, 0xd73656c, 0x6464610a, 0x2e347220, 0x202c7978, 0x2c343163, 0xd317420, 0x6464610a, 0x2e357220, 0x202c7978, 0x2c353163, 0xd317420, 0x6464610a, 0x2e367220, 0x202c7978, 0x2c363163, 0xd317420, 0x6464610a, 0x2e377220, 0x202c7978, 0x2c373163, 0xd317420, 0x740a0d0a, 0x646c7865, 0x2c347220, 0x2c347220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c35, 0x73202c35, 0x740a0d31, 0x646c7865, 0x2c367220, 0x2c367220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c37, 0x73202c37, 0xd0a0d31, 0x202f2f0a, 0x706d6173, 0x3120656c, 0x64610a0d, 0x34722064, 0x3472202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c34, 0x63202c34, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3472, 0x202c6267, 0x202c3472, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3472, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d32, 0x72206464, 0x72202c35, 0x2c612e35, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3572, 0x202c3572, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e357220, 0x2c626772, 0x2c357220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd357220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3320, 0x20646461, 0x202c3672, 0x612e3672, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c367220, 0x2c367220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x36722070, 0x6267722e, 0x3672202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3672202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd342065, 0x6464610a, 0x2c377220, 0x2e377220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x37722064, 0x3772202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e37, 0x72202c62, 0x72202c37, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d37, 0x202f2f0a, 0x6d726f6e, 0x7a696c61, 0x6f632065, 0xd726f6c, 0x6c756d0a, 0x2e337220, 0x2c626772, 0x2c337220, 0x2e386320, 0x2f0a0d78, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xd2f2f2f, 0xd0a0d0a, 0x766f6d0a, 0x30436f20, 0x3372202c, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x200001f, 0x90000000, 0xa00f0803, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x80000000, 0xb00f0002, 0x200001f, 0x80000000, 0xb0030003, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000000, 0x90070001, 0x3000042, 0x800f0000, 0xb0e40003, 0xa0e40803, 0x3000005, 0x80070000, 0x80e40000, 0xa0e40002, 0x3000002, 0x80070000, 0x80e40000, 0xa0e40001, 0x3000002, 0x80070001, 0x90e40001, 0x80e40000, 0x3000002, 0x80070000, 0x90e40000, 0x80e40000, 0x3000042, 0x800f0002, 0xb0e40000, 0xa0e40800, 0x3000005, 0x800f0003, 0x80e40000, 0x80e40002, 0x3000005, 0x801f0000, 0x80e40003, 0xa0000007, 0x3000005, 0x80070001, 0x80e40001, 0x80e40002, 0x3000005, 0x80170001, 0x80e40001, 0xa0000007, 0x3000042, 0x800f0004, 0xb0e40001, 0xa0e40801, 0x4000012, 0x80070001, 0x80e40004, 0x80e40001, 0x80e40000, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070003, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80030004, 0xa0e4000a, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000b, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e4000c, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e4000d, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000002, 0x80030004, 0xa0e4000e, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000f, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e40010, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e40011, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000005, 0x80070003, 0x80e40003, 0xa0000008, 0x2000001, 0x800f0800, 0x80e40003, 0xffff };
static SRenderState rsshaG5DiffuseTexLM[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG5DiffuseTexLM[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG5DiffuseTexLM[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG5DiffuseTexLM[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG5DiffuseTexLM( 57 , dwps11G5DiffuseTexLM,0,0,0, rsshaG5DiffuseTexLM, tssshaG5DiffuseTexLM, rsstateG5DiffuseTexLM, tssstateG5DiffuseTexLM );
static DWORD dwps11G5DiffuseTexDetailLM[] ={ 0xffff0200, 0x2ecfffe, 0x47554244, 0x28, 0xb77, 0x2a0, 0x0, 0x0, 0x4f, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xbb8, 0xffff0003, 0xbc4, 0xffff0004, 0xbd0, 0xffff0005, 0xbdc, 0xffff0006, 0xbe8, 0xffff0007, 0xbf4, 0xffff0008, 0xc00, 0xffff0009, 0xc0c, 0xffff000a, 0xc18, 0xffff000b, 0xc24, 0xffff000c, 0xc30, 0xffff0010, 0xc3c, 0xffff0011, 0xc4c, 0xffff0012, 0xc5c, 0xffff0013, 0xc6c, 0xffff0014, 0xc7c, 0xffff0017, 0xc8c, 0xffff0018, 0xc9c, 0xffff0019, 0xcac, 0xffff001a, 0xcbc, 0xffff001b, 0xccc, 0xffff001e, 0xcdc, 0xffff001f, 0xcec, 0xffff0022, 0xd00, 0xffff0023, 0xd10, 0xffff0024, 0xd24, 0xffff0027, 0xd38, 0xffff0028, 0xd48, 0xffff0029, 0xd58, 0xffff002a, 0xd68, 0xffff002c, 0xd78, 0xffff002d, 0xd88, 0xffff002e, 0xd98, 0xffff002f, 0xda8, 0xffff0032, 0xdb8, 0xffff0033, 0xdc8, 0xffff0034, 0xddc, 0xffff0035, 0xdf0, 0xffff0038, 0xe00, 0xffff0039, 0xe10, 0xffff003a, 0xe24, 0xffff003b, 0xe38, 0xffff003e, 0xe48, 0xffff003f, 0xe58, 0xffff0040, 0xe6c, 0xffff0041, 0xe80, 0xffff0044, 0xe90, 0xffff0045, 0xea0, 0xffff0046, 0xeb4, 0xffff0047, 0xec8, 0xffff004a, 0xed8, 0xffff004b, 0xee8, 0xffff004c, 0xef8, 0xffff004d, 0xf08, 0xffff004f, 0xf18, 0xffff0050, 0xf28, 0xffff0051, 0xf38, 0xffff0052, 0xf48, 0xffff0055, 0xf58, 0xffff0056, 0xf68, 0xffff0057, 0xf7c, 0xffff0058, 0xf90, 0xffff005b, 0xfa0, 0xffff005c, 0xfb0, 0xffff005d, 0xfc4, 0xffff005e, 0xfd8, 0xffff0061, 0xfe8, 0xffff0062, 0xff8, 0xffff0063, 0x100c, 0xffff0064, 0x1020, 0xffff0067, 0x1030, 0xffff0068, 0x1040, 0xffff0069, 0x1054, 0xffff006a, 0x1068, 0xffff006d, 0x1078, 0xffff0071, 0x1088, 0xffff0072, 0x1098, 0xffff0073, 0x10a8, 0xffff0075, 0x10b8, 0x322e7370, 0xa0d302e, 0x5f6c6364, 0x73206432, 0x640a0d30, 0x325f6c63, 0x31732064, 0x63640a0d, 0x64325f6c, 0xd337320, 0x6c63640a, 0x2064325f, 0xa0d3473, 0x206c6364, 0x782e3074, 0x640a0d79, 0x74206c63, 0x79782e31, 0x63640a0d, 0x3274206c, 0x7a79782e, 0x640a0d77, 0x74206c63, 0x79782e33, 0x63640a0d, 0x3474206c, 0xd79782e, 0x6c63640a, 0x2e307620, 0x777a7978, 0x63640a0d, 0x3176206c, 0x7a79782e, 0x2f2f0a0d, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d2f2f, 0xa0d0a0d, 0x6c786574, 0x30722064, 0x3374202c, 0x3373202c, 0x756d0a0d, 0x3072206c, 0x6267722e, 0x3072202c, 0x3263202c, 0x64610a0d, 0x30722064, 0x6267722e, 0x3072202c, 0x3163202c, 0x64610a0d, 0x31722064, 0x6267722e, 0x3176202c, 0x3072202c, 0x64610a0d, 0x30722064, 0x6267722e, 0x3076202c, 0x3072202c, 0x2f2f0a0d, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d2f2f, 0x65740a0d, 0x20646c78, 0x202c3272, 0x202c3074, 0xa0d3073, 0x206c756d, 0x202c3372, 0x202c3072, 0xa0d3272, 0x5f6c756d, 0x20746173, 0x202c3072, 0x202c3372, 0x782e3763, 0x756d0a0d, 0x3172206c, 0x6267722e, 0x3172202c, 0x3272202c, 0x756d0a0d, 0x61735f6c, 0x31722074, 0x6267722e, 0x3172202c, 0x3763202c, 0xa0d782e, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d0a0d, 0x6c786574, 0x34722064, 0x3174202c, 0x3173202c, 0x726c0a0d, 0x31722070, 0x6267722e, 0x3472202c, 0x3172202c, 0x3072202c, 0x2f2f0a0d, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d2f2f, 0x64610a0d, 0x34722064, 0x3472202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c34, 0x63202c34, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3372, 0x202c6267, 0x202c3472, 0x202c3072, 0xa0d3172, 0x2f2f0a0d, 0x6d617320, 0x73656c70, 0x64610a0d, 0x34722064, 0x2c79782e, 0x30316320, 0x3174202c, 0x64610a0d, 0x35722064, 0x2c79782e, 0x31316320, 0x3174202c, 0x64610a0d, 0x36722064, 0x2c79782e, 0x32316320, 0x3174202c, 0x64610a0d, 0x37722064, 0x2c79782e, 0x33316320, 0x3174202c, 0xa0d0a0d, 0x6c786574, 0x34722064, 0x3472202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3572, 0x202c3572, 0xa0d3173, 0x6c786574, 0x36722064, 0x3672202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3772, 0x202c3772, 0xa0d3173, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d31, 0x72206464, 0x72202c34, 0x2c612e34, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3472, 0x202c3472, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e347220, 0x2c626772, 0x2c347220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd347220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3220, 0x20646461, 0x202c3572, 0x612e3572, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c357220, 0x2c357220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x35722070, 0x6267722e, 0x3572202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3572202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd332065, 0x6464610a, 0x2c367220, 0x2e367220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x36722064, 0x3672202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e36, 0x72202c62, 0x72202c36, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d36, 0x202f2f0a, 0x706d6173, 0x3420656c, 0x64610a0d, 0x37722064, 0x3772202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c37, 0x63202c37, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3772, 0x202c6267, 0x202c3772, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3772, 0x2f2f0a0d, 0x726f6d20, 0x61732065, 0x656c706d, 0x610a0d73, 0x72206464, 0x79782e34, 0x3163202c, 0x74202c34, 0x610a0d31, 0x72206464, 0x79782e35, 0x3163202c, 0x74202c35, 0x610a0d31, 0x72206464, 0x79782e36, 0x3163202c, 0x74202c36, 0x610a0d31, 0x72206464, 0x79782e37, 0x3163202c, 0x74202c37, 0xd0a0d31, 0x7865740a, 0x7220646c, 0x72202c34, 0x73202c34, 0x740a0d31, 0x646c7865, 0x2c357220, 0x2c357220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c36, 0x73202c36, 0x740a0d31, 0x646c7865, 0x2c377220, 0x2c377220, 0xd317320, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3120, 0x20646461, 0x202c3472, 0x612e3472, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c347220, 0x2c347220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x34722070, 0x6267722e, 0x3472202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3472202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd322065, 0x6464610a, 0x2c357220, 0x2e357220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x35722064, 0x3572202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e35, 0x72202c62, 0x72202c35, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d35, 0x202f2f0a, 0x706d6173, 0x3320656c, 0x64610a0d, 0x36722064, 0x3672202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c36, 0x63202c36, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3672, 0x202c6267, 0x202c3672, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3672, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d34, 0x72206464, 0x72202c37, 0x2c612e37, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3772, 0x202c3772, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e377220, 0x2c626772, 0x2c377220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd377220, 0x2f0a0d0a, 0x6f6e202f, 0x6c616d72, 0x20657a69, 0x6f6c6f63, 0x6d0a0d72, 0x72206c75, 0x67722e33, 0x72202c62, 0x63202c33, 0xd782e38, 0x2f2f2f0a, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xd0a0d2f, 0x740a0d0a, 0x646c7865, 0x2c307220, 0x2c347420, 0xd347320, 0x6c756d0a, 0x2c337220, 0x2c337220, 0xd307220, 0x6c756d0a, 0x2c337220, 0x2c337220, 0x2e376320, 0xd0a0d79, 0x766f6d0a, 0x30436f20, 0x3372202c, 0x4d000a0d, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x73412072, 0x626d6573, 0x2072656c, 0x34302e35, 0x2e30302e, 0x34303932, 0xababab00, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x200001f, 0x90000000, 0xa00f0803, 0x200001f, 0x90000000, 0xa00f0804, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x80000000, 0xb00f0002, 0x200001f, 0x80000000, 0xb0030003, 0x200001f, 0x80000000, 0xb0030004, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000000, 0x90070001, 0x3000042, 0x800f0000, 0xb0e40003, 0xa0e40803, 0x3000005, 0x80070000, 0x80e40000, 0xa0e40002, 0x3000002, 0x80070000, 0x80e40000, 0xa0e40001, 0x3000002, 0x80070001, 0x90e40001, 0x80e40000, 0x3000002, 0x80070000, 0x90e40000, 0x80e40000, 0x3000042, 0x800f0002, 0xb0e40000, 0xa0e40800, 0x3000005, 0x800f0003, 0x80e40000, 0x80e40002, 0x3000005, 0x801f0000, 0x80e40003, 0xa0000007, 0x3000005, 0x80070001, 0x80e40001, 0x80e40002, 0x3000005, 0x80170001, 0x80e40001, 0xa0000007, 0x3000042, 0x800f0004, 0xb0e40001, 0xa0e40801, 0x4000012, 0x80070001, 0x80e40004, 0x80e40001, 0x80e40000, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070003, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80030004, 0xa0e4000a, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000b, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e4000c, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e4000d, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000002, 0x80030004, 0xa0e4000e, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000f, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e40010, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e40011, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000005, 0x80070003, 0x80e40003, 0xa0000008, 0x3000042, 0x800f0000, 0xb0e40004, 0xa0e40804, 0x3000005, 0x800f0003, 0x80e40003, 0x80e40000, 0x3000005, 0x800f0003, 0x80e40003, 0xa0550007, 0x2000001, 0x800f0800, 0x80e40003, 0xffff };
static SRenderState rsshaG5DiffuseTexDetailLM[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG5DiffuseTexDetailLM[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG5DiffuseTexDetailLM[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG5DiffuseTexDetailLM[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG5DiffuseTexDetailLM( 58 , dwps11G5DiffuseTexDetailLM,0,0,0, rsshaG5DiffuseTexDetailLM, tssshaG5DiffuseTexDetailLM, rsstateG5DiffuseTexDetailLM, tssstateG5DiffuseTexDetailLM );
static DWORD dwps11G5DiffuseTexSpec[] ={ 0xffff0200, 0x2d0fffe, 0x47554244, 0x28, 0xb08, 0x2d0, 0x0, 0x0, 0x55, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xb48, 0xffff0003, 0xb54, 0xffff0004, 0xb60, 0xffff0005, 0xb6c, 0xffff0006, 0xb78, 0xffff0007, 0xb84, 0xffff0008, 0xb90, 0xffff0009, 0xb9c, 0xffff000a, 0xba8, 0xffff000b, 0xbb4, 0xffff000c, 0xbc0, 0xffff000f, 0xbcc, 0xffff0010, 0xbdc, 0xffff0011, 0xbec, 0xffff0012, 0xbfc, 0xffff0013, 0xc0c, 0xffff0014, 0xc1c, 0xffff0015, 0xc2c, 0xffff0016, 0xc3c, 0xffff0017, 0xc4c, 0xffff0018, 0xc60, 0xffff0019, 0xc70, 0xffff001a, 0xc84, 0xffff001b, 0xc94, 0xffff001c, 0xca8, 0xffff001d, 0xcb8, 0xffff001e, 0xcc8, 0xffff001f, 0xcdc, 0xffff0020, 0xce8, 0xffff0022, 0xcf4, 0xffff0023, 0xd04, 0xffff0024, 0xd18, 0xffff0027, 0xd2c, 0xffff0028, 0xd3c, 0xffff0029, 0xd4c, 0xffff002a, 0xd5c, 0xffff002c, 0xd6c, 0xffff002d, 0xd7c, 0xffff002e, 0xd8c, 0xffff002f, 0xd9c, 0xffff0032, 0xdac, 0xffff0033, 0xdbc, 0xffff0034, 0xdd0, 0xffff0035, 0xde4, 0xffff0038, 0xdf4, 0xffff0039, 0xe04, 0xffff003a, 0xe18, 0xffff003b, 0xe2c, 0xffff003e, 0xe3c, 0xffff003f, 0xe4c, 0xffff0040, 0xe60, 0xffff0041, 0xe74, 0xffff0044, 0xe84, 0xffff0045, 0xe94, 0xffff0046, 0xea8, 0xffff0047, 0xebc, 0xffff004a, 0xecc, 0xffff004b, 0xedc, 0xffff004c, 0xeec, 0xffff004d, 0xefc, 0xffff004f, 0xf0c, 0xffff0050, 0xf1c, 0xffff0051, 0xf2c, 0xffff0052, 0xf3c, 0xffff0055, 0xf4c, 0xffff0056, 0xf5c, 0xffff0057, 0xf70, 0xffff0058, 0xf84, 0xffff005b, 0xf94, 0xffff005c, 0xfa4, 0xffff005d, 0xfb8, 0xffff005e, 0xfcc, 0xffff0061, 0xfdc, 0xffff0062, 0xfec, 0xffff0063, 0x1000, 0xffff0064, 0x1014, 0xffff0067, 0x1024, 0xffff0068, 0x1034, 0xffff0069, 0x1048, 0xffff006a, 0x105c, 0xffff006d, 0x106c, 0xffff0071, 0x107c, 0xffff0072, 0x108c, 0xffff0073, 0x109c, 0xffff0075, 0x10ac, 0x322e7370, 0xa0d302e, 0x5f6c6364, 0x73206432, 0x640a0d30, 0x325f6c63, 0x31732064, 0x63640a0d, 0x64325f6c, 0xd337320, 0x6c63640a, 0x6275635f, 0x34732065, 0x63640a0d, 0x3074206c, 0xd79782e, 0x6c63640a, 0x2e317420, 0xa0d7978, 0x206c6364, 0x782e3274, 0xd777a79, 0x6c63640a, 0x2e337420, 0xa0d7978, 0x206c6364, 0x782e3474, 0xa0d7a79, 0x206c6364, 0x782e3076, 0xd777a79, 0x6c63640a, 0x2e317620, 0xd7a7978, 0x2f2f2f0a, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xd0a0d2f, 0x7865740a, 0x7220646c, 0x74202c30, 0x73202c30, 0x740a0d30, 0x646c7865, 0x2c317220, 0x2c317420, 0xd317320, 0x7865740a, 0x7220646c, 0x74202c33, 0x73202c33, 0x740a0d33, 0x646c7865, 0x2c347220, 0x2c347420, 0xd347320, 0x6c756d0a, 0x2e357220, 0x2c626772, 0x2c317620, 0xd307220, 0x6c756d0a, 0x7461735f, 0x2e357220, 0x2c626772, 0x2c357220, 0x2e376320, 0x6d0a0d78, 0x72206c75, 0x67722e32, 0x72202c62, 0x2c612e34, 0x2e347220, 0x6d0a0d61, 0x72206c75, 0x2c612e32, 0x2e347220, 0x63202c61, 0x6d0a0d30, 0x72206461, 0x2c612e32, 0x2e327220, 0x63202c62, 0x72202c31, 0xd612e32, 0x6c756d0a, 0x2e327220, 0x2c626772, 0x2c327220, 0xd327220, 0x64616d0a, 0x2e327220, 0x72202c61, 0x2c622e32, 0x2c326320, 0x2e327220, 0x6d0a0d61, 0x72206c75, 0x67722e32, 0x72202c62, 0x63202c33, 0x6d0a0d35, 0x72206461, 0x67722e35, 0x72202c62, 0x2c612e32, 0x2c327220, 0xd357220, 0x6c756d0a, 0x2c337220, 0x2c307620, 0xd307220, 0x6c756d0a, 0x7461735f, 0x2e337220, 0x2c626772, 0x2c337220, 0x2e376320, 0x6c0a0d78, 0x72207072, 0x67722e33, 0x72202c62, 0x72202c31, 0x72202c33, 0x6d0a0d35, 0x7220766f, 0x67722e30, 0x72202c62, 0x6d0a0d33, 0x7220766f, 0x67722e31, 0x72202c62, 0xd0a0d35, 0x6464610a, 0x2c347220, 0x2e347220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x34722064, 0x3472202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e33, 0x72202c62, 0x72202c34, 0x72202c30, 0xd0a0d31, 0x202f2f0a, 0x706d6173, 0xd73656c, 0x6464610a, 0x2e347220, 0x202c7978, 0x2c303163, 0xd317420, 0x6464610a, 0x2e357220, 0x202c7978, 0x2c313163, 0xd317420, 0x6464610a, 0x2e367220, 0x202c7978, 0x2c323163, 0xd317420, 0x6464610a, 0x2e377220, 0x202c7978, 0x2c333163, 0xd317420, 0x740a0d0a, 0x646c7865, 0x2c347220, 0x2c347220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c35, 0x73202c35, 0x740a0d31, 0x646c7865, 0x2c367220, 0x2c367220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c37, 0x73202c37, 0xd0a0d31, 0x202f2f0a, 0x706d6173, 0x3120656c, 0x64610a0d, 0x34722064, 0x3472202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c34, 0x63202c34, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3472, 0x202c6267, 0x202c3472, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3472, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d32, 0x72206464, 0x72202c35, 0x2c612e35, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3572, 0x202c3572, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e357220, 0x2c626772, 0x2c357220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd357220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3320, 0x20646461, 0x202c3672, 0x612e3672, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c367220, 0x2c367220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x36722070, 0x6267722e, 0x3672202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3672202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd342065, 0x6464610a, 0x2c377220, 0x2e377220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x37722064, 0x3772202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e37, 0x72202c62, 0x72202c37, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d37, 0x202f2f0a, 0x65726f6d, 0x6d617320, 0x73656c70, 0x64610a0d, 0x34722064, 0x2c79782e, 0x34316320, 0x3174202c, 0x64610a0d, 0x35722064, 0x2c79782e, 0x35316320, 0x3174202c, 0x64610a0d, 0x36722064, 0x2c79782e, 0x36316320, 0x3174202c, 0x64610a0d, 0x37722064, 0x2c79782e, 0x37316320, 0x3174202c, 0xa0d0a0d, 0x6c786574, 0x34722064, 0x3472202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3572, 0x202c3572, 0xa0d3173, 0x6c786574, 0x36722064, 0x3672202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3772, 0x202c3772, 0xa0d3173, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d31, 0x72206464, 0x72202c34, 0x2c612e34, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3472, 0x202c3472, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e347220, 0x2c626772, 0x2c347220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd347220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3220, 0x20646461, 0x202c3572, 0x612e3572, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c357220, 0x2c357220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x35722070, 0x6267722e, 0x3572202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3572202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd332065, 0x6464610a, 0x2c367220, 0x2e367220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x36722064, 0x3672202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e36, 0x72202c62, 0x72202c36, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d36, 0x202f2f0a, 0x706d6173, 0x3420656c, 0x64610a0d, 0x37722064, 0x3772202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c37, 0x63202c37, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3772, 0x202c6267, 0x202c3772, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3772, 0x2f2f0a0d, 0x726f6e20, 0x696c616d, 0x6320657a, 0x726f6c6f, 0x756d0a0d, 0x3372206c, 0x6267722e, 0x3372202c, 0x3863202c, 0xa0d782e, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d0a0d, 0x70640a0d, 0x31722033, 0x202c612e, 0x202c3076, 0x772e3563, 0x756d0a0d, 0x61735f6c, 0x31722074, 0x202c612e, 0x202c3172, 0x782e3763, 0x756d0a0d, 0x3372206c, 0x6267722e, 0x3372202c, 0x3172202c, 0xa0d612e, 0x6f6d0a0d, 0x436f2076, 0x72202c30, 0xa0d33, 0x7263694d, 0x666f736f, 0x52282074, 0x33442029, 0x20395844, 0x64616853, 0x41207265, 0x6d657373, 0x72656c62, 0x302e3520, 0x30302e34, 0x3039322e, 0xabab0034, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x200001f, 0x90000000, 0xa00f0803, 0x200001f, 0x98000000, 0xa00f0804, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x80000000, 0xb00f0002, 0x200001f, 0x80000000, 0xb0030003, 0x200001f, 0x80000000, 0xb0070004, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000000, 0x90070001, 0x3000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 0x3000042, 0x800f0001, 0xb0e40001, 0xa0e40801, 0x3000042, 0x800f0003, 0xb0e40003, 0xa0e40803, 0x3000042, 0x800f0004, 0xb0e40004, 0xa0e40804, 0x3000005, 0x80070005, 0x90e40001, 0x80e40000, 0x3000005, 0x80170005, 0x80e40005, 0xa0000007, 0x3000005, 0x80070002, 0x80ff0004, 0x80ff0004, 0x3000005, 0x80080002, 0x80ff0004, 0xa0e40000, 0x4000004, 0x80080002, 0x80aa0002, 0xa0e40001, 0x80ff0002, 0x3000005, 0x80070002, 0x80e40002, 0x80e40002, 0x4000004, 0x80080002, 0x80aa0002, 0xa0e40002, 0x80ff0002, 0x3000005, 0x80070002, 0x80e40003, 0xa0e40005, 0x4000004, 0x80070005, 0x80ff0002, 0x80e40002, 0x80e40005, 0x3000005, 0x800f0003, 0x90e40000, 0x80e40000, 0x3000005, 0x80170003, 0x80e40003, 0xa0000007, 0x4000012, 0x80070003, 0x80e40001, 0x80e40003, 0x80e40005, 0x2000001, 0x80070000, 0x80e40003, 0x2000001, 0x80070001, 0x80e40005, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070003, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80030004, 0xa0e4000a, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000b, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e4000c, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e4000d, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000002, 0x80030004, 0xa0e4000e, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000f, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e40010, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e40011, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000005, 0x80070003, 0x80e40003, 0xa0000008, 0x3000008, 0x80080001, 0x90e40000, 0xa0ff0005, 0x3000005, 0x80180001, 0x80e40001, 0xa0000007, 0x3000005, 0x80070003, 0x80e40003, 0x80ff0001, 0x2000001, 0x800f0800, 0x80e40003, 0xffff };
static SRenderState rsshaG5DiffuseTexSpec[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG5DiffuseTexSpec[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG5DiffuseTexSpec[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG5DiffuseTexSpec[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG5DiffuseTexSpec( 59 , dwps11G5DiffuseTexSpec,0,0,0, rsshaG5DiffuseTexSpec, tssshaG5DiffuseTexSpec, rsstateG5DiffuseTexSpec, tssstateG5DiffuseTexSpec );
static DWORD dwps11G5DiffuseTexSpecLM[] ={ 0xffff0200, 0x2f1fffe, 0x47554244, 0x28, 0xb8d, 0x2f0, 0x0, 0x0, 0x59, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xbcc, 0xffff0003, 0xbd8, 0xffff0004, 0xbe4, 0xffff0005, 0xbf0, 0xffff0006, 0xbfc, 0xffff0007, 0xc08, 0xffff0008, 0xc14, 0xffff0009, 0xc20, 0xffff000a, 0xc2c, 0xffff000b, 0xc38, 0xffff000c, 0xc44, 0xffff000d, 0xc50, 0xffff000e, 0xc5c, 0xffff0012, 0xc68, 0xffff0013, 0xc78, 0xffff0014, 0xc88, 0xffff0015, 0xc98, 0xffff0017, 0xca8, 0xffff0018, 0xcbc, 0xffff001a, 0xccc, 0xffff001b, 0xce0, 0xffff001c, 0xcf0, 0xffff001e, 0xd00, 0xffff001f, 0xd10, 0xffff0020, 0xd20, 0xffff0023, 0xd30, 0xffff0024, 0xd40, 0xffff0026, 0xd50, 0xffff0027, 0xd60, 0xffff0028, 0xd70, 0xffff0029, 0xd80, 0xffff002a, 0xd90, 0xffff002b, 0xda0, 0xffff002c, 0xdb0, 0xffff002e, 0xdc0, 0xffff002f, 0xdd4, 0xffff0031, 0xde4, 0xffff0032, 0xdf4, 0xffff0033, 0xe08, 0xffff0036, 0xe1c, 0xffff0037, 0xe2c, 0xffff0038, 0xe3c, 0xffff0039, 0xe4c, 0xffff003b, 0xe5c, 0xffff003c, 0xe6c, 0xffff003d, 0xe7c, 0xffff003e, 0xe8c, 0xffff0041, 0xe9c, 0xffff0042, 0xeac, 0xffff0043, 0xec0, 0xffff0044, 0xed4, 0xffff0047, 0xee4, 0xffff0048, 0xef4, 0xffff0049, 0xf08, 0xffff004a, 0xf1c, 0xffff004d, 0xf2c, 0xffff004e, 0xf3c, 0xffff004f, 0xf50, 0xffff0050, 0xf64, 0xffff0053, 0xf74, 0xffff0054, 0xf84, 0xffff0055, 0xf98, 0xffff0056, 0xfac, 0xffff0059, 0xfbc, 0xffff005a, 0xfcc, 0xffff005b, 0xfdc, 0xffff005c, 0xfec, 0xffff005e, 0xffc, 0xffff005f, 0x100c, 0xffff0060, 0x101c, 0xffff0061, 0x102c, 0xffff0064, 0x103c, 0xffff0065, 0x104c, 0xffff0066, 0x1060, 0xffff0067, 0x1074, 0xffff006a, 0x1084, 0xffff006b, 0x1094, 0xffff006c, 0x10a8, 0xffff006d, 0x10bc, 0xffff0070, 0x10cc, 0xffff0071, 0x10dc, 0xffff0072, 0x10f0, 0xffff0073, 0x1104, 0xffff0076, 0x1114, 0xffff0077, 0x1124, 0xffff0078, 0x1138, 0xffff0079, 0x114c, 0xffff007c, 0x115c, 0xffff0080, 0x116c, 0x322e7370, 0xa0d302e, 0x5f6c6364, 0x73206432, 0x640a0d30, 0x325f6c63, 0x31732064, 0x63640a0d, 0x64325f6c, 0xd337320, 0x6c63640a, 0x6275635f, 0x34732065, 0x63640a0d, 0x64325f6c, 0xd357320, 0x6c63640a, 0x2e307420, 0xa0d7978, 0x206c6364, 0x782e3174, 0x640a0d79, 0x74206c63, 0x79782e32, 0xa0d777a, 0x206c6364, 0x782e3374, 0x640a0d79, 0x74206c63, 0x79782e34, 0x640a0d7a, 0x74206c63, 0x79782e35, 0x63640a0d, 0x3076206c, 0x7a79782e, 0x640a0d77, 0x76206c63, 0x79782e31, 0x2f0a0d7a, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xd2f2f2f, 0xd0a0d0a, 0x7865740a, 0x7220646c, 0x74202c32, 0x73202c33, 0x740a0d33, 0x646c7865, 0x2c337220, 0x2c347420, 0xd347320, 0x6c756d0a, 0x2e307220, 0x2c626772, 0x2e337220, 0x72202c61, 0xd612e33, 0x6c756d0a, 0x2e307220, 0x72202c61, 0x2c612e33, 0xd306320, 0x6d0a0d0a, 0x72206461, 0x2c612e30, 0x2e307220, 0x63202c62, 0x72202c31, 0xd612e30, 0x6c756d0a, 0x2e307220, 0x2c626772, 0x2c307220, 0xd307220, 0x6d0a0d0a, 0x72206461, 0x2c612e30, 0x2e307220, 0x63202c62, 0x72202c32, 0xd612e30, 0x6c756d0a, 0x2e307220, 0x2c626772, 0x2c327220, 0xd356320, 0x6c756d0a, 0x2e327220, 0x2c626772, 0x2e307220, 0x72202c61, 0xd0a0d30, 0x7865740a, 0x7220646c, 0x74202c33, 0x73202c30, 0x740a0d30, 0x646c7865, 0x2c347220, 0x2c317420, 0xd317320, 0x7865740a, 0x7220646c, 0x74202c31, 0x73202c35, 0xd0a0d35, 0x616d3b0a, 0x31722064, 0x6267722e, 0x3172202c, 0x3363202c, 0x3463202c, 0x756d0a0d, 0x3172206c, 0x6267722e, 0x3172202c, 0x3363202c, 0x64610a0d, 0x31722064, 0x6267722e, 0x3172202c, 0x3463202c, 0xa0d0a0d, 0x20646461, 0x722e3072, 0x202c6267, 0x202c3076, 0xa0d3172, 0x20646461, 0x722e3172, 0x202c6267, 0x202c3176, 0xa0d3172, 0x206c756d, 0x722e3172, 0x202c6267, 0x202c3172, 0xa0d3372, 0x5f6c756d, 0x20746173, 0x722e3172, 0x202c6267, 0x202c3172, 0x782e3763, 0x64610a0d, 0x31722064, 0x6267722e, 0x3272202c, 0x3172202c, 0x756d0a0d, 0x3072206c, 0x6267722e, 0x3072202c, 0x3372202c, 0x756d0a0d, 0x61735f6c, 0x30722074, 0x6267722e, 0x3072202c, 0x3763202c, 0xa0d782e, 0x726c0a0d, 0x30722070, 0x6267722e, 0x3472202c, 0x3072202c, 0x3172202c, 0x756d0a0d, 0x3372206c, 0x202c612e, 0x612e3372, 0x3076202c, 0xa0d612e, 0x64610a0d, 0x34722064, 0x3472202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c34, 0x63202c34, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3372, 0x202c6267, 0x202c3472, 0x202c3072, 0xa0d3172, 0x2f2f0a0d, 0x6d617320, 0x73656c70, 0x64610a0d, 0x34722064, 0x2c79782e, 0x30316320, 0x3174202c, 0x64610a0d, 0x35722064, 0x2c79782e, 0x31316320, 0x3174202c, 0x64610a0d, 0x36722064, 0x2c79782e, 0x32316320, 0x3174202c, 0x64610a0d, 0x37722064, 0x2c79782e, 0x33316320, 0x3174202c, 0xa0d0a0d, 0x6c786574, 0x34722064, 0x3472202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3572, 0x202c3572, 0xa0d3173, 0x6c786574, 0x36722064, 0x3672202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3772, 0x202c3772, 0xa0d3173, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d31, 0x72206464, 0x72202c34, 0x2c612e34, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3472, 0x202c3472, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e347220, 0x2c626772, 0x2c347220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd347220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3220, 0x20646461, 0x202c3572, 0x612e3572, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c357220, 0x2c357220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x35722070, 0x6267722e, 0x3572202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3572202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd332065, 0x6464610a, 0x2c367220, 0x2e367220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x36722064, 0x3672202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e36, 0x72202c62, 0x72202c36, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d36, 0x202f2f0a, 0x706d6173, 0x3420656c, 0x64610a0d, 0x37722064, 0x3772202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c37, 0x63202c37, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3772, 0x202c6267, 0x202c3772, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3772, 0x2f2f0a0d, 0x726f6d20, 0x61732065, 0x656c706d, 0x610a0d73, 0x72206464, 0x79782e34, 0x3163202c, 0x74202c34, 0x610a0d31, 0x72206464, 0x79782e35, 0x3163202c, 0x74202c35, 0x610a0d31, 0x72206464, 0x79782e36, 0x3163202c, 0x74202c36, 0x610a0d31, 0x72206464, 0x79782e37, 0x3163202c, 0x74202c37, 0xd0a0d31, 0x7865740a, 0x7220646c, 0x72202c34, 0x73202c34, 0x740a0d31, 0x646c7865, 0x2c357220, 0x2c357220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c36, 0x73202c36, 0x740a0d31, 0x646c7865, 0x2c377220, 0x2c377220, 0xd317320, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3120, 0x20646461, 0x202c3472, 0x612e3472, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c347220, 0x2c347220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x34722070, 0x6267722e, 0x3472202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3472202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd322065, 0x6464610a, 0x2c357220, 0x2e357220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x35722064, 0x3572202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e35, 0x72202c62, 0x72202c35, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d35, 0x202f2f0a, 0x706d6173, 0x3320656c, 0x64610a0d, 0x36722064, 0x3672202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c36, 0x63202c36, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3672, 0x202c6267, 0x202c3672, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3672, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d34, 0x72206464, 0x72202c37, 0x2c612e37, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3772, 0x202c3772, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e377220, 0x2c626772, 0x2c377220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd377220, 0x2f0a0d0a, 0x6f6e202f, 0x6c616d72, 0x20657a69, 0x6f6c6f63, 0x6d0a0d72, 0x72206c75, 0x67722e33, 0x72202c62, 0x63202c33, 0xd782e38, 0x2f2f2f0a, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xd0a0d2f, 0x6d0a0d0a, 0x6f20766f, 0x202c3043, 0xa0d3372, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x200001f, 0x90000000, 0xa00f0803, 0x200001f, 0x98000000, 0xa00f0804, 0x200001f, 0x90000000, 0xa00f0805, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x80000000, 0xb00f0002, 0x200001f, 0x80000000, 0xb0030003, 0x200001f, 0x80000000, 0xb0070004, 0x200001f, 0x80000000, 0xb0030005, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000000, 0x90070001, 0x3000042, 0x800f0002, 0xb0e40003, 0xa0e40803, 0x3000042, 0x800f0003, 0xb0e40004, 0xa0e40804, 0x3000005, 0x80070000, 0x80ff0003, 0x80ff0003, 0x3000005, 0x80080000, 0x80ff0003, 0xa0e40000, 0x4000004, 0x80080000, 0x80aa0000, 0xa0e40001, 0x80ff0000, 0x3000005, 0x80070000, 0x80e40000, 0x80e40000, 0x4000004, 0x80080000, 0x80aa0000, 0xa0e40002, 0x80ff0000, 0x3000005, 0x80070000, 0x80e40002, 0xa0e40005, 0x3000005, 0x80070002, 0x80ff0000, 0x80e40000, 0x3000042, 0x800f0003, 0xb0e40000, 0xa0e40800, 0x3000042, 0x800f0004, 0xb0e40001, 0xa0e40801, 0x3000042, 0x800f0001, 0xb0e40005, 0xa0e40805, 0x3000005, 0x80070001, 0x80e40001, 0xa0e40003, 0x3000002, 0x80070001, 0x80e40001, 0xa0e40004, 0x3000002, 0x80070000, 0x90e40000, 0x80e40001, 0x3000002, 0x80070001, 0x90e40001, 0x80e40001, 0x3000005, 0x80070001, 0x80e40001, 0x80e40003, 0x3000005, 0x80170001, 0x80e40001, 0xa0000007, 0x3000002, 0x80070001, 0x80e40002, 0x80e40001, 0x3000005, 0x80070000, 0x80e40000, 0x80e40003, 0x3000005, 0x80170000, 0x80e40000, 0xa0000007, 0x4000012, 0x80070000, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000005, 0x80080003, 0x80ff0003, 0x90ff0000, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070003, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80030004, 0xa0e4000a, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000b, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e4000c, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e4000d, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000002, 0x80030004, 0xa0e4000e, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000f, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e40010, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e40011, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000005, 0x80070003, 0x80e40003, 0xa0000008, 0x2000001, 0x800f0800, 0x80e40003, 0xffff };
static SRenderState rsshaG5DiffuseTexSpecLM[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG5DiffuseTexSpecLM[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG5DiffuseTexSpecLM[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG5DiffuseTexSpecLM[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG5DiffuseTexSpecLM( 60 , dwps11G5DiffuseTexSpecLM,0,0,0, rsshaG5DiffuseTexSpecLM, tssshaG5DiffuseTexSpecLM, rsstateG5DiffuseTexSpecLM, tssstateG5DiffuseTexSpecLM );
static DWORD dwps11G5DiffuseTexTerrain[] ={ 0xffff0200, 0x2c2fffe, 0x47554244, 0x28, 0xad2, 0x260, 0x0, 0x0, 0x47, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xb10, 0xffff0003, 0xb1c, 0xffff0004, 0xb28, 0xffff0005, 0xb34, 0xffff0006, 0xb40, 0xffff0007, 0xb4c, 0xffff0008, 0xb58, 0xffff000c, 0xb64, 0xffff000d, 0xb74, 0xffff000e, 0xb84, 0xffff000f, 0xb94, 0xffff0010, 0xba4, 0xffff0013, 0xbb4, 0xffff0014, 0xbc4, 0xffff0017, 0xbd8, 0xffff0018, 0xbe8, 0xffff0019, 0xbfc, 0xffff001c, 0xc10, 0xffff001d, 0xc20, 0xffff001e, 0xc30, 0xffff001f, 0xc40, 0xffff0021, 0xc50, 0xffff0022, 0xc60, 0xffff0023, 0xc70, 0xffff0024, 0xc80, 0xffff0027, 0xc90, 0xffff0028, 0xca0, 0xffff0029, 0xcb4, 0xffff002a, 0xcc8, 0xffff002d, 0xcd8, 0xffff002e, 0xce8, 0xffff002f, 0xcfc, 0xffff0030, 0xd10, 0xffff0033, 0xd20, 0xffff0034, 0xd30, 0xffff0035, 0xd44, 0xffff0036, 0xd58, 0xffff0039, 0xd68, 0xffff003a, 0xd78, 0xffff003b, 0xd8c, 0xffff003c, 0xda0, 0xffff003f, 0xdb0, 0xffff0040, 0xdc0, 0xffff0041, 0xdd0, 0xffff0042, 0xde0, 0xffff0044, 0xdf0, 0xffff0045, 0xe00, 0xffff0046, 0xe10, 0xffff0047, 0xe20, 0xffff004a, 0xe30, 0xffff004b, 0xe40, 0xffff004c, 0xe54, 0xffff004d, 0xe68, 0xffff0050, 0xe78, 0xffff0051, 0xe88, 0xffff0052, 0xe9c, 0xffff0053, 0xeb0, 0xffff0056, 0xec0, 0xffff0057, 0xed0, 0xffff0058, 0xee4, 0xffff0059, 0xef8, 0xffff005c, 0xf08, 0xffff005d, 0xf18, 0xffff005e, 0xf2c, 0xffff005f, 0xf40, 0xffff0062, 0xf50, 0xffff0066, 0xf60, 0xffff0067, 0xf74, 0xffff0068, 0xf84, 0xffff0069, 0xf94, 0xffff006d, 0xfa4, 0x322e7370, 0xa0d302e, 0x5f6c6364, 0x73206432, 0x640a0d30, 0x325f6c63, 0x31732064, 0x63640a0d, 0x3074206c, 0xd79782e, 0x6c63640a, 0x2e317420, 0xa0d7978, 0x206c6364, 0x782e3274, 0xd777a79, 0x6c63640a, 0x2e307620, 0x777a7978, 0x63640a0d, 0x3176206c, 0x7a79782e, 0x2f2f0a0d, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d2f2f, 0xa0d0a0d, 0x6c786574, 0x32722064, 0x3074202c, 0x3073202c, 0x756d0a0d, 0x3372206c, 0x3076202c, 0x3272202c, 0x756d0a0d, 0x61735f6c, 0x30722074, 0x3372202c, 0x3763202c, 0xa0d782e, 0x206c756d, 0x722e3172, 0x202c6267, 0x202c3176, 0xa0d3272, 0x5f6c756d, 0x20746173, 0x722e3172, 0x202c6267, 0x202c3172, 0x782e3763, 0x2f2f0a0d, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d2f2f, 0x65740a0d, 0x20646c78, 0x202c3472, 0x202c3174, 0xa0d3173, 0x2070726c, 0x722e3172, 0x202c6267, 0x202c3472, 0x202c3172, 0xa0d3072, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d0a0d, 0x20646461, 0x202c3472, 0x612e3472, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c347220, 0x2c347220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x33722070, 0x6267722e, 0x3472202c, 0x3072202c, 0x3172202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xa0d7365, 0x20646461, 0x782e3472, 0x63202c79, 0x202c3031, 0xa0d3174, 0x20646461, 0x782e3572, 0x63202c79, 0x202c3131, 0xa0d3174, 0x20646461, 0x782e3672, 0x63202c79, 0x202c3231, 0xa0d3174, 0x20646461, 0x782e3772, 0x63202c79, 0x202c3331, 0xa0d3174, 0x65740a0d, 0x20646c78, 0x202c3472, 0x202c3472, 0xa0d3173, 0x6c786574, 0x35722064, 0x3572202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3672, 0x202c3672, 0xa0d3173, 0x6c786574, 0x37722064, 0x3772202c, 0x3173202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd312065, 0x6464610a, 0x2c347220, 0x2e347220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x34722064, 0x3472202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e34, 0x72202c62, 0x72202c34, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d34, 0x202f2f0a, 0x706d6173, 0x3220656c, 0x64610a0d, 0x35722064, 0x3572202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c35, 0x63202c35, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3572, 0x202c6267, 0x202c3572, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3572, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d33, 0x72206464, 0x72202c36, 0x2c612e36, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3672, 0x202c3672, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e367220, 0x2c626772, 0x2c367220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd367220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3420, 0x20646461, 0x202c3772, 0x612e3772, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c377220, 0x2c377220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x37722070, 0x6267722e, 0x3772202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3772202c, 0xa0d0a0d, 0x6d202f2f, 0x2065726f, 0x706d6173, 0xd73656c, 0x6464610a, 0x2e347220, 0x202c7978, 0x2c343163, 0xd317420, 0x6464610a, 0x2e357220, 0x202c7978, 0x2c353163, 0xd317420, 0x6464610a, 0x2e367220, 0x202c7978, 0x2c363163, 0xd317420, 0x6464610a, 0x2e377220, 0x202c7978, 0x2c373163, 0xd317420, 0x740a0d0a, 0x646c7865, 0x2c347220, 0x2c347220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c35, 0x73202c35, 0x740a0d31, 0x646c7865, 0x2c367220, 0x2c367220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c37, 0x73202c37, 0xd0a0d31, 0x202f2f0a, 0x706d6173, 0x3120656c, 0x64610a0d, 0x34722064, 0x3472202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c34, 0x63202c34, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3472, 0x202c6267, 0x202c3472, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3472, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d32, 0x72206464, 0x72202c35, 0x2c612e35, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3572, 0x202c3572, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e357220, 0x2c626772, 0x2c357220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd357220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3320, 0x20646461, 0x202c3672, 0x612e3672, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c367220, 0x2c367220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x36722070, 0x6267722e, 0x3672202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3672202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd342065, 0x6464610a, 0x2c377220, 0x2e377220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x37722064, 0x3772202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e37, 0x72202c62, 0x72202c37, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d37, 0x202f2f0a, 0x6d726f6e, 0x7a696c61, 0x6f632065, 0xd726f6c, 0x6c756d0a, 0x2e337220, 0x2c626772, 0x2c337220, 0x2e386320, 0x2f0a0d78, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xd2f2f2f, 0xd0a0d0a, 0x64616d0a, 0x2c317220, 0x2e307620, 0x63202c77, 0x2c792e37, 0x37632d20, 0xa0d7a2e, 0x5f646461, 0x20746173, 0x612e3372, 0x3272202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x202c612e, 0x612e3372, 0x3363202c, 0xa0d612e, 0x206c756d, 0x612e3372, 0x3372202c, 0x202c612e, 0x782e3763, 0x2f2f0a0d, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d2f2f, 0xa0d0a0d, 0x20766f6d, 0x2c30436f, 0xd337220, 0x694d000a, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x80000000, 0xb00f0002, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000000, 0x90070001, 0x3000042, 0x800f0002, 0xb0e40000, 0xa0e40800, 0x3000005, 0x800f0003, 0x90e40000, 0x80e40002, 0x3000005, 0x801f0000, 0x80e40003, 0xa0000007, 0x3000005, 0x80070001, 0x90e40001, 0x80e40002, 0x3000005, 0x80170001, 0x80e40001, 0xa0000007, 0x3000042, 0x800f0004, 0xb0e40001, 0xa0e40801, 0x4000012, 0x80070001, 0x80e40004, 0x80e40001, 0x80e40000, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070003, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80030004, 0xa0e4000a, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000b, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e4000c, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e4000d, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000002, 0x80030004, 0xa0e4000e, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000f, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e40010, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e40011, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000005, 0x80070003, 0x80e40003, 0xa0000008, 0x4000004, 0x800f0001, 0x90ff0000, 0xa0550007, 0xa1aa0007, 0x3000002, 0x80180003, 0x80e40002, 0x80e40001, 0x3000002, 0x80080003, 0x80ff0003, 0xa0ff0003, 0x3000005, 0x80080003, 0x80ff0003, 0xa0000007, 0x2000001, 0x800f0800, 0x80e40003, 0xffff };
static SRenderState rsshaG5DiffuseTexTerrain[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG5DiffuseTexTerrain[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG5DiffuseTexTerrain[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG5DiffuseTexTerrain[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG5DiffuseTexTerrain( 61 , dwps11G5DiffuseTexTerrain,0,0,0, rsshaG5DiffuseTexTerrain, tssshaG5DiffuseTexTerrain, rsstateG5DiffuseTexTerrain, tssstateG5DiffuseTexTerrain );
static DWORD dwps11G5DiffuseTex2Terrain[] ={ 0xffff0200, 0x2dffffe, 0x47554244, 0x28, 0xb45, 0x280, 0x0, 0x0, 0x4b, 0x28, 0x0, 0x0, 0x0, 0xffff0002, 0xb84, 0xffff0003, 0xb90, 0xffff0004, 0xb9c, 0xffff0005, 0xba8, 0xffff0006, 0xbb4, 0xffff0007, 0xbc0, 0xffff0008, 0xbcc, 0xffff0009, 0xbd8, 0xffff000a, 0xbe4, 0xffff000e, 0xbf0, 0xffff000f, 0xc00, 0xffff0010, 0xc10, 0xffff0011, 0xc20, 0xffff0012, 0xc30, 0xffff0015, 0xc40, 0xffff0016, 0xc50, 0xffff0019, 0xc64, 0xffff001a, 0xc74, 0xffff001b, 0xc88, 0xffff001e, 0xc9c, 0xffff001f, 0xcac, 0xffff0020, 0xcbc, 0xffff0021, 0xccc, 0xffff0023, 0xcdc, 0xffff0024, 0xcec, 0xffff0025, 0xcfc, 0xffff0026, 0xd0c, 0xffff0029, 0xd1c, 0xffff002a, 0xd2c, 0xffff002b, 0xd40, 0xffff002c, 0xd54, 0xffff002f, 0xd64, 0xffff0030, 0xd74, 0xffff0031, 0xd88, 0xffff0032, 0xd9c, 0xffff0035, 0xdac, 0xffff0036, 0xdbc, 0xffff0037, 0xdd0, 0xffff0038, 0xde4, 0xffff003b, 0xdf4, 0xffff003c, 0xe04, 0xffff003d, 0xe18, 0xffff003e, 0xe2c, 0xffff0041, 0xe3c, 0xffff0042, 0xe4c, 0xffff0043, 0xe5c, 0xffff0044, 0xe6c, 0xffff0046, 0xe7c, 0xffff0047, 0xe8c, 0xffff0048, 0xe9c, 0xffff0049, 0xeac, 0xffff004c, 0xebc, 0xffff004d, 0xecc, 0xffff004e, 0xee0, 0xffff004f, 0xef4, 0xffff0052, 0xf04, 0xffff0053, 0xf14, 0xffff0054, 0xf28, 0xffff0055, 0xf3c, 0xffff0058, 0xf4c, 0xffff0059, 0xf5c, 0xffff005a, 0xf70, 0xffff005b, 0xf84, 0xffff005e, 0xf94, 0xffff005f, 0xfa4, 0xffff0060, 0xfb8, 0xffff0061, 0xfcc, 0xffff0064, 0xfdc, 0xffff0068, 0xfec, 0xffff0069, 0x1000, 0xffff006a, 0x1010, 0xffff006b, 0x1020, 0xffff0070, 0x1030, 0xffff0071, 0x1040, 0xffff0073, 0x1050, 0x322e7370, 0xa0d302e, 0x5f6c6364, 0x73206432, 0x640a0d30, 0x325f6c63, 0x31732064, 0x63640a0d, 0x64325f6c, 0xd337320, 0x6c63640a, 0x2e307420, 0xa0d7978, 0x206c6364, 0x782e3174, 0x640a0d79, 0x74206c63, 0x79782e32, 0xa0d777a, 0x206c6364, 0x782e3374, 0x640a0d79, 0x76206c63, 0x79782e30, 0xa0d777a, 0x206c6364, 0x782e3176, 0xa0d7a79, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d0a0d, 0x65740a0d, 0x20646c78, 0x202c3272, 0x202c3074, 0xa0d3073, 0x206c756d, 0x202c3372, 0x202c3076, 0xa0d3272, 0x5f6c756d, 0x20746173, 0x202c3072, 0x202c3372, 0x782e3763, 0x756d0a0d, 0x3172206c, 0x6267722e, 0x3176202c, 0x3272202c, 0x756d0a0d, 0x61735f6c, 0x31722074, 0x6267722e, 0x3172202c, 0x3763202c, 0xa0d782e, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d0a0d, 0x6c786574, 0x34722064, 0x3174202c, 0x3173202c, 0x726c0a0d, 0x31722070, 0x6267722e, 0x3472202c, 0x3172202c, 0x3072202c, 0x2f2f0a0d, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d2f2f, 0x64610a0d, 0x34722064, 0x3472202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c34, 0x63202c34, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3372, 0x202c6267, 0x202c3472, 0x202c3072, 0xa0d3172, 0x2f2f0a0d, 0x6d617320, 0x73656c70, 0x64610a0d, 0x34722064, 0x2c79782e, 0x30316320, 0x3174202c, 0x64610a0d, 0x35722064, 0x2c79782e, 0x31316320, 0x3174202c, 0x64610a0d, 0x36722064, 0x2c79782e, 0x32316320, 0x3174202c, 0x64610a0d, 0x37722064, 0x2c79782e, 0x33316320, 0x3174202c, 0xa0d0a0d, 0x6c786574, 0x34722064, 0x3472202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3572, 0x202c3572, 0xa0d3173, 0x6c786574, 0x36722064, 0x3672202c, 0x3173202c, 0x65740a0d, 0x20646c78, 0x202c3772, 0x202c3772, 0xa0d3173, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d31, 0x72206464, 0x72202c34, 0x2c612e34, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3472, 0x202c3472, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e347220, 0x2c626772, 0x2c347220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd347220, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3220, 0x20646461, 0x202c3572, 0x612e3572, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c357220, 0x2c357220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x35722070, 0x6267722e, 0x3572202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3572202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd332065, 0x6464610a, 0x2c367220, 0x2e367220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x36722064, 0x3672202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e36, 0x72202c62, 0x72202c36, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d36, 0x202f2f0a, 0x706d6173, 0x3420656c, 0x64610a0d, 0x37722064, 0x3772202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c37, 0x63202c37, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3772, 0x202c6267, 0x202c3772, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3772, 0x2f2f0a0d, 0x726f6d20, 0x61732065, 0x656c706d, 0x610a0d73, 0x72206464, 0x79782e34, 0x3163202c, 0x74202c34, 0x610a0d31, 0x72206464, 0x79782e35, 0x3163202c, 0x74202c35, 0x610a0d31, 0x72206464, 0x79782e36, 0x3163202c, 0x74202c36, 0x610a0d31, 0x72206464, 0x79782e37, 0x3163202c, 0x74202c37, 0xd0a0d31, 0x7865740a, 0x7220646c, 0x72202c34, 0x73202c34, 0x740a0d31, 0x646c7865, 0x2c357220, 0x2c357220, 0xd317320, 0x7865740a, 0x7220646c, 0x72202c36, 0x73202c36, 0x740a0d31, 0x646c7865, 0x2c377220, 0x2c377220, 0xd317320, 0x2f0a0d0a, 0x6173202f, 0x656c706d, 0xa0d3120, 0x20646461, 0x202c3472, 0x612e3472, 0x742d202c, 0xd772e32, 0x64616d0a, 0x2c347220, 0x2c347220, 0x2e376320, 0x2d202c78, 0x772e3763, 0x6d630a0d, 0x34722070, 0x6267722e, 0x3472202c, 0x3072202c, 0x3172202c, 0x64610a0d, 0x33722064, 0x6267722e, 0x3372202c, 0x3472202c, 0xa0d0a0d, 0x73202f2f, 0x6c706d61, 0xd322065, 0x6464610a, 0x2c357220, 0x2e357220, 0x2d202c61, 0x772e3274, 0x616d0a0d, 0x35722064, 0x3572202c, 0x3763202c, 0x202c782e, 0x2e37632d, 0x630a0d77, 0x7220706d, 0x67722e35, 0x72202c62, 0x72202c35, 0x72202c30, 0x610a0d31, 0x72206464, 0x67722e33, 0x72202c62, 0x72202c33, 0xd0a0d35, 0x202f2f0a, 0x706d6173, 0x3320656c, 0x64610a0d, 0x36722064, 0x3672202c, 0x202c612e, 0x2e32742d, 0x6d0a0d77, 0x72206461, 0x72202c36, 0x63202c36, 0x2c782e37, 0x37632d20, 0xa0d772e, 0x20706d63, 0x722e3672, 0x202c6267, 0x202c3672, 0x202c3072, 0xa0d3172, 0x20646461, 0x722e3372, 0x202c6267, 0x202c3372, 0xa0d3672, 0x2f2f0a0d, 0x6d617320, 0x20656c70, 0x610a0d34, 0x72206464, 0x72202c37, 0x2c612e37, 0x32742d20, 0xa0d772e, 0x2064616d, 0x202c3772, 0x202c3772, 0x782e3763, 0x632d202c, 0xd772e37, 0x706d630a, 0x2e377220, 0x2c626772, 0x2c377220, 0x2c307220, 0xd317220, 0x6464610a, 0x2e337220, 0x2c626772, 0x2c337220, 0xd377220, 0x2f0a0d0a, 0x6f6e202f, 0x6c616d72, 0x20657a69, 0x6f6c6f63, 0x6d0a0d72, 0x72206c75, 0x67722e33, 0x72202c62, 0x63202c33, 0xd782e38, 0x2f2f2f0a, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xd0a0d2f, 0x6d0a0d0a, 0x72206461, 0x76202c31, 0x2c772e30, 0x2e376320, 0x2d202c79, 0x7a2e3763, 0x64610a0d, 0x61735f64, 0x33722074, 0x202c612e, 0x202c3272, 0xa0d3172, 0x20646461, 0x612e3372, 0x3372202c, 0x202c612e, 0x612e3363, 0x756d0a0d, 0x3372206c, 0x202c612e, 0x612e3372, 0x3763202c, 0xa0d782e, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0x2f2f2f2f, 0xa0d0a0d, 0x2f2f0a0d, 0x70706120, 0x7320796c, 0x6e6f6365, 0x65742064, 0x72757478, 0x740a0d65, 0x646c7865, 0x2c327220, 0x2c337420, 0xd337320, 0x6c756d0a, 0x2c337220, 0x2c337220, 0xd327220, 0x6d0a0d0a, 0x6f20766f, 0x202c3043, 0xa0d3372, 0x63694d00, 0x6f736f72, 0x28207466, 0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x65737341, 0x656c626d, 0x2e352072, 0x302e3430, 0x39322e30, 0xab003430, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x200001f, 0x90000000, 0xa00f0803, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x80000000, 0xb00f0002, 0x200001f, 0x80000000, 0xb0030003, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000000, 0x90070001, 0x3000042, 0x800f0002, 0xb0e40000, 0xa0e40800, 0x3000005, 0x800f0003, 0x90e40000, 0x80e40002, 0x3000005, 0x801f0000, 0x80e40003, 0xa0000007, 0x3000005, 0x80070001, 0x90e40001, 0x80e40002, 0x3000005, 0x80170001, 0x80e40001, 0xa0000007, 0x3000042, 0x800f0004, 0xb0e40001, 0xa0e40801, 0x4000012, 0x80070001, 0x80e40004, 0x80e40001, 0x80e40000, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070003, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80030004, 0xa0e4000a, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000b, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e4000c, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e4000d, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000002, 0x80030004, 0xa0e4000e, 0xb0e40001, 0x3000002, 0x80030005, 0xa0e4000f, 0xb0e40001, 0x3000002, 0x80030006, 0xa0e40010, 0xb0e40001, 0x3000002, 0x80030007, 0xa0e40011, 0xb0e40001, 0x3000042, 0x800f0004, 0x80e40004, 0xa0e40801, 0x3000042, 0x800f0005, 0x80e40005, 0xa0e40801, 0x3000042, 0x800f0006, 0x80e40006, 0xa0e40801, 0x3000042, 0x800f0007, 0x80e40007, 0xa0e40801, 0x3000002, 0x800f0004, 0x80ff0004, 0xb1ff0002, 0x4000004, 0x800f0004, 0x80e40004, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070004, 0x80e40004, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40004, 0x3000002, 0x800f0005, 0x80ff0005, 0xb1ff0002, 0x4000004, 0x800f0005, 0x80e40005, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070005, 0x80e40005, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40005, 0x3000002, 0x800f0006, 0x80ff0006, 0xb1ff0002, 0x4000004, 0x800f0006, 0x80e40006, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070006, 0x80e40006, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40006, 0x3000002, 0x800f0007, 0x80ff0007, 0xb1ff0002, 0x4000004, 0x800f0007, 0x80e40007, 0xa0000007, 0xa1ff0007, 0x4000058, 0x80070007, 0x80e40007, 0x80e40000, 0x80e40001, 0x3000002, 0x80070003, 0x80e40003, 0x80e40007, 0x3000005, 0x80070003, 0x80e40003, 0xa0000008, 0x4000004, 0x800f0001, 0x90ff0000, 0xa0550007, 0xa1aa0007, 0x3000002, 0x80180003, 0x80e40002, 0x80e40001, 0x3000002, 0x80080003, 0x80ff0003, 0xa0ff0003, 0x3000005, 0x80080003, 0x80ff0003, 0xa0000007, 0x3000042, 0x800f0002, 0xb0e40003, 0xa0e40803, 0x3000005, 0x800f0003, 0x80e40003, 0x80e40002, 0x2000001, 0x800f0800, 0x80e40003, 0xffff };
static SRenderState rsshaG5DiffuseTex2Terrain[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaG5DiffuseTex2Terrain[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateG5DiffuseTex2Terrain[] = { 
{ D3DRS_ALPHATESTENABLE, TRUE}, 
{ D3DRS_ALPHAFUNC, D3DCMP_GREATEREQUAL}, 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateG5DiffuseTex2Terrain[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psG5DiffuseTex2Terrain( 62 , dwps11G5DiffuseTex2Terrain,0,0,0, rsshaG5DiffuseTex2Terrain, tssshaG5DiffuseTex2Terrain, rsstateG5DiffuseTex2Terrain, tssstateG5DiffuseTex2Terrain );
static DWORD dwps11HLSLMain0[] ={ 0xffff0101, 0x34fffe, 0x42415443, 0x1c, 0x9b, 0xffff0101, 0x3, 0x1c, 0x100, 0x94, 0x58, 0x3, 0x1, 0x64, 0x0, 0x74, 0x10003, 0x1, 0x64, 0x0, 0x7b, 0x40002, 0x1, 0x84, 0x0, 0x66666944, 0x54657375, 0xab007865, 0xc0004, 0x10001, 0x1, 0x0, 0x64616853, 0x6600776f, 0x73616942, 0xababab00, 0x30001, 0x40001, 0x1, 0x0, 0x315f7370, 0x4d00315f, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 0x6c69706d, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x51, 0xa00f0000, 0x0, 0x0, 0x0, 0x3f000000, 0x51, 0xa00f0001, 0x0, 0x0, 0x0, 0xbf800000, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x2, 0x82180001, 0xb0ff0001, 0x91ff0001, 0x2, 0x80080001, 0x80ff0001, 0xa0ff0004, 0x40000005, 0xb2170001, 0xb0e40000, 0x90e40001, 0x2, 0xb0080001, 0x81ff0001, 0xa0ff0000, 0x40000005, 0x82170001, 0xb0e40000, 0x90e40000, 0x5, 0xb0080000, 0xb0ff0000, 0x90ff0000, 0x4, 0x80080000, 0xb0ff0001, 0xa0ff0001, 0xa0ff0000, 0x50, 0xb0070000, 0x80ff0000, 0xb0e40001, 0x80e40001, 0x1, 0x800f0000, 0xb0e40000, 0xffff };
static DWORD dwps14HLSLMain0[] ={ 0xffff0104, 0x34fffe, 0x42415443, 0x1c, 0x9b, 0xffff0104, 0x3, 0x1c, 0x100, 0x94, 0x58, 0x10003, 0x1, 0x64, 0x0, 0x74, 0x3, 0x1, 0x64, 0x0, 0x7b, 0x40002, 0x1, 0x84, 0x0, 0x66666944, 0x54657375, 0xab007865, 0xc0004, 0x10001, 0x1, 0x0, 0x64616853, 0x6600776f, 0x73616942, 0xababab00, 0x30001, 0x40001, 0x1, 0x0, 0x315f7370, 0x4d00345f, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 0x6c69706d, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x51, 0xa00f0000, 0x0, 0x0, 0x0, 0x3f000000, 0x42, 0x800f0000, 0xb0e40001, 0x42, 0x800f0001, 0xb0e40000, 0x2, 0x82180000, 0x80ff0000, 0x91ff0001, 0x2, 0x80080000, 0x80ff0000, 0xa0ff0004, 0x40000005, 0x82170002, 0x80e40001, 0x90e40001, 0x2, 0x80080000, 0x81ff0000, 0xa0ff0000, 0x40000005, 0x82170003, 0x80e40001, 0x90e40000, 0x5, 0x80080001, 0x80ff0001, 0x90ff0000, 0x40000058, 0x80070001, 0x80ff0000, 0x80e40003, 0x80e40002, 0x1, 0x800f0000, 0x80e40001, 0xffff };
static DWORD dwps20HLSLMain0[] ={ 0xffff0200, 0x34fffe, 0x42415443, 0x1c, 0x9b, 0xffff0200, 0x3, 0x1c, 0x100, 0x94, 0x58, 0x3, 0x1, 0x64, 0x0, 0x74, 0x10003, 0x1, 0x64, 0x0, 0x7b, 0x40002, 0x1, 0x84, 0x0, 0x66666944, 0x54657375, 0xab007865, 0xc0004, 0x10001, 0x1, 0x0, 0x64616853, 0x6600776f, 0x73616942, 0xababab00, 0x30001, 0x40001, 0x1, 0x0, 0x325f7370, 0x4d00305f, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 0x6c69706d, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x5000051, 0xa00f0000, 0x40800000, 0x3f000000, 0x0, 0x0, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000000, 0x900f0001, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x3000042, 0x800f0001, 0xb0e40001, 0xa0e40801, 0x3000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 0x3000002, 0x80080001, 0x80ff0001, 0x91ff0001, 0x3000005, 0x80070001, 0x80e40000, 0x90e40001, 0x3000005, 0x80180001, 0x80ff0001, 0xa0000000, 0x3000005, 0x80170001, 0x80e40001, 0xa0000000, 0x3000002, 0x80080001, 0x80ff0001, 0xa0ff0004, 0x3000005, 0x80070000, 0x80e40000, 0x90e40000, 0x3000002, 0x80080001, 0x81ff0001, 0xa0550000, 0x3000005, 0x80170000, 0x80e40000, 0xa0000000, 0x3000005, 0x80080000, 0x80ff0000, 0x90ff0000, 0x4000058, 0x80070000, 0x80ff0001, 0x80e40000, 0x80e40001, 0x2000001, 0x800f0800, 0x80e40000, 0xffff };
static DWORD dwps20aHLSLMain0[] ={ 0xffff0201, 0x34fffe, 0x42415443, 0x1c, 0x9b, 0xffff0201, 0x3, 0x1c, 0x100, 0x94, 0x58, 0x3, 0x1, 0x64, 0x0, 0x74, 0x10003, 0x1, 0x64, 0x0, 0x7b, 0x40002, 0x1, 0x84, 0x0, 0x66666944, 0x54657375, 0xab007865, 0xc0004, 0x10001, 0x1, 0x0, 0x64616853, 0x6600776f, 0x73616942, 0xababab00, 0x30001, 0x40001, 0x1, 0x0, 0x325f7370, 0x4d00615f, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 0x6c69706d, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x5000051, 0xa00f0000, 0x40800000, 0x3f000000, 0x0, 0x0, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000000, 0x900f0001, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x3000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 0x3000042, 0x800f0001, 0xb0e40001, 0xa0e40801, 0x3000002, 0x80080001, 0x80ff0001, 0x91ff0001, 0x3000005, 0x80180001, 0x80ff0001, 0xa0000000, 0x3000002, 0x80080001, 0x80ff0001, 0xa0ff0004, 0x3000002, 0x80080001, 0x81ff0001, 0xa0550000, 0x3000005, 0x80070001, 0x80e40000, 0x90e40001, 0x3000005, 0x80070000, 0x80e40000, 0x90e40000, 0x3000005, 0x80170001, 0x80e40001, 0xa0000000, 0x3000005, 0x80170000, 0x80e40000, 0xa0000000, 0x3000005, 0x80080000, 0x80ff0000, 0x90ff0000, 0x4000058, 0x80070000, 0x80ff0001, 0x80e40000, 0x80e40001, 0x2000001, 0x800f0800, 0x80e40000, 0xffff };
static SRenderState rsshaHLSLMain0[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaHLSLMain0[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateHLSLMain0[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateHLSLMain0[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psHLSLMain0( 63 , dwps11HLSLMain0,dwps14HLSLMain0,dwps20HLSLMain0,dwps20aHLSLMain0, rsshaHLSLMain0, tssshaHLSLMain0, rsstateHLSLMain0, tssstateHLSLMain0 );
static DWORD dwps11HLSLMain1[] ={ 0xffff0101, 0x34fffe, 0x42415443, 0x1c, 0x9b, 0xffff0101, 0x3, 0x1c, 0x100, 0x94, 0x58, 0x3, 0x1, 0x64, 0x0, 0x74, 0x10003, 0x1, 0x64, 0x0, 0x7b, 0x40002, 0x1, 0x84, 0x0, 0x66666944, 0x54657375, 0xab007865, 0xc0004, 0x10001, 0x1, 0x0, 0x64616853, 0x6600776f, 0x73616942, 0xababab00, 0x30001, 0x40001, 0x1, 0x0, 0x315f7370, 0x4d00315f, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 0x6c69706d, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x51, 0xa00f0000, 0x0, 0x0, 0x0, 0x3f000000, 0x51, 0xa00f0001, 0x0, 0x0, 0x0, 0xbf800000, 0x42, 0xb00f0000, 0x42, 0xb00f0001, 0x2, 0x82180001, 0xb0ff0001, 0x91ff0001, 0x2, 0x80080001, 0x80ff0001, 0xa0ff0004, 0x40000005, 0xb2170001, 0xb0e40000, 0x90e40001, 0x2, 0xb0080001, 0x81ff0001, 0xa0ff0000, 0x40000005, 0x82170001, 0xb0e40000, 0x90e40000, 0x5, 0xb0080000, 0xb0ff0000, 0x90ff0000, 0x4, 0x80080000, 0xb0ff0001, 0xa0ff0001, 0xa0ff0000, 0x50, 0xb0070000, 0x80ff0000, 0xb0e40001, 0x80e40001, 0x1, 0x800f0000, 0xb0e40000, 0xffff };
static DWORD dwps14HLSLMain1[] ={ 0xffff0104, 0x34fffe, 0x42415443, 0x1c, 0x9b, 0xffff0104, 0x3, 0x1c, 0x100, 0x94, 0x58, 0x10003, 0x1, 0x64, 0x0, 0x74, 0x3, 0x1, 0x64, 0x0, 0x7b, 0x40002, 0x1, 0x84, 0x0, 0x66666944, 0x54657375, 0xab007865, 0xc0004, 0x10001, 0x1, 0x0, 0x64616853, 0x6600776f, 0x73616942, 0xababab00, 0x30001, 0x40001, 0x1, 0x0, 0x315f7370, 0x4d00345f, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 0x6c69706d, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x51, 0xa00f0000, 0x0, 0x0, 0x0, 0x3f000000, 0x42, 0x800f0000, 0xb0e40001, 0x42, 0x800f0001, 0xb0e40000, 0x2, 0x82180000, 0x80ff0000, 0x91ff0001, 0x2, 0x80080000, 0x80ff0000, 0xa0ff0004, 0x40000005, 0x82170002, 0x80e40001, 0x90e40001, 0x2, 0x80080000, 0x81ff0000, 0xa0ff0000, 0x40000005, 0x82170003, 0x80e40001, 0x90e40000, 0x5, 0x80080001, 0x80ff0001, 0x90ff0000, 0x40000058, 0x80070001, 0x80ff0000, 0x80e40003, 0x80e40002, 0x1, 0x800f0000, 0x80e40001, 0xffff };
static DWORD dwps20HLSLMain1[] ={ 0xffff0200, 0x34fffe, 0x42415443, 0x1c, 0x9b, 0xffff0200, 0x3, 0x1c, 0x100, 0x94, 0x58, 0x3, 0x1, 0x64, 0x0, 0x74, 0x10003, 0x1, 0x64, 0x0, 0x7b, 0x40002, 0x1, 0x84, 0x0, 0x66666944, 0x54657375, 0xab007865, 0xc0004, 0x10001, 0x1, 0x0, 0x64616853, 0x6600776f, 0x73616942, 0xababab00, 0x30001, 0x40001, 0x1, 0x0, 0x325f7370, 0x4d00305f, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 0x6c69706d, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x5000051, 0xa00f0000, 0x40800000, 0x3f000000, 0x0, 0x0, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000000, 0x900f0001, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x3000042, 0x800f0001, 0xb0e40001, 0xa0e40801, 0x3000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 0x3000002, 0x80080001, 0x80ff0001, 0x91ff0001, 0x3000005, 0x80070001, 0x80e40000, 0x90e40001, 0x3000005, 0x80180001, 0x80ff0001, 0xa0000000, 0x3000005, 0x80170001, 0x80e40001, 0xa0000000, 0x3000002, 0x80080001, 0x80ff0001, 0xa0ff0004, 0x3000005, 0x80070000, 0x80e40000, 0x90e40000, 0x3000002, 0x80080001, 0x81ff0001, 0xa0550000, 0x3000005, 0x80170000, 0x80e40000, 0xa0000000, 0x3000005, 0x80080000, 0x80ff0000, 0x90ff0000, 0x4000058, 0x80070000, 0x80ff0001, 0x80e40000, 0x80e40001, 0x2000001, 0x800f0800, 0x80e40000, 0xffff };
static DWORD dwps20aHLSLMain1[] ={ 0xffff0201, 0x34fffe, 0x42415443, 0x1c, 0x9b, 0xffff0201, 0x3, 0x1c, 0x100, 0x94, 0x58, 0x3, 0x1, 0x64, 0x0, 0x74, 0x10003, 0x1, 0x64, 0x0, 0x7b, 0x40002, 0x1, 0x84, 0x0, 0x66666944, 0x54657375, 0xab007865, 0xc0004, 0x10001, 0x1, 0x0, 0x64616853, 0x6600776f, 0x73616942, 0xababab00, 0x30001, 0x40001, 0x1, 0x0, 0x325f7370, 0x4d00615f, 0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 0x6c69706d, 0x35207265, 0x2e34302e, 0x322e3030, 0x343039, 0x5000051, 0xa00f0000, 0x40800000, 0x3f000000, 0x0, 0x0, 0x200001f, 0x80000000, 0x900f0000, 0x200001f, 0x80000000, 0x900f0001, 0x200001f, 0x80000000, 0xb0030000, 0x200001f, 0x80000000, 0xb0030001, 0x200001f, 0x90000000, 0xa00f0800, 0x200001f, 0x90000000, 0xa00f0801, 0x3000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 0x3000042, 0x800f0001, 0xb0e40001, 0xa0e40801, 0x3000002, 0x80080001, 0x80ff0001, 0x91ff0001, 0x3000005, 0x80180001, 0x80ff0001, 0xa0000000, 0x3000002, 0x80080001, 0x80ff0001, 0xa0ff0004, 0x3000002, 0x80080001, 0x81ff0001, 0xa0550000, 0x3000005, 0x80070001, 0x80e40000, 0x90e40001, 0x3000005, 0x80070000, 0x80e40000, 0x90e40000, 0x3000005, 0x80170001, 0x80e40001, 0xa0000000, 0x3000005, 0x80170000, 0x80e40000, 0xa0000000, 0x3000005, 0x80080000, 0x80ff0000, 0x90ff0000, 0x4000058, 0x80070000, 0x80ff0001, 0x80e40000, 0x80e40001, 0x2000001, 0x800f0800, 0x80e40000, 0xffff };
static SRenderState rsshaHLSLMain1[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssshaHLSLMain1[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
static SRenderState rsstateHLSLMain1[] = { 
{(D3DRENDERSTATETYPE)0,0} };
static STextureStageState tssstateHLSLMain1[] = { 
{-1,(D3DTEXTURESTAGESTATETYPE)0,0} };
SPShader psHLSLMain1( 64 , dwps11HLSLMain1,dwps14HLSLMain1,dwps20HLSLMain1,dwps20aHLSLMain1, rsshaHLSLMain1, tssshaHLSLMain1, rsstateHLSLMain1, tssstateHLSLMain1 );

SVShader *vsAllShaders[52] = { &vsHLSLMain0, &vsHLSLMain1, &vsPureGeometry, &vsConstLight, &vsRender2D, &vsRender2DClouds, &vsDrawTexU, &vsTexture, &vsSimpleSky, &vsTexturePerVertexTransp, &vsDepth, &vsDepthLP, &vsDepthATTextureLP, &vsDepthATTexture, &vsLinearDepth16, &vsDepth16, &vsLinearDepth16ATTexture, &vsDepth16ATTexture, &vsLPDepth, &vsTexturePerVertexTranspNLP, &vsParticleLMDirectionalTest, &vsRenderClouds, &vsG3DiffuseTex, &vsG3DiffuseTexLP, &vsG3DiffuseTexEXT, &vsG3TransparentGeom, &vsG3TransparentGeomEXT, &vsG3DiffuseTex2, &vsG3DiffuseTex2NoShadows, &vsG3DiffuseTexDetail, &vsG3DiffuseTexDetailLM, &vsG3DiffuseTexTerrain, &vsG3DiffuseTex2Terrain, &vsShowLM, &vsG3DiffuseTexSpec, &vsG3DiffuseTexSpecLM, &vsBlend2TexColor, &vsReflectionWater, &vsReflectionWaterCube, &vsG3Particles, &vsGlossedMirror, &vsG3DiffuseTexMirror, &vsTracks, &vsCLSkyLight3, &vsPointCubeMapDepth, &vsCLPointLightShadowed, &vsClouds, &vsG3AnimWaterWithoutHorse, &vsG3AnimWater, &vsG3AnimWaterOld, &vsG3Surf, &vsG3WriteZ };

SPShader *psAllShaders[64] = { &psG3WriteZ, &psG3DepthOfField, &psDp3, &psAlphaTestTexturePerVertexTransp, &psG3DiffuseTex, &psG3DiffuseTexNoAlpha, &psG3DiffuseTexNoShadows, &psG3TransparentGeomNoLM, &psG3TransparentGeom, &psG3DiffuseTexMirror, &psG3DiffuseTexDetail, &psG3DiffuseTex2, &psG3DiffuseTexLM, &psG3DiffuseTexLMNoShadows, &psG3DiffuseTexDetailLM, &psG3DiffuseTexTerrain, &psG3DiffuseTex2Terrain, &psG3DiffuseTexSpec, &psG3DiffuseTexSpecLM, &psTFactor, &psTextureCopyAlpha, &psTextureAlpha, &psTextureTFactor, &psClouds, &psDiffuseTexture, &psTexturePlusDiffuse, &psTnLLitTexture, &psTnLLitTexture2, &psTnLLitTextureTerrain, &psTnLLitTexture2Terrain, &psSoftShadowTest, &psDepthATTexture, &psCloudShadows, &psDepth16ATTexture, &psConstant, &psDiffuse, &psDiffuseAlpha, &psTransparentDifTex4, &psG3Particles, &psG3SimpleParticles, &psGlossedMirror, &psBlend2TexColor, &psReflectionWaterCube, &psReflectionWater, &psG3AnimWater, &psG3AnimWaterWithoutHorse, &psCLSkyLight3, &psCLSkyLight3Translucent, &psLinearToGamma, &psPointCubeMapDepth, &psCLPointLightShadowed, &psG5DiffuseTex, &psG5TransparentGeom, &psG5DiffuseTexMirror, &psG5DiffuseTexDetail, &psG5DiffuseTex2, &psG5DiffuseTexLM, &psG5DiffuseTexDetailLM, &psG5DiffuseTexSpec, &psG5DiffuseTexSpecLM, &psG5DiffuseTexTerrain, &psG5DiffuseTex2Terrain, &psHLSLMain0, &psHLSLMain1 };


SHLSLShader hlslMain[2] = {{1,63},{2,64}};

