#ifndef __GfxShaders_H__
#define __GfxShaders_H__
struct SVShader;
struct SPShader;
struct SHLSLShader;
extern SVShader vsHLSLMain0;
extern SVShader vsHLSLMain1;
extern SVShader vsPureGeometry;
extern SVShader vsConstLight;
extern SVShader vsRender2D;
extern SVShader vsRender2DClouds;
extern SVShader vsDrawTexU;
extern SVShader vsTexture;
extern SVShader vsSimpleSky;
extern SVShader vsTexturePerVertexTransp;
extern SVShader vsDepth;
extern SVShader vsDepthLP;
extern SVShader vsDepthATTextureLP;
extern SVShader vsDepthATTexture;
extern SVShader vsLinearDepth16;
extern SVShader vsDepth16;
extern SVShader vsLinearDepth16ATTexture;
extern SVShader vsDepth16ATTexture;
extern SVShader vsLPDepth;
extern SVShader vsTexturePerVertexTranspNLP;
extern SVShader vsParticleLMDirectionalTest;
extern SVShader vsRenderClouds;
extern SVShader vsG3DiffuseTex;
extern SVShader vsG3DiffuseTexLP;
extern SVShader vsG3DiffuseTexEXT;
extern SVShader vsG3TransparentGeom;
extern SVShader vsG3TransparentGeomEXT;
extern SVShader vsG3DiffuseTex2;
extern SVShader vsG3DiffuseTex2NoShadows;
extern SVShader vsG3DiffuseTexDetail;
extern SVShader vsG3DiffuseTexDetailLM;
extern SVShader vsG3DiffuseTexTerrain;
extern SVShader vsG3DiffuseTex2Terrain;
extern SVShader vsShowLM;
extern SVShader vsG3DiffuseTexSpec;
extern SVShader vsG3DiffuseTexSpecLM;
extern SVShader vsBlend2TexColor;
extern SVShader vsReflectionWater;
extern SVShader vsReflectionWaterCube;
extern SVShader vsG3Particles;
extern SVShader vsGlossedMirror;
extern SVShader vsG3DiffuseTexMirror;
extern SVShader vsTracks;
extern SVShader vsCLSkyLight3;
extern SVShader vsPointCubeMapDepth;
extern SVShader vsCLPointLightShadowed;
extern SVShader vsClouds;
extern SVShader vsG3AnimWaterWithoutHorse;
extern SVShader vsG3AnimWater;
extern SVShader vsG3AnimWaterOld;
extern SVShader vsG3Surf;
extern SVShader vsG3WriteZ;

extern SVShader *vsAllShaders[52];

extern SPShader psG3WriteZ;
extern SPShader psG3DepthOfField;
extern SPShader psDp3;
extern SPShader psAlphaTestTexturePerVertexTransp;
extern SPShader psG3DiffuseTex;
extern SPShader psG3DiffuseTexNoAlpha;
extern SPShader psG3DiffuseTexNoShadows;
extern SPShader psG3TransparentGeomNoLM;
extern SPShader psG3TransparentGeom;
extern SPShader psG3DiffuseTexMirror;
extern SPShader psG3DiffuseTexDetail;
extern SPShader psG3DiffuseTex2;
extern SPShader psG3DiffuseTexLM;
extern SPShader psG3DiffuseTexLMNoShadows;
extern SPShader psG3DiffuseTexDetailLM;
extern SPShader psG3DiffuseTexTerrain;
extern SPShader psG3DiffuseTex2Terrain;
extern SPShader psG3DiffuseTexSpec;
extern SPShader psG3DiffuseTexSpecLM;
extern SPShader psTFactor;
extern SPShader psTextureCopyAlpha;
extern SPShader psTextureAlpha;
extern SPShader psTextureTFactor;
extern SPShader psClouds;
extern SPShader psDiffuseTexture;
extern SPShader psTexturePlusDiffuse;
extern SPShader psTnLLitTexture;
extern SPShader psTnLLitTexture2;
extern SPShader psTnLLitTextureTerrain;
extern SPShader psTnLLitTexture2Terrain;
extern SPShader psSoftShadowTest;
extern SPShader psDepthATTexture;
extern SPShader psCloudShadows;
extern SPShader psDepth16ATTexture;
extern SPShader psConstant;
extern SPShader psDiffuse;
extern SPShader psDiffuseAlpha;
extern SPShader psTransparentDifTex4;
extern SPShader psG3Particles;
extern SPShader psG3SimpleParticles;
extern SPShader psGlossedMirror;
extern SPShader psBlend2TexColor;
extern SPShader psReflectionWaterCube;
extern SPShader psReflectionWater;
extern SPShader psG3AnimWater;
extern SPShader psG3AnimWaterWithoutHorse;
extern SPShader psCLSkyLight3;
extern SPShader psCLSkyLight3Translucent;
extern SPShader psLinearToGamma;
extern SPShader psPointCubeMapDepth;
extern SPShader psCLPointLightShadowed;
extern SPShader psG5DiffuseTex;
extern SPShader psG5TransparentGeom;
extern SPShader psG5DiffuseTexMirror;
extern SPShader psG5DiffuseTexDetail;
extern SPShader psG5DiffuseTex2;
extern SPShader psG5DiffuseTexLM;
extern SPShader psG5DiffuseTexDetailLM;
extern SPShader psG5DiffuseTexSpec;
extern SPShader psG5DiffuseTexSpecLM;
extern SPShader psG5DiffuseTexTerrain;
extern SPShader psG5DiffuseTex2Terrain;
extern SPShader psHLSLMain0;
extern SPShader psHLSLMain1;

extern SPShader *psAllShaders[64];

extern SHLSLShader hlslMain[2];
namespace NShader
{
  const int ASDF = 0;
  const int EPRST = 1;
}

#endif
